{
	"id": "6fb49eac0bbe3afa48fff5592f0da774",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"LotteryEngine.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\n/// @title CitreaLotteryEngine\r\n/// @notice Enhanced lottery engine for ChainPot on Citrea with multiple randomness sources\r\n/// @dev Provides secure random winner selection using Bitcoin block hashes and commit-reveal schemes\r\ncontract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {\r\n    \r\n    // ==================== Constants & State ====================\r\n    \r\n    uint256 private nonce;\r\n    uint64 private sequenceNumber;\r\n    \r\n    // Multiple randomness sources\r\n    bool public useBlockHashRandomness = true;\r\n    bool public useCommitRevealScheme = true;\r\n    uint256 public commitRevealDelay = 300; // 5 minutes\r\n    \r\n    // Enhanced security features\r\n    uint256 public constant MAX_PARTICIPANTS = 1000;\r\n    uint256 public constant MIN_REVEAL_DELAY = 60; // 1 minute minimum\r\n    uint256 public constant MAX_REVEAL_DELAY = 3600; // 1 hour maximum\r\n    \r\n    // ==================== Structs ====================\r\n    \r\n    struct RandomRequest {\r\n        RequestType requestType;\r\n        address[] participants;\r\n        uint256 min;\r\n        uint256 max;\r\n        address requester;\r\n        bool fulfilled;\r\n        uint256 requestBlock;\r\n        uint256 timestamp;\r\n        bytes32 commitHash;\r\n        uint256 revealDeadline;\r\n        bool isCommitReveal;\r\n    }\r\n    \r\n    struct CommitReveal {\r\n        bytes32 commitment;\r\n        uint256 revealValue;\r\n        bool revealed;\r\n        uint256 commitBlock;\r\n        uint256 revealDeadline;\r\n    }\r\n    \r\n    enum RequestType {\r\n        WINNER_SELECTION,\r\n        RANDOM_NUMBER,\r\n        WEIGHTED_SELECTION\r\n    }\r\n    \r\n    // ==================== Storage ====================\r\n    \r\n    mapping(uint64 => RandomRequest) public pendingRequests;\r\n    mapping(address => mapping(uint64 => CommitReveal)) public commitReveals;\r\n    mapping(uint64 => address[]) public requestRevealers;\r\n    \r\n    // Bitcoin-specific randomness\r\n    mapping(uint256 => bytes32) public historicalBlockHashes;\r\n    uint256 public lastStoredBlock;\r\n    \r\n    // Authorized randomness providers (for enterprise use)\r\n    mapping(address => bool) public authorizedProviders;\r\n    \r\n    // ==================== Events ====================\r\n    \r\n    event RandomWinnerSelected(\r\n        address indexed winner, \r\n        uint256 randomSeed, \r\n        uint64 indexed sequenceNumber,\r\n        string method\r\n    );\r\n    event RandomNumberGenerated(\r\n        uint256 randomNumber, \r\n        uint64 indexed sequenceNumber,\r\n        string method\r\n    );\r\n    event RandomRequested(\r\n        uint64 indexed sequenceNumber, \r\n        RequestType requestType,\r\n        bool useCommitReveal\r\n    );\r\n    event CommitSubmitted(\r\n        uint64 indexed sequenceNumber,\r\n        address indexed revealer,\r\n        bytes32 commitment\r\n    );\r\n    event RevealSubmitted(\r\n        uint64 indexed sequenceNumber,\r\n        address indexed revealer,\r\n        uint256 revealValue\r\n    );\r\n    event BlockHashStored(uint256 blockNumber, bytes32 blockHash);\r\n    event RandomnessMethodUpdated(bool blockHash, bool commitReveal);\r\n    event AuthorizedProviderUpdated(address indexed provider, bool authorized);\r\n    \r\n    // ==================== Constructor ====================\r\n    \r\n    constructor() Ownable(msg.sender) {\r\n        nonce = 1;\r\n        sequenceNumber = 1;\r\n        lastStoredBlock = block.number;\r\n        \r\n        // Store initial block hash\r\n        historicalBlockHashes[block.number] = blockhash(block.number - 1);\r\n    }\r\n    \r\n    // ==================== Admin Functions ====================\r\n    \r\n    function setRandomnessMethod(bool _useBlockHash, bool _useCommitReveal) external onlyOwner {\r\n        require(_useBlockHash || _useCommitReveal, \"At least one method must be enabled\");\r\n        useBlockHashRandomness = _useBlockHash;\r\n        useCommitRevealScheme = _useCommitReveal;\r\n        emit RandomnessMethodUpdated(_useBlockHash, _useCommitReveal);\r\n    }\r\n    \r\n    function setCommitRevealDelay(uint256 _delay) external onlyOwner {\r\n        require(_delay >= MIN_REVEAL_DELAY && _delay <= MAX_REVEAL_DELAY, \"Invalid delay\");\r\n        commitRevealDelay = _delay;\r\n    }\r\n    \r\n    function setAuthorizedProvider(address provider, bool authorized) external onlyOwner {\r\n        require(provider != address(0), \"Invalid provider\");\r\n        authorizedProviders[provider] = authorized;\r\n        emit AuthorizedProviderUpdated(provider, authorized);\r\n    }\r\n    \r\n    function storeBlockHash(uint256 blockNumber) external {\r\n        require(blockNumber < block.number, \"Block not yet mined\");\r\n        require(block.number - blockNumber <= 256, \"Block hash unavailable\");\r\n        \r\n        bytes32 blockHash = blockhash(blockNumber);\r\n        require(blockHash != bytes32(0), \"Invalid block hash\");\r\n        \r\n        historicalBlockHashes[blockNumber] = blockHash;\r\n        if (blockNumber > lastStoredBlock) {\r\n            lastStoredBlock = blockNumber;\r\n        }\r\n        \r\n        emit BlockHashStored(blockNumber, blockHash);\r\n    }\r\n    \r\n    // ==================== Core Randomness Functions ====================\r\n    \r\n    /// @notice Select a random winner from participants using multiple randomness sources\r\n    /// @param participants Array of participant addresses\r\n    /// @param useCommitReveal Whether to use commit-reveal scheme for this request\r\n    /// @return sequenceNum The sequence number for tracking this request\r\n    function selectRandomWinner(\r\n        address[] memory participants,\r\n        bool useCommitReveal\r\n    ) external whenNotPaused returns (uint64 sequenceNum) {\r\n        require(participants.length > 0 && participants.length <= MAX_PARTICIPANTS, \"Invalid participant count\");\r\n        require(useBlockHashRandomness || useCommitRevealScheme, \"No randomness method enabled\");\r\n        \r\n        sequenceNum = sequenceNumber++;\r\n        \r\n        // Create request\r\n        pendingRequests[sequenceNum] = RandomRequest({\r\n            requestType: RequestType.WINNER_SELECTION,\r\n            participants: participants,\r\n            min: 0,\r\n            max: 0,\r\n            requester: msg.sender,\r\n            fulfilled: false,\r\n            requestBlock: block.number,\r\n            timestamp: block.timestamp,\r\n            commitHash: bytes32(0),\r\n            revealDeadline: block.timestamp + commitRevealDelay,\r\n            isCommitReveal: useCommitReveal && useCommitRevealScheme\r\n        });\r\n        \r\n        emit RandomRequested(sequenceNum, RequestType.WINNER_SELECTION, useCommitReveal);\r\n        \r\n        // If not using commit-reveal, try immediate resolution\r\n        if (!useCommitReveal || !useCommitRevealScheme) {\r\n            _tryResolveRequest(sequenceNum);\r\n        }\r\n        \r\n        return sequenceNum;\r\n    }\r\n    \r\n    /// @notice Overloaded function for backward compatibility (defaults to block hash method)\r\n    function selectRandomWinner(address[] memory participants) \r\n        external \r\n        whenNotPaused \r\n        returns (uint64) \r\n    {\r\n        return this.selectRandomWinner(participants, false);\r\n    }\r\n    \r\n    /// @notice Generate a random number within a range\r\n    /// @param min Minimum value (inclusive)\r\n    /// @param max Maximum value (exclusive)\r\n    /// @param useCommitReveal Whether to use commit-reveal scheme\r\n    /// @return sequenceNum The sequence number for tracking this request\r\n    function getRandomNumber(\r\n        uint256 min, \r\n        uint256 max,\r\n        bool useCommitReveal\r\n    ) external whenNotPaused returns (uint64 sequenceNum) {\r\n        require(max > min, \"Invalid range\");\r\n        require(max - min <= type(uint128).max, \"Range too large\");\r\n        \r\n        sequenceNum = sequenceNumber++;\r\n        address[] memory emptyArray;\r\n        \r\n        pendingRequests[sequenceNum] = RandomRequest({\r\n            requestType: RequestType.RANDOM_NUMBER,\r\n            participants: emptyArray,\r\n            min: min,\r\n            max: max,\r\n            requester: msg.sender,\r\n            fulfilled: false,\r\n            requestBlock: block.number,\r\n            timestamp: block.timestamp,\r\n            commitHash: bytes32(0),\r\n            revealDeadline: block.timestamp + commitRevealDelay,\r\n            isCommitReveal: useCommitReveal && useCommitRevealScheme\r\n        });\r\n        \r\n        emit RandomRequested(sequenceNum, RequestType.RANDOM_NUMBER, useCommitReveal);\r\n        \r\n        if (!useCommitReveal || !useCommitRevealScheme) {\r\n            _tryResolveRequest(sequenceNum);\r\n        }\r\n        \r\n        return sequenceNum;\r\n    }\r\n    \r\n    /// @notice Overloaded function for backward compatibility\r\n    function getRandomNumber(uint256 min, uint256 max) \r\n        external \r\n        whenNotPaused \r\n        returns (uint64) \r\n    {\r\n        return this.getRandomNumber(min, max, false);\r\n    }\r\n    \r\n    // ==================== Commit-Reveal Implementation ====================\r\n    \r\n    /// @notice Submit commitment for randomness generation\r\n    /// @param sequenceNum The sequence number of the request\r\n    /// @param commitment Keccak256 hash of (secret + salt)\r\n    function submitCommitment(uint64 sequenceNum, bytes32 commitment) \r\n        external \r\n        whenNotPaused \r\n        nonReentrant \r\n    {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        require(request.requester != address(0), \"Request not found\");\r\n        require(request.isCommitReveal, \"Not a commit-reveal request\");\r\n        require(!request.fulfilled, \"Request already fulfilled\");\r\n        require(block.timestamp < request.revealDeadline, \"Commitment period ended\");\r\n        require(commitment != bytes32(0), \"Invalid commitment\");\r\n        \r\n        CommitReveal storage commitReveal = commitReveals[msg.sender][sequenceNum];\r\n        require(!commitReveal.revealed, \"Already revealed\");\r\n        \r\n        // Allow overwriting commitment if not yet revealed\r\n        if (commitReveal.commitment == bytes32(0)) {\r\n            requestRevealers[sequenceNum].push(msg.sender);\r\n        }\r\n        \r\n        commitReveal.commitment = commitment;\r\n        commitReveal.commitBlock = block.number;\r\n        commitReveal.revealDeadline = request.revealDeadline;\r\n        \r\n        emit CommitSubmitted(sequenceNum, msg.sender, commitment);\r\n    }\r\n    \r\n    /// @notice Reveal the committed value\r\n    /// @param sequenceNum The sequence number of the request\r\n    /// @param secret The secret value used in commitment\r\n    /// @param salt Additional salt used in commitment\r\n    function revealCommitment(\r\n        uint64 sequenceNum, \r\n        uint256 secret, \r\n        uint256 salt\r\n    ) external whenNotPaused nonReentrant {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        require(request.requester != address(0), \"Request not found\");\r\n        require(request.isCommitReveal, \"Not a commit-reveal request\");\r\n        require(!request.fulfilled, \"Request already fulfilled\");\r\n        \r\n        CommitReveal storage commitReveal = commitReveals[msg.sender][sequenceNum];\r\n        require(commitReveal.commitment != bytes32(0), \"No commitment found\");\r\n        require(!commitReveal.revealed, \"Already revealed\");\r\n        require(block.timestamp <= commitReveal.revealDeadline, \"Reveal period ended\");\r\n        \r\n        // Verify commitment\r\n        bytes32 expectedCommitment = keccak256(abi.encodePacked(secret, salt, msg.sender));\r\n        require(commitReveal.commitment == expectedCommitment, \"Invalid reveal\");\r\n        \r\n        commitReveal.revealValue = secret;\r\n        commitReveal.revealed = true;\r\n        \r\n        emit RevealSubmitted(sequenceNum, msg.sender, secret);\r\n        \r\n        // Try to resolve if we have enough reveals\r\n        _tryResolveCommitRevealRequest(sequenceNum);\r\n    }\r\n    \r\n    // ==================== Internal Resolution Logic ====================\r\n    \r\n    function _tryResolveRequest(uint64 sequenceNum) internal {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        if (request.fulfilled) return;\r\n        \r\n        uint256 randomValue = _generateRandomValue(sequenceNum);\r\n        _finalizeRequest(sequenceNum, randomValue, \"BlockHash\");\r\n    }\r\n    \r\n    function _tryResolveCommitRevealRequest(uint64 sequenceNum) internal {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        if (request.fulfilled) return;\r\n        \r\n        // Check if we have at least one reveal\r\n        address[] storage revealers = requestRevealers[sequenceNum];\r\n        uint256 validReveals = 0;\r\n        \r\n        for (uint256 i = 0; i < revealers.length; i++) {\r\n            if (commitReveals[revealers[i]][sequenceNum].revealed) {\r\n                validReveals++;\r\n            }\r\n        }\r\n        \r\n        // Need at least one reveal, or reveal period ended\r\n        if (validReveals == 0 && block.timestamp <= request.revealDeadline) {\r\n            return; // Wait for more reveals\r\n        }\r\n        \r\n        uint256 randomValue;\r\n        string memory method;\r\n        \r\n        if (validReveals > 0) {\r\n            randomValue = _generateCommitRevealRandomValue(sequenceNum);\r\n            method = \"CommitReveal\";\r\n        } else {\r\n            // Fallback to block hash if no reveals\r\n            randomValue = _generateRandomValue(sequenceNum);\r\n            method = \"BlockHashFallback\";\r\n        }\r\n        \r\n        _finalizeRequest(sequenceNum, randomValue, method);\r\n    }\r\n    \r\n    function _generateRandomValue(uint64 sequenceNum) internal returns (uint256) {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        \r\n        // Combine multiple entropy sources\r\n        uint256 entropy = uint256(keccak256(abi.encodePacked(\r\n            blockhash(request.requestBlock > 0 ? request.requestBlock - 1 : block.number - 1),\r\n            blockhash(block.number - 1),\r\n            historicalBlockHashes[lastStoredBlock],\r\n            block.timestamp,\r\n            block.difficulty,\r\n            request.timestamp,\r\n            request.requester,\r\n            nonce++,\r\n            sequenceNum\r\n        )));\r\n        \r\n        return entropy;\r\n    }\r\n    \r\n    function _generateCommitRevealRandomValue(uint64 sequenceNum) internal view returns (uint256) {\r\n        address[] storage revealers = requestRevealers[sequenceNum];\r\n        uint256 combinedEntropy = 0;\r\n        uint256 revealCount = 0;\r\n        \r\n        // Combine all revealed values\r\n        for (uint256 i = 0; i < revealers.length; i++) {\r\n            CommitReveal storage reveal = commitReveals[revealers[i]][sequenceNum];\r\n            if (reveal.revealed) {\r\n                combinedEntropy ^= reveal.revealValue;\r\n                revealCount++;\r\n            }\r\n        }\r\n        \r\n        // Add additional entropy sources\r\n        combinedEntropy = uint256(keccak256(abi.encodePacked(\r\n            combinedEntropy,\r\n            blockhash(block.number - 1),\r\n            block.timestamp,\r\n            revealCount,\r\n            sequenceNum\r\n        )));\r\n        \r\n        return combinedEntropy;\r\n    }\r\n    \r\n    function _finalizeRequest(uint64 sequenceNum, uint256 randomValue, string memory method) internal {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        request.fulfilled = true;\r\n        \r\n        if (request.requestType == RequestType.WINNER_SELECTION) {\r\n            uint256 winnerIndex = randomValue % request.participants.length;\r\n            address winner = request.participants[winnerIndex];\r\n            emit RandomWinnerSelected(winner, randomValue, sequenceNum, method);\r\n        } else if (request.requestType == RequestType.RANDOM_NUMBER) {\r\n            uint256 result = request.min + (randomValue % (request.max - request.min));\r\n            emit RandomNumberGenerated(result, sequenceNum, method);\r\n        }\r\n    }\r\n    \r\n    // ==================== Manual Resolution ====================\r\n    \r\n    /// @notice Manually resolve a request (owner only, for emergencies)\r\n    function manualResolveRequest(uint64 sequenceNum, string memory reason) \r\n        external \r\n        onlyOwner \r\n        nonReentrant \r\n    {\r\n        RandomRequest storage request = pendingRequests[sequenceNum];\r\n        require(request.requester != address(0), \"Request not found\");\r\n        require(!request.fulfilled, \"Request already fulfilled\");\r\n        require(bytes(reason).length > 0, \"Must provide reason\");\r\n        \r\n        // Use current block entropy for manual resolution\r\n        uint256 randomValue = uint256(keccak256(abi.encodePacked(\r\n            blockhash(block.number - 1),\r\n            block.timestamp,\r\n            block.difficulty,\r\n            sequenceNum,\r\n            reason\r\n        )));\r\n        \r\n        _finalizeRequest(sequenceNum, randomValue, string(abi.encodePacked(\"Manual:\", reason)));\r\n    }\r\n    \r\n    // ==================== View Functions ====================\r\n    \r\n    function previewRandomWinner(address[] memory participants) \r\n        external \r\n        view \r\n        returns (address) \r\n    {\r\n        require(participants.length > 0, \"No participants\");\r\n        \r\n        uint256 randomSeed = uint256(keccak256(abi.encodePacked(\r\n            blockhash(block.number - 1),\r\n            block.timestamp,\r\n            block.difficulty,\r\n            msg.sender,\r\n            nonce\r\n        )));\r\n        \r\n        uint256 winnerIndex = randomSeed % participants.length;\r\n        return participants[winnerIndex];\r\n    }\r\n    \r\n    function getRequest(uint64 sequenceNum) \r\n        external \r\n        view \r\n        returns (RandomRequest memory) \r\n    {\r\n        return pendingRequests[sequenceNum];\r\n    }\r\n    \r\n    function isRequestFulfilled(uint64 sequenceNum) \r\n        external \r\n        view \r\n        returns (bool) \r\n    {\r\n        return pendingRequests[sequenceNum].fulfilled;\r\n    }\r\n    \r\n    function getCommitReveal(address revealer, uint64 sequenceNum) \r\n        external \r\n        view \r\n        returns (CommitReveal memory) \r\n    {\r\n        return commitReveals[revealer][sequenceNum];\r\n    }\r\n    \r\n    function getRevealersForRequest(uint64 sequenceNum) \r\n        external \r\n        view \r\n        returns (address[] memory) \r\n    {\r\n        return requestRevealers[sequenceNum];\r\n    }\r\n    \r\n    function getRevealStats(uint64 sequenceNum) \r\n        external \r\n        view \r\n        returns (\r\n            uint256 totalRevealers,\r\n            uint256 revealedCount,\r\n            uint256 pendingCount\r\n        ) \r\n    {\r\n        address[] storage revealers = requestRevealers[sequenceNum];\r\n        totalRevealers = revealers.length;\r\n        \r\n        for (uint256 i = 0; i < revealers.length; i++) {\r\n            if (commitReveals[revealers[i]][sequenceNum].revealed) {\r\n                revealedCount++;\r\n            }\r\n        }\r\n        \r\n        pendingCount = totalRevealers - revealedCount;\r\n    }\r\n    \r\n    // ==================== Emergency Functions ====================\r\n    \r\n    function emergencyPause() external onlyOwner {\r\n        _pause();\r\n    }\r\n    \r\n    function emergencyUnpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n    \r\n    function withdraw(address to, uint256 amount) \r\n        external \r\n        onlyOwner \r\n        nonReentrant \r\n    {\r\n        require(to != address(0), \"Invalid recipient\");\r\n        require(amount <= address(this).balance, \"Insufficient balance\");\r\n        \r\n        (bool success, ) = payable(to).call{value: amount}(\"\");\r\n        require(success, \"Withdrawal failed\");\r\n    }\r\n    \r\n    // ==================== Receive Function ====================\r\n    \r\n    receive() external payable {\r\n        // Allow contract to receive BTC for gas/fees\r\n    }\r\n    \r\n    fallback() external payable {\r\n        revert(\"Function not found\");\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"LotteryEngine.sol": {
				"CitreaLotteryEngine": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "authorized",
									"type": "bool"
								}
							],
							"name": "AuthorizedProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "blockHash",
									"type": "bytes32"
								}
							],
							"name": "BlockHashStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "revealer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								}
							],
							"name": "CommitSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "randomNumber",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "RandomNumberGenerated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "enum CitreaLotteryEngine.RequestType",
									"name": "requestType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useCommitReveal",
									"type": "bool"
								}
							],
							"name": "RandomRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "randomSeed",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "RandomWinnerSelected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "blockHash",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "commitReveal",
									"type": "bool"
								}
							],
							"name": "RandomnessMethodUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequenceNumber",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "revealer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "revealValue",
									"type": "uint256"
								}
							],
							"name": "RevealSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "MAX_PARTICIPANTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_REVEAL_DELAY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_REVEAL_DELAY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedProviders",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "commitRevealDelay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"name": "commitReveals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "revealValue",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revealed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "commitBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "revealDeadline",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyUnpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "revealer",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"name": "getCommitReveal",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "commitment",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "revealValue",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "revealed",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "commitBlock",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "revealDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct CitreaLotteryEngine.CommitReveal",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								}
							],
							"name": "getRandomNumber",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "useCommitReveal",
									"type": "bool"
								}
							],
							"name": "getRandomNumber",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "enum CitreaLotteryEngine.RequestType",
											"name": "requestType",
											"type": "uint8"
										},
										{
											"internalType": "address[]",
											"name": "participants",
											"type": "address[]"
										},
										{
											"internalType": "uint256",
											"name": "min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "max",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "fulfilled",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "requestBlock",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "commitHash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "revealDeadline",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isCommitReveal",
											"type": "bool"
										}
									],
									"internalType": "struct CitreaLotteryEngine.RandomRequest",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"name": "getRevealStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalRevealers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "revealedCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pendingCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"name": "getRevealersForRequest",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "historicalBlockHashes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"name": "isRequestFulfilled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastStoredBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "manualResolveRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"name": "pendingRequests",
							"outputs": [
								{
									"internalType": "enum CitreaLotteryEngine.RequestType",
									"name": "requestType",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "max",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "fulfilled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "requestBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "commitHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "revealDeadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isCommitReveal",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								}
							],
							"name": "previewRandomWinner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "requestRevealers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								},
								{
									"internalType": "uint256",
									"name": "secret",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salt",
									"type": "uint256"
								}
							],
							"name": "revealCommitment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "useCommitReveal",
									"type": "bool"
								}
							],
							"name": "selectRandomWinner",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								}
							],
							"name": "selectRandomWinner",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "authorized",
									"type": "bool"
								}
							],
							"name": "setAuthorizedProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_delay",
									"type": "uint256"
								}
							],
							"name": "setCommitRevealDelay",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_useBlockHash",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_useCommitReveal",
									"type": "bool"
								}
							],
							"name": "setRandomnessMethod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "storeBlockHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "sequenceNum",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "commitment",
									"type": "bytes32"
								}
							],
							"name": "submitCommitment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "useBlockHashRandomness",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "useCommitRevealScheme",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Provides secure random winner selection using Bitcoin block hashes and commit-reveal schemes",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getRandomNumber(uint256,uint256,bool)": {
								"params": {
									"max": "Maximum value (exclusive)",
									"min": "Minimum value (inclusive)",
									"useCommitReveal": "Whether to use commit-reveal scheme"
								},
								"returns": {
									"sequenceNum": "The sequence number for tracking this request"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"revealCommitment(uint64,uint256,uint256)": {
								"params": {
									"salt": "Additional salt used in commitment",
									"secret": "The secret value used in commitment",
									"sequenceNum": "The sequence number of the request"
								}
							},
							"selectRandomWinner(address[],bool)": {
								"params": {
									"participants": "Array of participant addresses",
									"useCommitReveal": "Whether to use commit-reveal scheme for this request"
								},
								"returns": {
									"sequenceNum": "The sequence number for tracking this request"
								}
							},
							"submitCommitment(uint64,bytes32)": {
								"params": {
									"commitment": "Keccak256 hash of (secret + salt)",
									"sequenceNum": "The sequence number of the request"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "CitreaLotteryEngine",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n    /* \"LotteryEngine.sol\":3487:3497  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  iszero\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_3\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  dup1\n  sload\n    /* \"LotteryEngine.sol\":3487:3497  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  dup3\n  and\n  dup2\n  or\n  dup4\n  sstore\n    /* \"LotteryEngine.sol\":3487:3497  msg.sender */\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  dup1\n  sstore\n  not(0xff)\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x02\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sload\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x02\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  0x01010000000000000000\n    /* \"LotteryEngine.sol\":763:767  true */\n  0x04\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sload\n    /* \"LotteryEngine.sol\":856:859  300 */\n  0x012c\n  0x05\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sstore\n  dup3\n    /* \"LotteryEngine.sol\":3510:3519  nonce = 1 */\n  0x03\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sstore\n  dup3\n  dup1\n  0x50\n  shl\n  sub\n  not\n  and\n  or\n  or\n    /* \"LotteryEngine.sol\":763:767  true */\n  0x04\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sstore\n    /* \"LotteryEngine.sol\":3577:3589  block.number */\n  number\n    /* \"LotteryEngine.sol\":3559:3589  lastStoredBlock = block.number */\n  0x0a\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  sstore\n  not(0x00)\n    /* \"LotteryEngine.sol\":3577:3589  block.number */\n  number\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  add\n    /* \"LotteryEngine.sol\":3577:3589  block.number */\n  number\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  dup2\n  gt\n  tag_5\n  jumpi\n    /* \"LotteryEngine.sol\":3577:3589  block.number */\n  number\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  mstore\n    /* \"LotteryEngine.sol\":3647:3668  historicalBlockHashes */\n  0x09\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  0x20\n  mstore\n    /* \"LotteryEngine.sol\":3685:3712  blockhash(block.number - 1) */\n  blockhash\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  0x40\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  keccak256\n  sstore\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_5:\n  shl(0xe0, 0x4e487b71)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  mstore\n  0x11\n    /* \"LotteryEngine.sol\":763:767  true */\n  0x04\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  mstore\n  0x24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_3:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  shl(0xe0, 0x1e4fbdf7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n  mstore\n  0x24\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  revert\n    /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_34, iszero(lt(calldatasize, 0x04)))\n    tag_35:\n      pop\n      jumpi(tag_36, iszero(calldatasize))\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"LotteryEngine.sol\":19962:19990  revert(\"Function not found\") */\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      0x04\n        /* \"LotteryEngine.sol\":19962:19990  revert(\"Function not found\") */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x119d5b98dd1a5bdb881b9bdd08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":19962:19990  revert(\"Function not found\") */\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_36:\n      stop\n    tag_34:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x0f855ec2\n      eq\n      tag_38\n      jumpi\n      pop\n      dup1\n      0x23806fad\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x262fd733\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x27837eaf\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x3959602d\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x45c70069\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x461d54e9\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x4a4e3bd5\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x51858e27\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x52bfa7e5\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x58859d74\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_60\n      jumpi\n      dup1\n      0x5f2c66d8\n      eq\n      tag_62\n      jumpi\n      dup1\n      0x65b07d58\n      eq\n      tag_64\n      jumpi\n      dup1\n      0x69b16201\n      eq\n      tag_66\n      jumpi\n      dup1\n      0x69dc3ae2\n      eq\n      tag_68\n      jumpi\n      dup1\n      0x69f74f6d\n      eq\n      tag_70\n      jumpi\n      dup1\n      0x6b27e2bb\n      eq\n      tag_72\n      jumpi\n      dup1\n      0x6e68fc0a\n      eq\n      tag_74\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_76\n      jumpi\n      dup1\n      0x7402e13d\n      eq\n      tag_78\n      jumpi\n      dup1\n      0x888eeea6\n      eq\n      tag_80\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_82\n      jumpi\n      dup1\n      0xb76755c5\n      eq\n      tag_84\n      jumpi\n      dup1\n      0xc7513f87\n      eq\n      tag_86\n      jumpi\n      dup1\n      0xcbbf67ec\n      eq\n      tag_88\n      jumpi\n      dup1\n      0xcd3b842e\n      eq\n      tag_90\n      jumpi\n      dup1\n      0xd21fb421\n      eq\n      tag_92\n      jumpi\n      dup1\n      0xd598e967\n      eq\n      tag_94\n      jumpi\n      dup1\n      0xe71bfdc0\n      eq\n      tag_96\n      jumpi\n      dup1\n      0xe7c4155d\n      eq\n      tag_98\n      jumpi\n      dup1\n      0xf2fcd328\n      eq\n      tag_100\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_102\n      jumpi\n      dup1\n      0xf3baf070\n      eq\n      tag_104\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_106\n      jumpi\n      0xfe6d06b4\n      eq\n      tag_108\n      jumpi\n      0x00\n      jump(tag_35)\n    tag_108:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_114\n      tag_4\n      jump\t// in\n    tag_114:\n      tag_115\n      tag_2\n      jump\t// in\n    tag_115:\n      swap1\n      0x00\n      0x80\n      mload(0x40)\n      tag_116\n      dup2\n      tag_7\n      jump\t// in\n    tag_116:\n      dup3\n      dup2\n      mstore\n      dup3\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":18239:18252  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":18239:18275  commitReveals[revealer][sequenceNum] */\n      swap2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0xa0\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      tag_117\n      dup2\n      tag_7\n      jump\t// in\n    tag_117:\n      dup2\n      sload\n      swap2\n      dup3\n      dup3\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      0x20\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n      0xff\n      0x02\n      dup4\n      add\n      sload\n      and\n      swap1\n      0x40\n      dup5\n      add\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      0x80\n      0x04\n      0x03\n      dup6\n      add\n      sload\n      swap5\n      0x60\n      dup8\n      add\n      swap6\n      dup7\n      mstore\n      add\n      sload\n      swap5\n      add\n      swap4\n      dup5\n      mstore\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      mload\n      0x20\n      dup6\n      add\n      mstore\n      mload\n      iszero\n      iszero\n      0x40\n      dup5\n      add\n      mstore\n      mload\n      0x60\n      dup4\n      add\n      mstore\n      mload\n      0x80\n      dup3\n      add\n      mstore\n      return\n    tag_112:\n      0x00\n      dup1\n      revert\n    tag_106:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_122\n      tag_4\n      jump\t// in\n    tag_122:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_123\n      tag_26\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_124\n      tag_27\n      jump\t// in\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n        /* \"LotteryEngine.sol\":19492:19508  to != address(0) */\n      dup1\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_125\n      jumpi\n        /* \"LotteryEngine.sol\":19559:19580  address(this).balance */\n      selfbalance\n        /* \"LotteryEngine.sol\":19549:19580  amount <= address(this).balance */\n      dup3\n      gt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_127\n      jumpi\n      0x00\n        /* \"LotteryEngine.sol\":19645:19680  payable(to).call{value: amount}(\"\") */\n      dup1\n      dup1\n      swap4\n      dup2\n      swap4\n      gas\n      call\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      jumpi(tag_129, iszero(returndatasize))\n      returndatasize\n      tag_131\n      dup2\n      tag_9\n      jump\t// in\n    tag_131:\n      swap1\n      tag_132\n      mload(0x40)\n      swap3\n      dup4\n      tag_8\n      jump\t// in\n    tag_132:\n      dup2\n      mstore\n      0x00\n      0x20\n      returndatasize\n      swap3\n      add\n      returndatacopy\n    tag_133:\n      iszero\n      tag_134\n      jumpi\n      0x01\n      dup1\n      sstore\n      stop\n    tag_134:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x15da5d1a191c985dd85b0819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_129:\n      jump(tag_133)\n    tag_127:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_125:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x125b9d985b1a59081c9958da5c1a595b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_104:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"LotteryEngine.sol\":963:967  1000 */\n      0x03e8\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n      return\n    tag_102:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      tag_144\n      tag_4\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_145\n      tag_26\n      jump\t// in\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup4\n      or\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      shl(0xe0, 0x1e4fbdf7)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mstore\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x04, 0x00)\n      0x24\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      revert\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_100:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_152\n      tag_1\n      jump\t// in\n    tag_152:\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      swap2\n      tag_153\n      tag_30\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_154\n      tag_27\n      jump\t// in\n    tag_154:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      dup1\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":9503:9518  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n        /* \"LotteryEngine.sol\":9780:9802  request.revealDeadline */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":9687:9743  require(!request.fulfilled, \"Request already fulfilled\") */\n      tag_155\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n      0x04\n        /* \"LotteryEngine.sol\":9550:9567  request.requester */\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":9542:9603  require(request.requester != address(0), \"Request not found\") */\n      tag_156\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n        /* \"LotteryEngine.sol\":9550:9581  request.requester != address(0) */\n      iszero\n      iszero\n        /* \"LotteryEngine.sol\":9542:9603  require(request.requester != address(0), \"Request not found\") */\n      tag_16\n      jump\t// in\n    tag_156:\n        /* \"LotteryEngine.sol\":9614:9676  require(request.isCommitReveal, \"Not a commit-reveal request\") */\n      tag_157\n        /* \"LotteryEngine.sol\":9622:9644  request.isCommitReveal */\n      dup3\n      0x09\n      dup7\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":9614:9676  require(request.isCommitReveal, \"Not a commit-reveal request\") */\n      tag_21\n      jump\t// in\n    tag_157:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xa0\n      shr\n      and\n        /* \"LotteryEngine.sol\":9695:9713  !request.fulfilled */\n      iszero\n        /* \"LotteryEngine.sol\":9687:9743  require(!request.fulfilled, \"Request already fulfilled\") */\n      tag_17\n      jump\t// in\n    tag_155:\n        /* \"LotteryEngine.sol\":9780:9802  request.revealDeadline */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup1\n      sload\n        /* \"LotteryEngine.sol\":9762:9777  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":9762:9802  block.timestamp < request.revealDeadline */\n      lt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"LotteryEngine.sol\":9849:9873  commitment != bytes32(0) */\n      dup3\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_160\n      jumpi\n        /* \"LotteryEngine.sol\":9967:9977  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":9953:9966  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":10011:10032  commitReveal.revealed */\n      swap1\n        /* \"LotteryEngine.sol\":10002:10053  require(!commitReveal.revealed, \"Already revealed\") */\n      tag_162\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n        /* \"LotteryEngine.sol\":10011:10032  commitReveal.revealed */\n      0x02\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":10010:10032  !commitReveal.revealed */\n      iszero\n        /* \"LotteryEngine.sol\":10002:10053  require(!commitReveal.revealed, \"Already revealed\") */\n      tag_22\n      jump\t// in\n    tag_162:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      sload\n        /* \"LotteryEngine.sol\":10139:10176  commitReveal.commitment == bytes32(0) */\n      iszero\n        /* \"LotteryEngine.sol\":10135:10251  if (commitReveal.commitment == bytes32(0)) {... */\n      tag_163\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_164:\n      0x04\n      swap1\n      dup5\n      dup4\n      sstore\n        /* \"LotteryEngine.sol\":10345:10357  block.number */\n      number\n        /* \"LotteryEngine.sol\":10318:10342  commitReveal.commitBlock */\n      0x03\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n      sload\n        /* \"LotteryEngine.sol\":10368:10395  commitReveal.revealDeadline */\n      swap2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":10446:10498  CommitSubmitted(sequenceNum, msg.sender, commitment) */\n      0x776af115a08ee6e6223c4848e4da1ae6f545754de0f819e8baa689e540cca351\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":9967:9977  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":10446:10498  CommitSubmitted(sequenceNum, msg.sender, commitment) */\n      swap4\n      log3\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      sstore\n      stop\n        /* \"LotteryEngine.sol\":10135:10251  if (commitReveal.commitment == bytes32(0)) {... */\n    tag_163:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":9780:9802  request.revealDeadline */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      dup2\n      sload\n      swap2\n      shl(0x40, 0x01)\n      dup4\n      lt\n      iszero\n      tag_165\n      jumpi\n      dup3\n      tag_167\n      swap2\n      0x01\n      0x04\n      swap6\n      add\n      dup2\n      sstore\n      tag_12\n      jump\t// in\n    tag_167:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x03\n      swap3\n      swap1\n      swap3\n      shl\n      swap2\n      dup3\n      shl\n      not\n      and\n        /* \"LotteryEngine.sol\":9967:9977  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      swap2\n      shl\n      or\n      swap1\n      sstore\n        /* \"LotteryEngine.sol\":10135:10251  if (commitReveal.commitment == bytes32(0)) {... */\n      swap1\n      pop\n      jump(tag_164)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_165:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_160:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x125b9d985b1a590818dbdb5b5a5d1b595b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_158:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x436f6d6d69746d656e7420706572696f6420656e646564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_98:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x60))\n      calldataload(0x04)\n      calldataload(0x24)\n      calldataload(0x44)\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_174\n      tag_30\n      jump\t// in\n    tag_174:\n        /* \"LotteryEngine.sol\":7779:7788  max > min */\n      dup3\n      dup3\n      gt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      iszero\n      tag_175\n      jumpi\n      0xffffffffffffffffffffffffffffffff\n        /* \"LotteryEngine.sol\":7825:7834  max - min */\n      tag_177\n      dup5\n      dup5\n      tag_14\n      jump\t// in\n    tag_177:\n        /* \"LotteryEngine.sol\":7825:7855  max - min <= type(uint128).max */\n      gt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_178\n      jumpi\n      sload(0x04)\n      swap2\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":7910:7926  sequenceNumber++ */\n      tag_180\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      dup7\n      and\n        /* \"LotteryEngine.sol\":7910:7926  sequenceNumber++ */\n      tag_18\n      jump\t// in\n    tag_180:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      not(sub(shl(0x40, 0x01), 0x01))\n      dup6\n      and\n      or\n      dup1\n      0x04\n      sstore\n        /* \"LotteryEngine.sol\":8385:8420  block.timestamp + commitRevealDelay */\n      tag_181\n        /* \"LotteryEngine.sol\":8403:8420  commitRevealDelay */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":8302:8317  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":8385:8420  block.timestamp + commitRevealDelay */\n      tag_19\n      jump\t// in\n    tag_181:\n        /* \"LotteryEngine.sol\":8451:8491  useCommitReveal && useCommitRevealScheme */\n      swap1\n      dup3\n      tag_182\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_183:\n      pop\n      mload(0x40)\n      swap2\n      tag_184\n      dup4\n      tag_6\n      jump\t// in\n    tag_184:\n      0x01\n      dup4\n      mstore\n      0x20\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap4\n      0x60\n      dup6\n      mstore\n      0x40\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap8\n      dup9\n      mstore\n      0x60\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x80\n      dup5\n      add\n        /* \"LotteryEngine.sol\":8194:8204  msg.sender */\n      swap1\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0xa0\n      dup6\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      0x00\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0xc0\n      dup7\n      add\n        /* \"LotteryEngine.sol\":8264:8276  block.number */\n      swap4\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup6\n      mstore\n      0xe0\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      dup8\n      add\n        /* \"LotteryEngine.sol\":8302:8317  block.timestamp */\n      swap6\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup8\n      mstore\n      0x00\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0100\n      dup10\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0120\n      dup9\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      iszero\n      iszero\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0140\n      dup8\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      dup10\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":7985:8000  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap7\n      dup7\n      mload\n      0x03\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      0xff\n      dup1\n      not\n      dup11\n      sload\n      and\n      swap2\n      and\n      or\n      dup9\n      sstore\n      mload\n      swap10\n      dup11\n      mload\n      swap11\n      sub(shl(0x40, 0x01), 0x01)\n      dup13\n      gt\n      tag_165\n      jumpi\n      shl(0x40, 0x01)\n      dup13\n      gt\n      tag_165\n      jumpi\n      0x01\n      dup10\n      add\n      sload\n      dup13\n      0x01\n      dup12\n      add\n      sstore\n      dup1\n      dup14\n      lt\n      tag_191\n      jumpi\n    tag_192:\n      pop\n      0x20\n      add\n      swap11\n      0x01\n      dup10\n      add\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap12\n      0x00\n      swap1\n    tag_193:\n      dup3\n      dup3\n      lt\n      tag_194\n      jumpi\n      pop\n      pop\n      dup2\n      mload\n      0x02\n      dup11\n      add\n      sstore\n      dup3\n      mload\n      0x03\n      dup11\n      add\n      sstore\n      dup5\n      mload\n      0x04\n      dup11\n      add\n      dup1\n      sload\n      dup7\n      mload\n      shl(0xa0, 0xff)\n      swap1\n      iszero\n      iszero\n      0xa0\n      shl\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x20\n      dup12\n      dup12\n      tag_196\n      dup13\n      0x09\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0140\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup15\n      dup15\n      dup15\n      mload\n        /* \"LotteryEngine.sol\":8403:8420  commitRevealDelay */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup7\n      add\n      sstore\n      mload\n        /* \"LotteryEngine.sol\":7985:8000  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup6\n      add\n      sstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0100\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n      0x07\n      dup6\n      add\n      sstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      0x0120\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n      0x08\n      dup6\n      add\n      sstore\n        /* \"LotteryEngine.sol\":8016:8503  RandomRequest({... */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n      iszero\n      iszero\n      swap2\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_196:\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      dup2\n      iszero\n      iszero\n      dup5\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":8529:8601  RandomRequested(sequenceNum, RequestType.RANDOM_NUMBER, useCommitReveal) */\n      0xe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      sub(shl(0x40, 0x01), 0x01)\n      dup6\n      and\n        /* \"LotteryEngine.sol\":8529:8601  RandomRequested(sequenceNum, RequestType.RANDOM_NUMBER, useCommitReveal) */\n      swap3\n      log2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup1\n      iszero\n      swap1\n        /* \"LotteryEngine.sol\":8626:8668  !useCommitReveal || !useCommitRevealScheme */\n      tag_198\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_199:\n        /* \"LotteryEngine.sol\":8622:8728  if (!useCommitReveal || !useCommitRevealScheme) {... */\n      tag_200\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_201:\n      sub(shl(0x40, 0x01), 0x01)\n      mload(0x40)\n      swap2\n      and\n      dup2\n      mstore\n      return\n        /* \"LotteryEngine.sol\":8622:8728  if (!useCommitReveal || !useCommitRevealScheme) {... */\n    tag_200:\n        /* \"LotteryEngine.sol\":8704:8715  sequenceNum */\n      tag_202\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      and\n        /* \"LotteryEngine.sol\":8704:8715  sequenceNum */\n      tag_31\n      jump\t// in\n    tag_202:\n        /* \"LotteryEngine.sol\":8622:8728  if (!useCommitReveal || !useCommitRevealScheme) {... */\n      jump(tag_201)\n        /* \"LotteryEngine.sol\":8626:8668  !useCommitReveal || !useCommitRevealScheme */\n    tag_198:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      and(shr(0x48, sload(0x04)), 0xff)\n        /* \"LotteryEngine.sol\":8646:8668  !useCommitRevealScheme */\n      iszero\n        /* \"LotteryEngine.sol\":8626:8668  !useCommitReveal || !useCommitRevealScheme */\n      jump(tag_199)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_194:\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup15\n      dup4\n      add\n      sstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      jump(tag_193)\n    tag_191:\n      0x01\n      dup11\n      add\n      0x00\n      mstore\n      dup13\n      keccak256(0x00, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n    tag_203:\n      dup2\n      dup2\n      lt\n      tag_204\n      jumpi\n      pop\n      jump(tag_192)\n    tag_204:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_203)\n    tag_185:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n        /* \"LotteryEngine.sol\":8451:8491  useCommitReveal && useCommitRevealScheme */\n    tag_182:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x48\n      shr\n      0xff\n      and\n      swap2\n      pop\n        /* \"LotteryEngine.sol\":8451:8491  useCommitReveal && useCommitRevealScheme */\n      dup7\n      jump(tag_183)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_178:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x52616e676520746f6f206c61726765)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_175:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x496e76616c69642072616e6765)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_96:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"LotteryEngine.sol\":821:859  uint256 public commitRevealDelay = 300 */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_94:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      dup1\n      iszero\n      swap1\n      dup2\n      iszero\n      swap2\n      dup3\n      dup3\n      sub\n      tag_112\n      jumpi\n      tag_216\n      tag_5\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap2\n      tag_217\n      tag_26\n      jump\t// in\n    tag_217:\n        /* \"LotteryEngine.sol\":3914:3947  _useBlockHash || _useCommitReveal */\n      swap1\n      tag_218\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_219:\n      iszero\n      tag_220\n      jumpi\n        /* \"LotteryEngine.sol\":4103:4159  RandomnessMethodUpdated(_useBlockHash, _useCommitReveal) */\n      0xb2692b979a0ebbc948769201966bf3af4548dc99b201b0188d8f7d727c612b83\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap2\n      0x40\n      swap2\n      sload(0x04)\n      swap1\n      iszero\n      iszero\n      swap1\n      0xff000000000000000000\n      dup3\n      0x48\n      shl\n      and\n      swap1\n      0xff0000000000000000\n      dup5\n      dup7\n      shl\n      and\n      swap1\n      not(0xffff0000000000000000)\n      and\n      or\n      or\n      0x04\n      sstore\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":4103:4159  RandomnessMethodUpdated(_useBlockHash, _useCommitReveal) */\n      log1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n    tag_220:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x4174206c65617374206f6e65206d6574686f64206d75737420626520656e6162\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1b1959)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":3914:3947  _useBlockHash || _useCommitReveal */\n    tag_218:\n      pop\n      dup1\n      jump(tag_219)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_92:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      tag_226\n      tag_1\n      jump\t// in\n    tag_226:\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":18754:18770  requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      swap1\n      swap3\n      swap1\n      swap2\n      swap1\n      dup2\n        /* \"LotteryEngine.sol\":18868:18888  i < revealers.length */\n    tag_227:\n      dup4\n      dup2\n      lt\n      tag_228\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n        /* \"LotteryEngine.sol\":19061:19091  totalRevealers - revealedCount */\n      dup5\n      dup5\n      tag_230\n      dup2\n      dup4\n      tag_14\n      jump\t// in\n    tag_230:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      mload(0x40)\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n      return\n        /* \"LotteryEngine.sol\":18890:18893  i++ */\n    tag_228:\n        /* \"LotteryEngine.sol\":18928:18940  revealers[i] */\n      tag_231\n      dup2\n      dup7\n      tag_12\n      jump\t// in\n    tag_231:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":18914:18927  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup3\n      0x00\n      mstore\n      0x20\n      mstore\n      0xff\n        /* \"LotteryEngine.sol\":18914:18963  commitReveals[revealers[i]][sequenceNum].revealed */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":18914:18963  commitReveals[revealers[i]][sequenceNum].revealed */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":18910:19015  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n      tag_232\n      jumpi\n        /* \"LotteryEngine.sol\":18890:18893  i++ */\n    tag_233:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      add\n        /* \"LotteryEngine.sol\":18853:18866  uint256 i = 0 */\n      jump(tag_227)\n        /* \"LotteryEngine.sol\":18910:19015  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n    tag_232:\n        /* \"LotteryEngine.sol\":18984:18999  revealedCount++ */\n      swap2\n      tag_234\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n        /* \"LotteryEngine.sol\":18984:18999  revealedCount++ */\n      swap2\n      tag_25\n      jump\t// in\n    tag_234:\n        /* \"LotteryEngine.sol\":18910:19015  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n      swap3\n      swap1\n      pop\n      jump(tag_233)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_90:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      0x20\n      tag_241\n      tag_242\n      swap3\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_10\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_243\n      tag_30\n      jump\t// in\n    tag_243:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      dup1\n      swap4\n      dup2\n      swap3\n      shl(0xe0, 0x461d54e9)\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      dup4\n      mstore\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      0x04\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      0x44\n      dup4\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_242:\n      0x00\n      0x24\n      dup4\n      add\n      mstore\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      sub\n        /* \"LotteryEngine.sol\":7244:7248  this */\n      dup2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n        /* \"LotteryEngine.sol\":7244:7248  this */\n      address\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      gas\n      call\n      dup1\n      iszero\n      tag_244\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      swap2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n      swap2\n      tag_246\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_247:\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n      mload(0x40)\n      swap2\n      and\n      dup2\n      mstore\n      return\n        /* \"LotteryEngine.sol\":7244:7288  this.selectRandomWinner(participants, false) */\n    tag_246:\n      tag_248\n      swap2\n      pop\n      dup3\n      returndatasize\n      dup5\n      gt\n      tag_249\n      jumpi\n    tag_250:\n      tag_251\n      dup2\n      dup4\n      tag_8\n      jump\t// in\n    tag_251:\n      dup2\n      add\n      swap1\n      tag_24\n      jump\t// in\n    tag_248:\n      dup3\n      jump(tag_247)\n    tag_249:\n      pop\n      returndatasize\n      jump(tag_250)\n    tag_244:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_88:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      tag_256\n      tag_1\n      jump\t// in\n    tag_256:\n      0x00\n      0x0140\n      mload(0x40)\n      tag_257\n      dup2\n      tag_6\n      jump\t// in\n    tag_257:\n      dup3\n      dup2\n      mstore\n      0x60\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      dup3\n      0x0120\n      dup3\n      add\n      mstore\n      add\n      mstore\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":17841:17856  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_258\n      dup3\n      tag_6\n      jump\t// in\n    tag_258:\n      0xff\n      dup2\n      sload\n      and\n      0x03\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      dup3\n      mstore\n      tag_261\n      0x01\n      dup3\n      add\n      tag_13\n      jump\t// in\n    tag_261:\n      swap1\n      0x20\n      dup4\n      add\n      swap2\n      dup3\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      swap1\n      0x40\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      swap1\n      0x60\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup7\n      add\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      dup3\n      mstore\n      0xff\n      0xa0\n      dup9\n      add\n      swap2\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n      0x05\n      dup4\n      add\n      sload\n      0xc0\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":17841:17856  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup5\n      add\n      sload\n      swap2\n      0xe0\n      dup10\n      add\n      swap3\n      dup4\n      mstore\n      0x07\n      dup6\n      add\n      sload\n      swap4\n      0x0100\n      dup11\n      add\n      swap5\n      dup6\n      mstore\n      0xff\n      0x09\n      0x08\n      dup9\n      add\n      sload\n      swap8\n      0x0120\n      dup14\n      add\n      swap9\n      dup10\n      mstore\n      add\n      sload\n      and\n      swap7\n      0x0140\n      dup12\n      add\n      swap8\n      iszero\n      iszero\n      dup9\n      mstore\n      mload(0x40)\n      swap10\n      0x20\n      dup12\n      mstore\n      tag_262\n      0x0180\n      dup13\n      add\n      swap13\n      0x20\n      dup14\n      add\n      swap1\n      mload\n      tag_11\n      jump\t// in\n    tag_262:\n      mload\n      swap9\n      0x0160\n      0x40\n      dup13\n      add\n      mstore\n      dup10\n      mload\n      dup1\n      swap13\n      mstore\n      0x20\n      0x01a0\n      dup13\n      add\n      swap11\n      add\n      dup13\n      0x00\n      swap14\n      dup15\n    tag_263:\n      lt\n      tag_264\n      jumpi\n      pop\n      pop\n      mload\n      0x60\n      dup12\n      add\n      mstore\n      mload\n      0x80\n      dup11\n      add\n      mstore\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0xa0\n      dup10\n      add\n      mstore\n      mload\n      iszero\n      iszero\n      0xc0\n      dup9\n      add\n      mstore\n      mload\n      0xe0\n      dup8\n      add\n      mstore\n      mload\n      0x0100\n      dup7\n      add\n      mstore\n      mload\n      0x0120\n      dup6\n      add\n      mstore\n      mload\n      0x0140\n      dup5\n      add\n      mstore\n      mload\n      iszero\n      iszero\n      0x0160\n      dup4\n      add\n      mstore\n      dup2\n      swap1\n      sub\n      swap2\n      pop\n      return\n    tag_264:\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup13\n      mstore\n      0x01\n      swap14\n      swap1\n      swap14\n      add\n      swap13\n      0x20\n      swap12\n      dup13\n      add\n      swap12\n      swap1\n      swap2\n      add\n      swap1\n      dup1\n      dup15\n      jump(tag_263)\n    tag_86:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n        /* \"LotteryEngine.sol\":2215:2245  uint256 public lastStoredBlock */\n      0x0a\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_84:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      and(shr(0x48, sload(0x04)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_82:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_80:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"LotteryEngine.sol\":1017:1019  60 */\n      0x3c\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n      return\n    tag_78:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_286\n      tag_4\n      jump\t// in\n    tag_286:\n      tag_287\n      tag_2\n      jump\t// in\n    tag_287:\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      swap2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0xa0\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      swap1\n      0x01\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      swap1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      0x02\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n      0x04\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      0x03\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1972:2044  mapping(address => mapping(uint64 => CommitReveal)) public commitReveals */\n      swap3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      swap3\n      mload(0x40)\n      swap5\n      dup6\n      mstore\n      0x20\n      dup6\n      add\n      mstore\n      iszero\n      iszero\n      0x40\n      dup5\n      add\n      mstore\n      0x60\n      dup4\n      add\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n      return\n    tag_76:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_292\n      tag_26\n      jump\t// in\n    tag_292:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup2\n      and\n      dup3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n    tag_74:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_297\n      tag_30\n      jump\t// in\n    tag_297:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      shl(0xe0, 0xe7c4155d)\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      calldataload(0x04)\n      0x04\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      calldataload(0x24)\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      0x44\n      dup3\n      add\n      mstore\n      0x20\n        /* \"LotteryEngine.sol\":8995:8999  this */\n      dup2\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      0x64\n        /* \"LotteryEngine.sol\":8995:8999  this */\n      dup2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n        /* \"LotteryEngine.sol\":8995:8999  this */\n      address\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      gas\n      call\n      dup1\n      iszero\n      tag_244\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      swap2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n        /* \"LotteryEngine.sol\":8995:9032  this.getRandomNumber(min, max, false) */\n      swap2\n      tag_246\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n      mload(0x40)\n      swap2\n      and\n      dup2\n      mstore\n      return\n    tag_72:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_310\n      tag_26\n      jump\t// in\n    tag_310:\n        /* \"LotteryEngine.sol\":1017:1019  60 */\n      0x3c\n        /* \"LotteryEngine.sol\":4263:4289  _delay >= MIN_REVEAL_DELAY */\n      dup2\n      lt\n      iszero\n        /* \"LotteryEngine.sol\":4263:4319  _delay >= MIN_REVEAL_DELAY && _delay <= MAX_REVEAL_DELAY */\n      dup1\n      tag_311\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_312:\n      iszero\n      tag_313\n      jumpi\n        /* \"LotteryEngine.sol\":4348:4374  commitRevealDelay = _delay */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n      stop\n    tag_313:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x496e76616c69642064656c6179)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":4263:4319  _delay >= MIN_REVEAL_DELAY && _delay <= MAX_REVEAL_DELAY */\n    tag_311:\n        /* \"LotteryEngine.sol\":4293:4319  _delay <= MAX_REVEAL_DELAY */\n      pop\n        /* \"LotteryEngine.sol\":1089:1093  3600 */\n      0x0e10\n        /* \"LotteryEngine.sol\":4293:4319  _delay <= MAX_REVEAL_DELAY */\n      dup2\n      gt\n      iszero\n        /* \"LotteryEngine.sol\":4263:4319  _delay >= MIN_REVEAL_DELAY && _delay <= MAX_REVEAL_DELAY */\n      jump(tag_312)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_70:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_319\n      tag_1\n      jump\t// in\n    tag_319:\n      sub(shl(0x40, 0x01), 0x01)\n      calldataload(0x24)\n      swap2\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":2051:2103  mapping(uint64 => address[]) public requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup1\n      sload\n        /* \"LotteryEngine.sol\":2051:2103  mapping(uint64 => address[]) public requestRevealers */\n      dup3\n      lt\n      iszero\n      tag_112\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":2051:2103  mapping(uint64 => address[]) public requestRevealers */\n      swap2\n      tag_322\n      swap2\n      tag_12\n      jump\t// in\n    tag_322:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      sload\n      mload(0x40)\n      0x03\n      swap3\n      swap1\n      swap3\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      return\n    tag_68:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_327\n      tag_4\n      jump\t// in\n    tag_327:\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":2319:2370  mapping(address => bool) public authorizedProviders */\n      0x0b\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_66:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n        /* \"LotteryEngine.sol\":2152:2208  mapping(uint256 => bytes32) public historicalBlockHashes */\n      0x09\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x20\n      sload(keccak256(0x00, 0x40))\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_64:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      tag_336\n      tag_1\n      jump\t// in\n    tag_336:\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x0140\n      keccak256(0x00, 0x40)\n      0xff\n      dup2\n      sload\n      and\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      swap1\n      0x02\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      swap1\n      0x03\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0x04\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      0x05\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0xff\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      0x06\n      dup6\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      swap3\n      0x07\n      dup7\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      swap5\n      dup3\n      0x09\n      0x08\n      dup10\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":1910:1965  mapping(uint64 => RandomRequest) public pendingRequests */\n      swap9\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n      swap8\n      tag_337\n      mload(0x40)\n      dup1\n      swap12\n      tag_11\n      jump\t// in\n    tag_337:\n      0x20\n      dup11\n      add\n      mstore\n      0x40\n      dup10\n      add\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n      0x60\n      dup10\n      add\n      mstore\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      0x80\n      dup8\n      add\n      mstore\n      0xa0\n      dup7\n      add\n      mstore\n      0xc0\n      dup6\n      add\n      mstore\n      0xe0\n      dup5\n      add\n      mstore\n      0x0100\n      dup4\n      add\n      mstore\n      iszero\n      iszero\n      0x0120\n      dup3\n      add\n      mstore\n      return\n    tag_62:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"LotteryEngine.sol\":1089:1093  3600 */\n      0x0e10\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n      return\n    tag_60:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_58:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_352\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_10\n      jump\t// in\n    tag_352:\n      dup1\n      mload\n        /* \"LotteryEngine.sol\":17284:17307  participants.length > 0 */\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_353\n      jumpi\n      not(0x00)\n        /* \"LotteryEngine.sol\":17428:17440  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      add\n        /* \"LotteryEngine.sol\":17428:17440  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":17607:17639  randomSeed % participants.length */\n      tag_357\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n        /* \"LotteryEngine.sol\":17546:17551  nonce */\n      0x03\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      mload(0x40)\n        /* \"LotteryEngine.sol\":17387:17562  abi.encodePacked(... */\n      swap1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":17387:17562  abi.encodePacked(... */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":17418:17445  blockhash(block.number - 1) */\n      swap3\n      blockhash\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup4\n      mstore\n        /* \"LotteryEngine.sol\":17460:17475  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      dup4\n      add\n      mstore\n        /* \"LotteryEngine.sol\":17490:17506  block.difficulty */\n      prevrandao\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n      dup4\n      add\n      mstore\n        /* \"LotteryEngine.sol\":17521:17531  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n      shl\n      0x80\n      dup4\n      add\n      mstore\n      0x94\n      dup3\n      add\n      mstore\n      0x94\n        /* \"LotteryEngine.sol\":17387:17562  abi.encodePacked(... */\n      dup2\n      mstore\n      tag_358\n      0xb4\n      dup3\n      tag_8\n      jump\t// in\n    tag_358:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n        /* \"LotteryEngine.sol\":17377:17563  keccak256(abi.encodePacked(... */\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      mload\n        /* \"LotteryEngine.sol\":17607:17639  randomSeed % participants.length */\n      swap1\n      tag_23\n      jump\t// in\n    tag_357:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      tag_359\n      jumpi\n      0x05\n      shl\n      add\n      0x20\n      swap1\n      dup2\n      add\n      mload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      return\n    tag_359:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_355:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_353:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x4e6f207061727469636970616e7473)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_56:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x60))\n      tag_365\n      tag_1\n      jump\t// in\n    tag_365:\n      calldataload(0x24)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      swap1\n      tag_366\n      tag_30\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_367\n      tag_27\n      jump\t// in\n    tag_367:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      and\n      swap2\n      dup3\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":10931:10946  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n        /* \"LotteryEngine.sol\":11115:11171  require(!request.fulfilled, \"Request already fulfilled\") */\n      tag_368\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":11042:11104  require(request.isCommitReveal, \"Not a commit-reveal request\") */\n      tag_157\n        /* \"LotteryEngine.sol\":10978:10995  request.requester */\n      dup3\n        /* \"LotteryEngine.sol\":11050:11072  request.isCommitReveal */\n      0x09\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x04\n        /* \"LotteryEngine.sol\":10978:10995  request.requester */\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      swap4\n        /* \"LotteryEngine.sol\":10970:11031  require(request.requester != address(0), \"Request not found\") */\n      tag_370\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup7\n      and\n        /* \"LotteryEngine.sol\":10978:11009  request.requester != address(0) */\n      iszero\n      iszero\n        /* \"LotteryEngine.sol\":10970:11031  require(request.requester != address(0), \"Request not found\") */\n      tag_16\n      jump\t// in\n    tag_370:\n        /* \"LotteryEngine.sol\":11050:11072  request.isCommitReveal */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":11042:11104  require(request.isCommitReveal, \"Not a commit-reveal request\") */\n      tag_21\n      jump\t// in\n        /* \"LotteryEngine.sol\":11115:11171  require(!request.fulfilled, \"Request already fulfilled\") */\n    tag_368:\n        /* \"LotteryEngine.sol\":11242:11252  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":11228:11241  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap3\n      dup4\n      sload\n        /* \"LotteryEngine.sol\":11285:11322  commitReveal.commitment != bytes32(0) */\n      swap4\n      dup5\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_371\n      jumpi\n        /* \"LotteryEngine.sol\":11366:11387  commitReveal.revealed */\n      0x02\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      dup2\n      sload\n      swap6\n        /* \"LotteryEngine.sol\":11357:11408  require(!commitReveal.revealed, \"Already revealed\") */\n      tag_373\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n      dup9\n      and\n        /* \"LotteryEngine.sol\":11365:11387  !commitReveal.revealed */\n      iszero\n        /* \"LotteryEngine.sol\":11357:11408  require(!commitReveal.revealed, \"Already revealed\") */\n      tag_22\n      jump\t// in\n    tag_373:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x04\n        /* \"LotteryEngine.sol\":11446:11473  commitReveal.revealDeadline */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":11427:11442  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":11427:11473  block.timestamp <= commitReveal.revealDeadline */\n      gt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x20\n        /* \"LotteryEngine.sol\":11587:11629  abi.encodePacked(secret, salt, msg.sender) */\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      dup7\n      dup3\n      mstore\n      calldataload(0x44)\n      0x40\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":11242:11252  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n      shl\n      0x60\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":11587:11629  abi.encodePacked(secret, salt, msg.sender) */\n      0x54\n      dup2\n      mstore\n      tag_376\n      0x74\n      dup3\n      tag_8\n      jump\t// in\n    tag_376:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n        /* \"LotteryEngine.sol\":11577:11630  keccak256(abi.encodePacked(secret, salt, msg.sender)) */\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":11649:11694  commitReveal.commitment == expectedCommitment */\n      sub\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_377\n      jumpi\n        /* \"LotteryEngine.sol\":11985:11996  sequenceNum */\n      tag_379\n        /* \"LotteryEngine.sol\":11734:11758  commitReveal.revealValue */\n      swap6\n      dup5\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n        /* \"LotteryEngine.sol\":11734:11758  commitReveal.revealValue */\n      dup1\n      swap4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n      not(0xff)\n      and\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap2\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":11832:11880  RevealSubmitted(sequenceNum, msg.sender, secret) */\n      0xe31c53097a08b041054a61a87113adc8f265bae8df68ba97e83aa8f8901721f7\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":11242:11252  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":11832:11880  RevealSubmitted(sequenceNum, msg.sender, secret) */\n      swap4\n      log3\n        /* \"LotteryEngine.sol\":11985:11996  sequenceNum */\n      tag_32\n      jump\t// in\n    tag_379:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      sstore\n      stop\n    tag_377:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x125b9d985b1a59081c995d99585b)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_374:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x14995d99585b081c195c9a5bd908195b991959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_371:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x139bc818dbdb5b5a5d1b595b9d08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_54:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_384\n      tag_26\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_385\n      tag_30\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      not(0xff)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n      or\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      log1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n    tag_52:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_390\n      tag_26\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0xff\n      dup2\n      and\n      iszero\n      tag_391\n      jumpi\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      log1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n    tag_391:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_50:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      tag_399\n      swap1\n      calldatasize\n      swap1\n      0x04\n      add\n      tag_10\n      jump\t// in\n    tag_399:\n      tag_400\n      tag_5\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1204:1276  modifier whenNotPaused() {... */\n      tag_401\n      tag_30\n      jump\t// in\n    tag_401:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mload\n        /* \"LotteryEngine.sol\":5831:5854  participants.length > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"LotteryEngine.sol\":5831:5897  participants.length > 0 && participants.length <= MAX_PARTICIPANTS */\n      swap1\n      dup2\n      tag_402\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_403:\n      pop\n      iszero\n      tag_404\n      jumpi\n      sload(0x04)\n      swap1\n      0xff\n      dup3\n      0x40\n      shr\n      and\n        /* \"LotteryEngine.sol\":5946:5993  useBlockHashRandomness || useCommitRevealScheme */\n      dup1\n      iszero\n      tag_406\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_407:\n      iszero\n      tag_408\n      jumpi\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n        /* \"LotteryEngine.sol\":6061:6077  sequenceNumber++ */\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      tag_410\n      dup5\n      tag_18\n      jump\t// in\n    tag_410:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      swap1\n      not(sub(shl(0x40, 0x01), 0x01))\n      and\n      or\n      dup1\n      0x04\n      sstore\n      dup2\n        /* \"LotteryEngine.sol\":6526:6561  block.timestamp + commitRevealDelay */\n      tag_411\n        /* \"LotteryEngine.sol\":6544:6561  commitRevealDelay */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":6443:6458  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":6526:6561  block.timestamp + commitRevealDelay */\n      tag_19\n      jump\t// in\n    tag_411:\n        /* \"LotteryEngine.sol\":6592:6632  useCommitReveal && useCommitRevealScheme */\n      swap2\n      dup2\n      tag_412\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_413:\n      pop\n      mload(0x40)\n      swap2\n      tag_414\n      dup4\n      tag_6\n      jump\t// in\n    tag_414:\n      0x00\n      dup4\n      mstore\n      0x20\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap6\n      dup7\n      mstore\n      0x40\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0x60\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x00\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0x80\n      dup6\n      add\n        /* \"LotteryEngine.sol\":6335:6345  msg.sender */\n      caller\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0xa0\n      dup7\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap1\n      0x00\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0xc0\n      dup8\n      add\n        /* \"LotteryEngine.sol\":6405:6417  block.number */\n      swap2\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup4\n      mstore\n      0xe0\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      dup9\n      add\n        /* \"LotteryEngine.sol\":6443:6458  block.timestamp */\n      swap4\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup6\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0x0100\n      dup10\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap6\n      0x00\n      dup8\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0x0120\n      dup11\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap8\n      dup9\n      mstore\n        /* \"LotteryEngine.sol\":6156:6644  RandomRequest({... */\n      0x0140\n      dup11\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap9\n      iszero\n      iszero\n      dup10\n      mstore\n      dup12\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":6125:6140  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap10\n      mload\n      0x03\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      0xff\n      dup1\n      not\n      dup13\n      sload\n      and\n      swap2\n      and\n      or\n      dup11\n      sstore\n      0x01\n      dup11\n      add\n      swap13\n      mload\n      dup1\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_165\n      jumpi\n      shl(0x40, 0x01)\n      dup3\n      gt\n      tag_165\n      jumpi\n      dup15\n      dup1\n      sload\n      swap1\n      dup4\n      dup2\n      sstore\n      dup2\n      dup5\n      lt\n      tag_421\n      jumpi\n    tag_422:\n      pop\n      pop\n      0x20\n      add\n      swap14\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap14\n      0x00\n      swap1\n    tag_423:\n      dup3\n      dup3\n      lt\n      tag_424\n      jumpi\n      pop\n      pop\n      swap1\n      mload\n      0x02\n      dup12\n      add\n      sstore\n      pop\n      mload\n      0x03\n      dup10\n      add\n      sstore\n      swap1\n      mload\n      0x04\n      dup9\n      add\n      dup1\n      sload\n      swap3\n      mload\n      shl(0xa0, 0xff)\n      swap1\n      iszero\n      iszero\n      0xa0\n      shl\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n      0x20\n      swap9\n      pop\n      tag_426\n      swap6\n      swap5\n      0x09\n      swap5\n      swap1\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      mload\n        /* \"LotteryEngine.sol\":6544:6561  commitRevealDelay */\n      0x05\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup8\n      add\n      sstore\n      mload\n        /* \"LotteryEngine.sol\":6125:6140  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup7\n      add\n      sstore\n      mload\n      0x07\n      dup6\n      add\n      sstore\n      mload\n      0x08\n      dup5\n      add\n      sstore\n      mload\n      iszero\n      iszero\n      swap2\n      add\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n    tag_426:\n      mload(0x40)\n      swap1\n      0x00\n      dup3\n      mstore\n      iszero\n      dup3\n        /* \"LotteryEngine.sol\":6670:6745  RandomRequested(sequenceNum, RequestType.WINNER_SELECTION, useCommitReveal) */\n      0xe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      dup4\n      iszero\n      swap5\n      dup6\n      dup9\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":6670:6745  RandomRequested(sequenceNum, RequestType.WINNER_SELECTION, useCommitReveal) */\n      log2\n        /* \"LotteryEngine.sol\":6835:6877  !useCommitReveal || !useCommitRevealScheme */\n      swap1\n      tag_428\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_429:\n        /* \"LotteryEngine.sol\":6831:6937  if (!useCommitReveal || !useCommitRevealScheme) {... */\n      tag_430\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_431:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"LotteryEngine.sol\":6831:6937  if (!useCommitReveal || !useCommitRevealScheme) {... */\n    tag_430:\n        /* \"LotteryEngine.sol\":6913:6924  sequenceNum */\n      tag_432\n      dup2\n      tag_31\n      jump\t// in\n    tag_432:\n        /* \"LotteryEngine.sol\":6831:6937  if (!useCommitReveal || !useCommitRevealScheme) {... */\n      jump(tag_431)\n        /* \"LotteryEngine.sol\":6835:6877  !useCommitReveal || !useCommitRevealScheme */\n    tag_428:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      and(shr(0x48, sload(0x04)), 0xff)\n        /* \"LotteryEngine.sol\":6855:6877  !useCommitRevealScheme */\n      iszero\n        /* \"LotteryEngine.sol\":6835:6877  !useCommitReveal || !useCommitRevealScheme */\n      jump(tag_429)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_424:\n      dup16\n      swap2\n      0x01\n      swap2\n      dup2\n      0x20\n      dup5\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      mload\n      and\n      swap3\n      add\n      swap5\n      add\n      sstore\n      add\n      swap1\n      jump(tag_423)\n    tag_421:\n      0x00\n      mstore\n      dup3\n      keccak256(0x00, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n    tag_433:\n      dup2\n      dup2\n      lt\n      tag_434\n      jumpi\n      pop\n      dup16\n      jump(tag_422)\n    tag_434:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_433)\n        /* \"LotteryEngine.sol\":6592:6632  useCommitReveal && useCommitRevealScheme */\n    tag_412:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n      swap2\n      pop\n      0x48\n      shr\n      and\n        /* \"LotteryEngine.sol\":6592:6632  useCommitReveal && useCommitRevealScheme */\n      dup6\n      jump(tag_413)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_408:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f2072616e646f6d6e657373206d6574686f6420656e61626c656400000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":5946:5993  useBlockHashRandomness || useCommitRevealScheme */\n    tag_406:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      0xff\n      dup3\n      0x48\n      shr\n      and\n        /* \"LotteryEngine.sol\":5946:5993  useBlockHashRandomness || useCommitRevealScheme */\n      jump(tag_407)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_404:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c6964207061727469636970616e7420636f756e7400000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":5831:5897  participants.length > 0 && participants.length <= MAX_PARTICIPANTS */\n    tag_402:\n        /* \"LotteryEngine.sol\":963:967  1000 */\n      0x03e8\n        /* \"LotteryEngine.sol\":5858:5897  participants.length <= MAX_PARTICIPANTS */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"LotteryEngine.sol\":5831:5897  participants.length > 0 && participants.length <= MAX_PARTICIPANTS */\n      dup4\n      jump(tag_403)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_48:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_440\n      tag_1\n      jump\t// in\n    tag_440:\n      calldataload(0x24)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_112\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x04\n      add\n      calldataload\n      tag_445\n      dup2\n      tag_9\n      jump\t// in\n    tag_445:\n      swap1\n      tag_446\n      mload(0x40)\n      swap3\n      dup4\n      tag_8\n      jump\t// in\n    tag_446:\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      calldatasize\n      0x24\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_112\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x24\n      0x20\n      swap4\n      add\n      dup7\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      tag_449\n      tag_26\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2227:2330  modifier nonReentrant() {... */\n      tag_450\n      tag_27\n      jump\t// in\n    tag_450:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup4\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":16404:16419  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n        /* \"LotteryEngine.sol\":16515:16571  require(!request.fulfilled, \"Request already fulfilled\") */\n      tag_451\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n      0x04\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":16451:16468  request.requester */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":16443:16504  require(request.requester != address(0), \"Request not found\") */\n      tag_157\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n        /* \"LotteryEngine.sol\":16451:16482  request.requester != address(0) */\n      iszero\n      iszero\n        /* \"LotteryEngine.sol\":16443:16504  require(request.requester != address(0), \"Request not found\") */\n      tag_16\n      jump\t// in\n        /* \"LotteryEngine.sol\":16515:16571  require(!request.fulfilled, \"Request already fulfilled\") */\n    tag_451:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup1\n      mload\n        /* \"LotteryEngine.sol\":16590:16614  bytes(reason).length > 0 */\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_453\n      jumpi\n      not(0x00)\n        /* \"LotteryEngine.sol\":16800:16812  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      add\n        /* \"LotteryEngine.sol\":16800:16812  block.number */\n      swap3\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup5\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":17009:17044  abi.encodePacked(\"Manual:\", reason) */\n      tag_457\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x27\n        /* \"LotteryEngine.sol\":17002:17045  string(abi.encodePacked(\"Manual:\", reason)) */\n      tag_379\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap6\n      mload(0x40)\n      0x20\n        /* \"LotteryEngine.sol\":16759:16936  abi.encodePacked(... */\n      dup2\n      add\n        /* \"LotteryEngine.sol\":16790:16817  blockhash(block.number - 1) */\n      swap2\n      blockhash\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":16832:16847  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":16862:16878  block.difficulty */\n      prevrandao\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xc0, sub(shl(0x40, 0x01), 0x01))\n      dup6\n      0xc0\n      shl\n      and\n      0x80\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":16759:16936  abi.encodePacked(... */\n      tag_459\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x88\n      dup3\n      dup9\n      mload\n      dup1\n      dup12\n      dup5\n      dup5\n      add\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":16759:16936  abi.encodePacked(... */\n      sub\n      add\n      not(0x1f)\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_8\n      jump\t// in\n    tag_459:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n        /* \"LotteryEngine.sol\":16749:16937  keccak256(abi.encodePacked(... */\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap4\n      mload(0x40)\n        /* \"LotteryEngine.sol\":17009:17044  abi.encodePacked(\"Manual:\", reason) */\n      swap6\n      dup7\n      swap2\n      shl(0xc9, 0x26b0b73ab0b61d)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":17009:17044  abi.encodePacked(\"Manual:\", reason) */\n      dup5\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      mload\n      dup1\n      swap2\n      dup5\n      dup5\n      add\n      mcopy\n      dup2\n      add\n      0x00\n      dup4\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":17009:17044  abi.encodePacked(\"Manual:\", reason) */\n      sub\n      add\n        /* \"LotteryEngine.sol\":16759:16936  abi.encodePacked(... */\n      not(0x1f)\n        /* \"LotteryEngine.sol\":17009:17044  abi.encodePacked(\"Manual:\", reason) */\n      dup2\n      add\n      dup6\n      mstore\n      dup5\n      tag_8\n      jump\t// in\n    tag_457:\n        /* \"LotteryEngine.sol\":17002:17045  string(abi.encodePacked(\"Manual:\", reason)) */\n      tag_29\n      jump\t// in\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_453:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x69, 0x26bab9ba10383937bb34b232903932b0b9b7b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_46:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      and(shr(0x40, sload(0x04)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_44:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x40))\n      tag_468\n      tag_4\n      jump\t// in\n    tag_468:\n      tag_469\n      tag_5\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1500:1562  modifier onlyOwner() {... */\n      swap1\n      tag_470\n      tag_26\n      jump\t// in\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      swap1\n        /* \"LotteryEngine.sol\":4498:4520  provider != address(0) */\n      dup2\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_471\n      jumpi\n      0x20\n        /* \"LotteryEngine.sol\":4610:4657  AuthorizedProviderUpdated(provider, authorized) */\n      0xd6bb5132b8c1a381981b94d9eda2294ab5f22147ef4d46613202cf95d69d10f8\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap2\n      dup4\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":4552:4571  authorizedProviders */\n      0x0b\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      mstore\n        /* \"LotteryEngine.sol\":4552:4594  authorizedProviders[provider] = authorized */\n      tag_473\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      keccak256(0x00, 0x40)\n      swap1\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      iszero\n      iszero\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"LotteryEngine.sol\":4552:4594  authorizedProviders[provider] = authorized */\n    tag_473:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":4610:4657  AuthorizedProviderUpdated(provider, authorized) */\n      log2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n    tag_471:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x81, 0x24b73b30b634b210383937bb34b232b9)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_42:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"LotteryEngine.sol\":4764:4776  block.number */\n      number\n        /* \"LotteryEngine.sol\":4750:4776  blockNumber < block.number */\n      dup2\n      lt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      iszero\n      tag_478\n      jumpi\n        /* \"LotteryEngine.sol\":4849:4852  256 */\n      0x0100\n        /* \"LotteryEngine.sol\":4819:4845  block.number - blockNumber */\n      tag_480\n        /* \"LotteryEngine.sol\":4764:4776  block.number */\n      dup3\n      number\n        /* \"LotteryEngine.sol\":4819:4845  block.number - blockNumber */\n      tag_14\n      jump\t// in\n    tag_480:\n        /* \"LotteryEngine.sol\":4819:4852  block.number - blockNumber <= 256 */\n      gt\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_481\n      jumpi\n        /* \"LotteryEngine.sol\":4920:4942  blockhash(blockNumber) */\n      dup1\n      blockhash\n        /* \"LotteryEngine.sol\":4961:4984  blockHash != bytes32(0) */\n      dup1\n      iszero\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      tag_483\n      jumpi\n      dup2\n      0x40\n      swap2\n        /* \"LotteryEngine.sol\":5201:5240  BlockHashStored(blockNumber, blockHash) */\n      0x90cbc6ad14a45cb8a21348dd4105f964f14f41ee0b36e5965b301804c8591f96\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap4\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":5028:5049  historicalBlockHashes */\n      0x09\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      dup1\n      dup4\n      0x00\n      keccak256\n      sstore\n        /* \"LotteryEngine.sol\":5103:5118  lastStoredBlock */\n      0x0a\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":5089:5118  blockNumber > lastStoredBlock */\n      dup3\n      gt\n        /* \"LotteryEngine.sol\":5085:5176  if (blockNumber > lastStoredBlock) {... */\n      tag_485\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_486:\n      dup3\n      mload\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":5201:5240  BlockHashStored(blockNumber, blockHash) */\n      log1\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      stop\n        /* \"LotteryEngine.sol\":5085:5176  if (blockNumber > lastStoredBlock) {... */\n    tag_485:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n        /* \"LotteryEngine.sol\":5103:5118  lastStoredBlock */\n      0x0a\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n        /* \"LotteryEngine.sol\":5085:5176  if (blockNumber > lastStoredBlock) {... */\n      jump(tag_486)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_483:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x73, 0x092dcecc2d8d2c840c4d8dec6d640d0c2e6d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_481:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x426c6f636b206861736820756e617661696c61626c65)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_478:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x109b1bd8dac81b9bdd081e595d081b5a5b9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_40:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0x40, 0x01), 0x01)\n      tag_491\n      tag_1\n      jump\t// in\n    tag_491:\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":18442:18458  requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      tag_492\n      tag_493\n      keccak256(0x00, 0x40)\n      tag_13\n      jump\t// in\n    tag_493:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap1\n      tag_3\n      jump\t// in\n    tag_492:\n      sub\n      swap1\n      return\n    tag_38:\n      jumpi(tag_112, callvalue)\n      jumpi(tag_112, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      tag_498\n      tag_1\n      jump\t// in\n    tag_498:\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":18020:18035  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup3\n      mstore\n      0xff\n      0x04\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":18020:18058  pendingRequests[sequenceNum].fulfilled */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0xa0\n      shr\n      and\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_112\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_112\n      jumpi\n      jump\t// out\n    tag_3:\n      swap1\n      0x20\n      dup1\n      dup4\n      mload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      swap3\n      add\n      swap1\n      0x00\n    tag_503:\n      dup2\n      dup2\n      lt\n      tag_504\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_504:\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup5\n      mstore\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_503)\n    tag_4:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_112\n      jumpi\n      jump\t// out\n    tag_5:\n      calldataload(0x24)\n      swap1\n      dup2\n      iszero\n      iszero\n      dup3\n      sub\n      tag_112\n      jumpi\n      jump\t// out\n    tag_6:\n      0x0160\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_165\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_7:\n      0xa0\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_165\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_8:\n      swap1\n      0x1f\n        /* \"LotteryEngine.sol\":16759:16936  abi.encodePacked(... */\n      dup1\n      not\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_165\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_9:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_165\n      jumpi\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_10:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_112\n      jumpi\n      dup1\n      calldataload\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      0x05\n      shl\n      swap2\n      mload(0x40)\n      swap4\n      tag_522\n      0x20\n      dup6\n      add\n      dup7\n      tag_8\n      jump\t// in\n    tag_522:\n      dup5\n      mstore\n      0x20\n      dup1\n      dup6\n      add\n      swap4\n      dup3\n      add\n      add\n      swap2\n      dup3\n      gt\n      tag_112\n      jumpi\n      0x20\n      add\n      swap2\n    tag_525:\n      dup2\n      dup4\n      lt\n      tag_526\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_526:\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_112\n      jumpi\n      dup2\n      mstore\n      0x20\n      swap3\n      dup4\n      add\n      swap3\n      add\n      jump(tag_525)\n    tag_11:\n      swap1\n      0x03\n      dup3\n      lt\n      iszero\n      tag_185\n      jumpi\n      mstore\n      jump\t// out\n    tag_12:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_359\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_13:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      dup2\n      sload\n      swap2\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap3\n      0x00\n    tag_534:\n      dup2\n      dup2\n      lt\n      tag_535\n      jumpi\n      pop\n      pop\n      tag_537\n      swap3\n      pop\n      sub\n      dup4\n      tag_8\n      jump\t// in\n    tag_537:\n      jump\t// out\n    tag_535:\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      mstore\n      0x01\n      swap5\n      dup6\n      add\n      swap5\n      dup8\n      swap5\n      pop\n      0x20\n      swap1\n      swap4\n      add\n      swap3\n      add\n      jump(tag_534)\n    tag_14:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_355\n      jumpi\n      jump\t// out\n    tag_16:\n      iszero\n      tag_540\n      jumpi\n      jump\t// out\n    tag_540:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x14995c5d595cdd081b9bdd08199bdd5b99)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_17:\n      iszero\n      tag_542\n      jumpi\n      jump\t// out\n    tag_542:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x5265717565737420616c72656164792066756c66696c6c656400000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_18:\n      sub(shl(0x40, 0x01), 0x01)\n      and\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      eq\n      tag_355\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_19:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_355\n      jumpi\n      jump\t// out\n    tag_21:\n      iszero\n      tag_548\n      jumpi\n      jump\t// out\n    tag_548:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x4e6f74206120636f6d6d69742d72657665616c20726571756573740000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_22:\n      iszero\n      tag_550\n      jumpi\n      jump\t// out\n    tag_550:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x105b1c9958591e481c995d99585b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_23:\n      dup2\n      iszero\n      tag_552\n      jumpi\n      mod\n      swap1\n      jump\t// out\n    tag_552:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n    tag_24:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_112\n      jumpi\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_112\n      jumpi\n      swap1\n      jump\t// out\n    tag_25:\n      not(0x00)\n      dup2\n      eq\n      tag_355\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_560\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_560:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      shl(0xe0, 0x118cdaa7)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n      0x24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      revert\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_562\n      jumpi\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      0x01\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_562:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_28:\n      swap1\n      0x60\n      swap3\n      0x20\n      swap2\n      dup4\n      mstore\n      0x40\n      dup3\n      dup5\n      add\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap2\n      dup3\n      0x40\n      dup7\n      add\n      mstore\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n        /* \"LotteryEngine.sol\":15304:16061  function _finalizeRequest(uint64 sequenceNum, uint256 randomValue, string memory method) internal {... */\n    tag_29:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":15445:15460  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":15484:15501  request.fulfilled */\n      0x04\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      dup1\n      sload\n      swap2\n      swap4\n      swap2\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"LotteryEngine.sol\":15533:15584  request.requestType == RequestType.WINNER_SELECTION */\n      dup1\n      tag_566\n      jumpi\n        /* \"LotteryEngine.sol\":15637:15657  request.participants */\n      pop\n      swap1\n        /* \"LotteryEngine.sol\":15696:15729  request.participants[winnerIndex] */\n      tag_568\n        /* \"LotteryEngine.sol\":15504:15508  true */\n      0x01\n        /* \"LotteryEngine.sol\":15749:15811  RandomWinnerSelected(winner, randomValue, sequenceNum, method) */\n      0x68dc1228fef2529d8e55d849a6fb811d6fc0355eedb5df83f3d75df9160fcf61\n        /* \"LotteryEngine.sol\":15637:15657  request.participants */\n      swap4\n      add\n        /* \"LotteryEngine.sol\":15623:15664  randomValue % request.participants.length */\n      tag_569\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      sload\n        /* \"LotteryEngine.sol\":15623:15664  randomValue % request.participants.length */\n      dup7\n      tag_23\n      jump\t// in\n    tag_569:\n        /* \"LotteryEngine.sol\":15696:15729  request.participants[winnerIndex] */\n      swap1\n      tag_12\n      jump\t// in\n    tag_568:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n      swap3\n        /* \"LotteryEngine.sol\":15749:15811  RandomWinnerSelected(winner, randomValue, sequenceNum, method) */\n      tag_570\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n        /* \"LotteryEngine.sol\":15749:15811  RandomWinnerSelected(winner, randomValue, sequenceNum, method) */\n      swap3\n      dup4\n      swap3\n      dup4\n      tag_28\n      jump\t// in\n    tag_570:\n      sub\n      swap1\n      log3\n        /* \"LotteryEngine.sol\":15304:16061  function _finalizeRequest(uint64 sequenceNum, uint256 randomValue, string memory method) internal {... */\n      jump\t// out\n        /* \"LotteryEngine.sol\":15529:16054  if (request.requestType == RequestType.WINNER_SELECTION) {... */\n    tag_566:\n        /* \"LotteryEngine.sol\":15504:15508  true */\n      0x01\n        /* \"LotteryEngine.sol\":15833:15881  request.requestType == RequestType.RANDOM_NUMBER */\n      eq\n        /* \"LotteryEngine.sol\":15829:16054  if (request.requestType == RequestType.RANDOM_NUMBER) {... */\n      tag_572\n      jumpi\n        /* \"LotteryEngine.sol\":15529:16054  if (request.requestType == RequestType.WINNER_SELECTION) {... */\n    tag_573:\n      pop\n      pop\n      pop\n      pop\n        /* \"LotteryEngine.sol\":15304:16061  function _finalizeRequest(uint64 sequenceNum, uint256 randomValue, string memory method) internal {... */\n      jump\t// out\n        /* \"LotteryEngine.sol\":15829:16054  if (request.requestType == RequestType.RANDOM_NUMBER) {... */\n    tag_572:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x03\n        /* \"LotteryEngine.sol\":15930:15971  randomValue % (request.max - request.min) */\n      tag_574\n        /* \"LotteryEngine.sol\":15992:16042  RandomNumberGenerated(result, sequenceNum, method) */\n      0x6b815b5b9de29f9199853c891bf2bc0936730912186ece85660b071f5aa4c1b6\n        /* \"LotteryEngine.sol\":15915:15926  request.min */\n      swap5\n        /* \"LotteryEngine.sol\":15945:15970  request.max - request.min */\n      tag_575\n        /* \"LotteryEngine.sol\":15915:15926  request.min */\n      dup5\n      0x02\n        /* \"LotteryEngine.sol\":15915:15972  request.min + (randomValue % (request.max - request.min)) */\n      tag_576\n        /* \"LotteryEngine.sol\":15915:15926  request.min */\n      swap7\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":15945:15956  request.max */\n      swap5\n      dup6\n      swap2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":15945:15970  request.max - request.min */\n      tag_14\n      jump\t// in\n    tag_575:\n        /* \"LotteryEngine.sol\":15930:15971  randomValue % (request.max - request.min) */\n      swap1\n      tag_23\n      jump\t// in\n    tag_574:\n        /* \"LotteryEngine.sol\":15915:15972  request.min + (randomValue % (request.max - request.min)) */\n      swap1\n      tag_19\n      jump\t// in\n    tag_576:\n        /* \"LotteryEngine.sol\":15992:16042  RandomNumberGenerated(result, sequenceNum, method) */\n      tag_577\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n        /* \"LotteryEngine.sol\":15992:16042  RandomNumberGenerated(result, sequenceNum, method) */\n      swap3\n      dup4\n      swap3\n      dup4\n      tag_28\n      jump\t// in\n    tag_577:\n      sub\n      swap1\n      log2\n        /* \"LotteryEngine.sol\":15829:16054  if (request.requestType == RequestType.RANDOM_NUMBER) {... */\n      0x00\n      dup1\n      dup1\n      dup1\n      jump(tag_573)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_30:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n      tag_578\n      jumpi\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n    tag_578:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"LotteryEngine.sol\":12099:12417  function _tryResolveRequest(uint64 sequenceNum) internal {... */\n    tag_31:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":12199:12214  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0xff\n        /* \"LotteryEngine.sol\":12242:12259  request.fulfilled */\n      0x04\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":12242:12259  request.fulfilled */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0xa0\n      shr\n      and\n        /* \"LotteryEngine.sol\":12238:12268  if (request.fulfilled) return; */\n      tag_580\n      jumpi\n        /* \"LotteryEngine.sol\":12310:12343  _generateRandomValue(sequenceNum) */\n      dup1\n      tag_582\n        /* \"LotteryEngine.sol\":12354:12409  _finalizeRequest(sequenceNum, randomValue, \"BlockHash\") */\n      tag_537\n        /* \"LotteryEngine.sol\":12310:12343  _generateRandomValue(sequenceNum) */\n      swap3\n      tag_33\n      jump\t// in\n    tag_582:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      swap2\n      tag_584\n      0x40\n      dup5\n      tag_8\n      jump\t// in\n    tag_584:\n      0x09\n      dup4\n      mstore\n      shl(0xbb, 0x084d8dec6d690c2e6d)\n      0x20\n      dup5\n      add\n      mstore\n        /* \"LotteryEngine.sol\":12354:12409  _finalizeRequest(sequenceNum, randomValue, \"BlockHash\") */\n      tag_29\n      jump\t// in\n        /* \"LotteryEngine.sol\":12238:12268  if (request.fulfilled) return; */\n    tag_580:\n        /* \"LotteryEngine.sol\":12261:12268  return; */\n      pop\n      jump\t// out\n        /* \"LotteryEngine.sol\":12429:13669  function _tryResolveCommitRevealRequest(uint64 sequenceNum) internal {... */\n    tag_32:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      and\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":12541:12556  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0xff\n        /* \"LotteryEngine.sol\":12584:12601  request.fulfilled */\n      0x04\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0xa0\n      shr\n      and\n        /* \"LotteryEngine.sol\":12580:12610  if (request.fulfilled) return; */\n      tag_592\n      jumpi\n      0x00\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup4\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":12709:12725  requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n      swap1\n      dup3\n        /* \"LotteryEngine.sol\":12814:12834  i < revealers.length */\n    tag_587:\n      dup3\n      dup2\n      lt\n      tag_588\n      jumpi\n        /* \"LotteryEngine.sol\":13056:13073  validReveals == 0 */\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      swap2\n      dup2\n        /* \"LotteryEngine.sol\":13056:13118  validReveals == 0 && block.timestamp <= request.revealDeadline */\n      swap3\n      tag_590\n      jumpi\n        /* \"LotteryEngine.sol\":12794:12971  for (uint256 i = 0; i < revealers.length; i++) {... */\n    tag_591:\n        /* \"LotteryEngine.sol\":13052:13178  if (validReveals == 0 && block.timestamp <= request.revealDeadline) {... */\n      pop\n      tag_592\n      jumpi\n        /* \"LotteryEngine.sol\":13273:13289  validReveals > 0 */\n      tag_594\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":12709:12725  requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n        /* \"LotteryEngine.sol\":14592:14615  uint256 revealCount = 0 */\n      swap1\n      0x00\n        /* \"LotteryEngine.sol\":14681:14694  uint256 i = 0 */\n      swap4\n      0x00\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap2\n      dup1\n      sload\n        /* \"LotteryEngine.sol\":14676:14959  for (uint256 i = 0; i < revealers.length; i++) {... */\n      swap3\n        /* \"LotteryEngine.sol\":14696:14716  i < revealers.length */\n    tag_596:\n      dup4\n      dup2\n      lt\n      tag_597\n      jumpi\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      pop\n      pop\n      pop\n      not(0x00)\n        /* \"LotteryEngine.sol\":15129:15141  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      add\n        /* \"LotteryEngine.sol\":15129:15141  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":13654:13660  method */\n      tag_537\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap4\n      mload(0x40)\n        /* \"LotteryEngine.sol\":15058:15239  abi.encodePacked(... */\n      swap2\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":15058:15239  abi.encodePacked(... */\n      dup4\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      swap4\n      dup5\n      mstore\n        /* \"LotteryEngine.sol\":15119:15146  blockhash(block.number - 1) */\n      blockhash\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      dup4\n      add\n      mstore\n        /* \"LotteryEngine.sol\":15161:15176  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x60\n      dup4\n      add\n      mstore\n      0x80\n      dup3\n      add\n      mstore\n      shl(0xc0, sub(shl(0x40, 0x01), 0x01))\n      dup4\n      0xc0\n      shl\n      and\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":15058:15239  abi.encodePacked(... */\n      0x88\n      dup2\n      mstore\n      tag_602\n      0xa8\n      dup3\n      tag_8\n      jump\t// in\n    tag_602:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n        /* \"LotteryEngine.sol\":15048:15240  keccak256(abi.encodePacked(... */\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      tag_603\n      0x40\n      dup3\n      tag_8\n      jump\t// in\n    tag_603:\n      0x0c\n      dup2\n      mstore\n      shl(0xa2, 0x10dbdb5b5a5d14995d99585b)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":13269:13591  if (validReveals > 0) {... */\n      swap2\n        /* \"LotteryEngine.sol\":13654:13660  method */\n      tag_29\n      jump\t// in\n        /* \"LotteryEngine.sol\":14718:14721  i++ */\n    tag_597:\n        /* \"LotteryEngine.sol\":14782:14794  revealers[i] */\n      tag_605\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_605:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":12860:12873  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup4\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0xff\n        /* \"LotteryEngine.sol\":12860:12909  commitReveals[revealers[i]][sequenceNum].revealed */\n      0x02\n        /* \"LotteryEngine.sol\":14827:14842  reveal.revealed */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":14823:14948  if (reveal.revealed) {... */\n      tag_606\n      jumpi\n        /* \"LotteryEngine.sol\":14718:14721  i++ */\n    tag_607:\n      pop\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      add\n        /* \"LotteryEngine.sol\":14681:14694  uint256 i = 0 */\n      jump(tag_596)\n        /* \"LotteryEngine.sol\":14823:14948  if (reveal.revealed) {... */\n    tag_606:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n        /* \"LotteryEngine.sol\":14882:14900  reveal.revealValue */\n      swap2\n      swap8\n      swap6\n      dup3\n        /* \"LotteryEngine.sol\":14919:14932  revealCount++ */\n      tag_608\n        /* \"LotteryEngine.sol\":14882:14900  reveal.revealValue */\n      swap3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":14863:14900  combinedEntropy ^= reveal.revealValue */\n      xor\n        /* \"LotteryEngine.sol\":14919:14932  revealCount++ */\n      swap6\n      tag_25\n      jump\t// in\n    tag_608:\n        /* \"LotteryEngine.sol\":14823:14948  if (reveal.revealed) {... */\n      swap7\n      swap1\n      jump(tag_607)\n        /* \"LotteryEngine.sol\":13269:13591  if (validReveals > 0) {... */\n    tag_594:\n        /* \"LotteryEngine.sol\":13654:13660  method */\n      tag_537\n        /* \"LotteryEngine.sol\":13503:13536  _generateRandomValue(sequenceNum) */\n      swap2\n      pop\n      tag_609\n      dup2\n      tag_33\n      jump\t// in\n    tag_609:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload(0x40)\n      tag_610\n      0x40\n      dup3\n      tag_8\n      jump\t// in\n    tag_610:\n      0x11\n      dup2\n      mstore\n      shl(0x78, 0x426c6f636b4861736846616c6c6261636b)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":13269:13591  if (validReveals > 0) {... */\n      swap2\n        /* \"LotteryEngine.sol\":13654:13660  method */\n      tag_29\n      jump\t// in\n        /* \"LotteryEngine.sol\":13052:13178  if (validReveals == 0 && block.timestamp <= request.revealDeadline) {... */\n    tag_592:\n        /* \"LotteryEngine.sol\":13135:13142  return; */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LotteryEngine.sol\":13056:13118  validReveals == 0 && block.timestamp <= request.revealDeadline */\n    tag_590:\n        /* \"LotteryEngine.sol\":12709:12725  requestRevealers */\n      0x08\n        /* \"LotteryEngine.sol\":13096:13118  request.revealDeadline */\n      swap2\n      pop\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":13077:13092  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":13077:13118  block.timestamp <= request.revealDeadline */\n      gt\n      iszero\n        /* \"LotteryEngine.sol\":13056:13118  validReveals == 0 && block.timestamp <= request.revealDeadline */\n      0x00\n      jump(tag_591)\n        /* \"LotteryEngine.sol\":12836:12839  i++ */\n    tag_588:\n        /* \"LotteryEngine.sol\":12874:12886  revealers[i] */\n      tag_611\n      dup2\n      dup4\n      tag_12\n      jump\t// in\n    tag_611:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      sload\n      swap1\n      0x03\n      shl\n      shr\n      and\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":12860:12873  commitReveals */\n      0x07\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      dup8\n      0x00\n      mstore\n      0x20\n      mstore\n      0xff\n        /* \"LotteryEngine.sol\":12860:12909  commitReveals[revealers[i]][sequenceNum].revealed */\n      0x02\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      keccak256(0x00, 0x40)\n        /* \"LotteryEngine.sol\":12860:12909  commitReveals[revealers[i]][sequenceNum].revealed */\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      and\n        /* \"LotteryEngine.sol\":12856:12960  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n      tag_612\n      jumpi\n        /* \"LotteryEngine.sol\":12836:12839  i++ */\n    tag_613:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n      add\n        /* \"LotteryEngine.sol\":12799:12812  uint256 i = 0 */\n      jump(tag_587)\n        /* \"LotteryEngine.sol\":12856:12960  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n    tag_612:\n        /* \"LotteryEngine.sol\":12930:12944  validReveals++ */\n      swap3\n      tag_614\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x01\n        /* \"LotteryEngine.sol\":12930:12944  validReveals++ */\n      swap2\n      tag_25\n      jump\t// in\n    tag_614:\n        /* \"LotteryEngine.sol\":12856:12960  if (commitReveals[revealers[i]][sequenceNum].revealed) {... */\n      swap4\n      swap1\n      pop\n      jump(tag_613)\n        /* \"LotteryEngine.sol\":13681:14367  function _generateRandomValue(uint64 sequenceNum) internal returns (uint256) {... */\n    tag_33:\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"LotteryEngine.sol\":13801:13816  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":13972:13992  request.requestBlock */\n      0x05\n      dup2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":13972:13996  request.requestBlock > 0 */\n      dup1\n      iszero\n      tag_615\n      jumpi\n      not(0x00)\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":13972:14042  request.requestBlock > 0 ? request.requestBlock - 1 : block.number - 1 */\n      swap2\n    tag_619:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      not(0x00)\n        /* \"LotteryEngine.sol\":14068:14080  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      add\n        /* \"LotteryEngine.sol\":14068:14080  block.number */\n      swap2\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup4\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":14122:14137  lastStoredBlock */\n      0x0a\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      0x00\n      mstore\n        /* \"LotteryEngine.sol\":14100:14121  historicalBlockHashes */\n      0x09\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"LotteryEngine.sol\":14214:14231  request.timestamp */\n      swap1\n        /* \"LotteryEngine.sol\":14246:14263  request.requester */\n      0x04\n        /* \"LotteryEngine.sol\":13801:13816  pendingRequests */\n      0x06\n        /* \"LotteryEngine.sol\":14214:14231  request.timestamp */\n      dup3\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":14246:14263  request.requester */\n      swap2\n      add\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n      swap1\n        /* \"LotteryEngine.sol\":14278:14285  nonce++ */\n      0x03\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sload\n        /* \"LotteryEngine.sol\":14278:14285  nonce++ */\n      swap3\n      tag_622\n      dup5\n      tag_25\n      jump\t// in\n    tag_622:\n      0x03\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      sstore\n      mload(0x40)\n        /* \"LotteryEngine.sol\":13931:14322  abi.encodePacked(... */\n      swap6\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x20\n        /* \"LotteryEngine.sol\":13931:14322  abi.encodePacked(... */\n      dup8\n      add\n        /* \"LotteryEngine.sol\":13962:14043  blockhash(request.requestBlock > 0 ? request.requestBlock - 1 : block.number - 1) */\n      swap8\n      blockhash\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup9\n      mstore\n        /* \"LotteryEngine.sol\":14058:14085  blockhash(block.number - 1) */\n      blockhash\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x40\n      dup8\n      add\n      mstore\n      0x60\n      dup7\n      add\n      mstore\n        /* \"LotteryEngine.sol\":14153:14168  block.timestamp */\n      timestamp\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0x80\n      dup7\n      add\n      mstore\n        /* \"LotteryEngine.sol\":14183:14199  block.difficulty */\n      prevrandao\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      0xa0\n      dup7\n      add\n      mstore\n      0xc0\n      dup6\n      add\n      mstore\n      not(0xffffffffffffffffffffffff)\n      swap1\n      0x60\n      shl\n      and\n      0xe0\n      dup5\n      add\n      mstore\n      0xf4\n      dup4\n      add\n      mstore\n      shl(0xc0, sub(shl(0x40, 0x01), 0x01))\n      swap1\n      0xc0\n      shl\n      and\n      0x0114\n      dup3\n      add\n      mstore\n        /* \"LotteryEngine.sol\":13931:14322  abi.encodePacked(... */\n      0xfc\n      dup2\n      mstore\n      tag_623\n      0x011c\n      dup3\n      tag_8\n      jump\t// in\n    tag_623:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      mload\n        /* \"LotteryEngine.sol\":13921:14323  keccak256(abi.encodePacked(... */\n      swap1\n      keccak256\n        /* \"LotteryEngine.sol\":13681:14367  function _generateRandomValue(uint64 sequenceNum) internal returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"LotteryEngine.sol\":13972:14042  request.requestBlock > 0 ? request.requestBlock - 1 : block.number - 1 */\n    tag_615:\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      pop\n      not(0x00)\n        /* \"LotteryEngine.sol\":14026:14038  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      add\n        /* \"LotteryEngine.sol\":14026:14038  block.number */\n      number\n        /* \"LotteryEngine.sol\":466:20001  contract CitreaLotteryEngine is Ownable, ReentrancyGuard, Pausable {... */\n      dup2\n      gt\n      tag_355\n      jumpi\n        /* \"LotteryEngine.sol\":13972:14042  request.requestBlock > 0 ? request.requestBlock - 1 : block.number - 1 */\n      swap2\n      jump(tag_619)\n\n    auxdata: 0xa2646970667358221220df6aa6ced4f975b9ab410754fb819daffe22b8b50cf134f3b6ffdcfbdd993e9564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460d657331560c3575f8054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560ff19600254166002556001690101000000000000000060045461012c60055582600355828060501b031916171760045543600a555f19430143811160af57435f5260096020524060405f205561269e90816100db8239f35b634e487b7160e01b5f52601160045260245ffd5b631e4fbdf760e01b5f525f60045260245ffd5b5f80fdfe6080806040526004361015610052575b5036156100505760405162461bcd60e51b8152602060048201526012602482015271119d5b98dd1a5bdb881b9bdd08199bdd5b9960721b6044820152606490fd5b005b5f3560e01c9081630f855ec214611d5e5750806323806fad14611d0e578063262fd73314611bd357806327837eaf14611b125780633959602d14611aed57806345c7006914611955578063461d54e9146116015780634a4e3bd51461156e57806351858e271461151557806352bfa7e51461133d57806358859d741461122f5780635c975abb1461120d5780635f2c66d8146111f157806365b07d581461113c57806369b162011461111257806369dc3ae2146110d557806369f74f6d146110765780636b27e2bb146110045780636e68fc0a14610f9d578063715018a614610f465780637402e13d14610ec2578063888eeea614610ea75780638da5cb5b14610e80578063b76755c514610e5b578063c7513f8714610e3e578063cbbf67ec14610c5a578063cd3b842e14610b95578063d21fb42114610adf578063d598e967146109df578063e71bfdc0146109c2578063e7c4155d1461067a578063f2fcd3281461049a578063f2fde38b14610415578063f3baf070146103f9578063f3fef3a3146102c85763fe6d06b4146101ea575f61000f565b346102c45760403660031901126102c457610203611e05565b61020b611db3565b905f608060405161021b81611e46565b828152826020820152826040820152826060820152015260018060a01b03165f5260076020526001600160401b0360405f2091165f5260205260a060405f2060405161026681611e46565b81549182825260018101546020830190815260ff600283015416906040840191151582526080600460038501549460608701958652015494019384526040519485525160208501525115156040840152516060830152516080820152f35b5f80fd5b346102c45760403660031901126102c4576102e1611e05565b602435906102ed612121565b6102f5612147565b6001600160a01b031680156103c057478211610384575f80809381935af13d1561037f573d61032381611e82565b906103316040519283611e61565b81525f60203d92013e5b156103465760018055005b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b61033b565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b346102c4575f3660031901126102c45760206040516103e88152f35b346102c45760203660031901126102c45761042e611e05565b610436612121565b6001600160a01b03168015610487575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346102c45760403660031901126102c4576104b3611d9d565b6001600160401b03602435916104c76122e1565b6104cf612147565b16805f526006602052600860405f2061051460ff60048301546104fb60018060a01b0382161515611f95565b61050a8260098601541661204b565b60a01c1615611fd5565b0180544210156106355782156105fb57335f52600760205260405f20825f5260205260405f209061054c60ff60028401541615612097565b815415610596575b600490848355436003840155549101556040519182527f776af115a08ee6e6223c4848e4da1ae6f545754de0f819e8baa689e540cca35160203393a360018055005b825f52600860205260405f2090815491600160401b8310156105e757826105c4916001600495018155611f20565b81546001600160a01b0360039290921b91821b19163390911b1790559050610554565b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420706572696f6420656e6465640000000000000000006044820152606490fd5b346102c45760603660031901126102c45760043560243560443580151581036102c4576106a56122e1565b8282111561098d576fffffffffffffffffffffffffffffffff6106c88484611f88565b116109565760045491816001600160401b036106e5818616612021565b166001600160401b0319851617806004556107026005544261203e565b9082610948575b506040519161071783611e2a565b600183526020830193606085526040840197885260608401908152608084019033825260a08501905f825260c086019343855260e08701954287525f61010089015261012088015215156101408701526001600160401b0389165f52600660205260405f2096865160038110156109345760ff80198a5416911617885551998a519a6001600160401b038c116105e757600160401b8c116105e75760018901548c60018b0155808d1061090b575b506020019a600189015f5260205f209b5f905b8282106108ee575050815160028a0155825160038a0155845160048a018054865160ff60a01b90151560a01b166001600160a01b039093166001600160a81b03199091161791909117905560208b8b61086c8c60096101408e8e8e516005860155516006850155610100810151600785015561012081015160088501550151151591019060ff801983541691151516179055565b60405160018152811515848201527fe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de60406001600160401b03851692a28015906108de575b6108c7575b6001600160401b0360405191168152f35b6108d96001600160401b038216612325565b6108b6565b5060ff60045460481c16156108b1565b80516001600160a01b03168e8301556001909101906020016107d8565b60018a015f528c60205f2091820191015b81811061092957506107c5565b5f815560010161091c565b634e487b7160e01b5f52602160045260245ffd5b60481c60ff16915086610709565b60405162461bcd60e51b815260206004820152600f60248201526e52616e676520746f6f206c6172676560881b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b346102c4575f3660031901126102c4576020600554604051908152f35b346102c45760403660031901126102c4576004358015908115918282036102c457610a08611e1b565b91610a11612121565b90610ad8575b15610a87577fb2692b979a0ebbc948769201966bf3af4548dc99b201b0188d8f7d727c612b83916040916004549015159069ff0000000000000000008260481b169068ff000000000000000084861b169069ffff00000000000000001916171760045582519182526020820152a1005b60405162461bcd60e51b815260206004820152602360248201527f4174206c65617374206f6e65206d6574686f64206d75737420626520656e61626044820152621b195960ea1b6064820152608490fd5b5080610a17565b346102c45760203660031901126102c457610af8611d9d565b6001600160401b03165f81815260086020526040812080549092909190815b838110610b3f5760608484610b2c8183611f88565b9060405192835260208301526040820152f35b610b498186611f20565b60018060a01b0391549060031b1c165f52600760205260405f20825f5260205260ff600260405f20015416610b81575b600101610b17565b91610b8d600191612113565b929050610b79565b346102c45760203660031901126102c4576004356001600160401b0381116102c4576020610bca610bf4923690600401611e9d565b610bd26122e1565b6040518093819263461d54e960e01b8352604060048401526044830190611dc9565b5f602483015203815f305af18015610c4f576020915f91610c22575b506001600160401b0360405191168152f35b610c429150823d8411610c48575b610c3a8183611e61565b8101906120f4565b82610c10565b503d610c30565b6040513d5f823e3d90fd5b346102c45760203660031901126102c4576001600160401b03610c7b611d9d565b5f610140604051610c8b81611e2a565b828152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152826101208201520152165f52600660205260405f2060405190610ce282611e2a565b60ff8154166003811015610934578252610cfe60018201611f35565b906020830191825260028101549060408401918252600381015490606085019182526004810154608086019060018060a01b038116825260ff60a088019160a01c1615158152600583015460c0880190815260068401549160e089019283526007850154936101008a0194855260ff60096008880154976101208d01988952015416966101408b0197151588526040519960208b52610da76101808c019c60208d019051611f13565b519861016060408c01528951809c5260206101a08c019a018c5f9d8e5b10610e195750505160608b01525160808a0152516001600160a01b031660a089015251151560c08801525160e08701525161010086015251610120850152516101408401525115156101608301528190039150f35b81516001600160a01b03168c5260019d909d019c60209b8c019b90910190808e610dc4565b346102c4575f3660031901126102c4576020600a54604051908152f35b346102c4575f3660031901126102c457602060ff60045460481c166040519015158152f35b346102c4575f3660031901126102c4575f546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4576020604051603c8152f35b346102c45760403660031901126102c457610edb611e05565b610ee3611db3565b9060018060a01b03165f5260076020526001600160401b0360405f2091165f5260205260a060405f2080549060018101549060ff600282015416600460038301549201549260405194855260208501521515604084015260608301526080820152f35b346102c4575f3660031901126102c457610f5e612121565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760403660031901126102c457610fb66122e1565b60405163e7c4155d60e01b8152600435600482015260243560248201525f60448201526020816064815f305af18015610c4f576020915f91610c2257506001600160401b0360405191168152f35b346102c45760203660031901126102c457600435611020612121565b603c8110158061106a575b1561103557600555005b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642064656c617960981b6044820152606490fd5b50610e1081111561102b565b346102c45760403660031901126102c45761108f611d9d565b6001600160401b0360243591165f52600860205260405f2080548210156102c4576020916110bc91611f20565b905460405160039290921b1c6001600160a01b03168152f35b346102c45760203660031901126102c4576001600160a01b036110f6611e05565b165f52600b602052602060ff60405f2054166040519015158152f35b346102c45760203660031901126102c4576004355f526009602052602060405f2054604051908152f35b346102c45760203660031901126102c4576001600160401b0361115d611d9d565b165f52600660205261014060405f2060ff8154169060028101549060038101546004820154600583015460ff600685015492600786015494826009600889015498015416976111af604051809b611f13565b60208a0152604089015260018060a01b038116606089015260a01c161515608087015260a086015260c085015260e08401526101008301521515610120820152f35b346102c4575f3660031901126102c4576020604051610e108152f35b346102c4575f3660031901126102c457602060ff600254166040519015158152f35b346102c45760203660031901126102c4576004356001600160401b0381116102c45761125f903690600401611e9d565b805115611306575f1943014381116112f2576112b8906003546040519060208201924083524260408301524460608301523360601b60808301526094820152609481526112ad60b482611e61565b5190208251906120d6565b81518110156112de5760051b016020908101516040516001600160a01b03919091168152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b6044820152606490fd5b346102c45760603660031901126102c457611356611d9d565b602435906113626122e1565b61136a612147565b6001600160401b03811691825f5260066020526113ad60ff60405f2061050a8260096004840154936113a560018060a01b0386161515611f95565b01541661204b565b335f52600760205260405f20835f5260205260405f209283549384156114da5760028101908154956113e260ff881615612097565b6004820154421161149f57604051602081019086825260443560408201523360601b606082015260548152611418607482611e61565b5190200361146957611463958460018093015560ff19161790556040519182527fe31c53097a08b041054a61a87113adc8f265bae8df68ba97e83aa8f8901721f760203393a3612382565b60018055005b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527214995d99585b081c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc818dbdb5b5a5d1b595b9d08199bdd5b99606a1b6044820152606490fd5b346102c4575f3660031901126102c45761152d612121565b6115356122e1565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102c4575f3660031901126102c457611586612121565b60025460ff8116156115c55760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b346102c45760403660031901126102c4576004356001600160401b0381116102c457611631903690600401611e9d565b611639611e1b565b6116416122e1565b81518015159081611948575b5015611903576004549060ff8260401c1680156118f6575b156118b1576001600160401b038216916001600160401b0361168684612021565b16906001600160401b0319161780600455816116a46005544261203e565b91816118a3575b50604051916116b983611e2a565b5f835260208301958652604083015f8152606084015f81526080850133815260a08601905f825260c087019143835260e08801934285526101008901955f87526101208a019788526101408a0198151589528b5f52600660205260405f20995160038110156109345760ff80198c54169116178a5560018a019c518051906001600160401b0382116105e757600160401b82116105e7578e80549083815581841061187d575b50506020019d5f5260205f209d5f905b828210611860575050905160028b0155505160038901559051600488018054925160ff60a01b90151560a01b166001600160a01b039092166001600160a81b031990931692909217179055602098506117fa959460099490939092909151600587015551600686015551600785015551600884015551151591019060ff801983541691151516179055565b604051905f825215827fe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de60408315948588820152a290611850575b611842575b604051908152f35b61184b81612325565b61183a565b5060ff60045460481c1615611835565b8f91600191816020848060a01b038351169201940155019061176f565b5f528260205f2091820191015b81811061189857508f61175f565b5f815560010161188a565b60ff915060481c16856116ab565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f2072616e646f6d6e657373206d6574686f6420656e61626c6564000000006044820152606490fd5b5060ff8260481c16611665565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207061727469636970616e7420636f756e74000000000000006044820152606490fd5b6103e8915011158361164d565b346102c45760403660031901126102c45761196e611d9d565b6024356001600160401b0381116102c457366023820112156102c457806004013561199881611e82565b906119a66040519283611e61565b808252602082019236602483830101116102c457815f926024602093018637830101526119d1612121565b6119d9612147565b6001600160401b0383165f526006602052611a0a60ff600460405f20015461050a60018060a01b0382161515611f95565b805115611ab2575f194301924384116112f257611aad60276114639560405160208101914082524260408201524460608201526001600160401b0360c01b8560c01b166080820152611a766088828851808b8484015e81015f838201520301601f198101835282611e61565b519020936040519586916626b0b73ab0b61d60c91b60208401525180918484015e81015f838201520301601f198101855284611e61565b6121cf565b60405162461bcd60e51b815260206004820152601360248201527226bab9ba10383937bb34b232903932b0b9b7b760691b6044820152606490fd5b346102c4575f3660031901126102c457602060ff60045460401c166040519015158152f35b346102c45760403660031901126102c457611b2b611e05565b611b33611e1b565b90611b3c612121565b6001600160a01b0316908115611b9b5760207fd6bb5132b8c1a381981b94d9eda2294ab5f22147ef4d46613202cf95d69d10f891835f52600b8252611b908160405f209060ff801983541691151516179055565b6040519015158152a2005b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210383937bb34b232b960811b6044820152606490fd5b346102c45760203660031901126102c45760043543811015611cd357610100611bfc8243611f88565b11611c955780408015611c5b57816040917f90cbc6ad14a45cb8a21348dd4105f964f14f41ee0b36e5965b301804c8591f96935f52600960205280835f2055600a548211611c52575b82519182526020820152a1005b81600a55611c45565b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840c4d8dec6d640d0c2e6d60731b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275426c6f636b206861736820756e617661696c61626c6560501b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272109b1bd8dac81b9bdd081e595d081b5a5b9959606a1b6044820152606490fd5b346102c45760203660031901126102c4576001600160401b03611d2f611d9d565b165f526008602052611d5a611d4660405f20611f35565b604051918291602083526020830190611dc9565b0390f35b346102c45760203660031901126102c4576020906001600160401b03611d82611d9d565b165f526006825260ff600460405f20015460a01c1615158152f35b600435906001600160401b03821682036102c457565b602435906001600160401b03821682036102c457565b90602080835192838152019201905f5b818110611de65750505090565b82516001600160a01b0316845260209384019390920191600101611dd9565b600435906001600160a01b03821682036102c457565b6024359081151582036102c457565b61016081019081106001600160401b038211176105e757604052565b60a081019081106001600160401b038211176105e757604052565b90601f801991011681019081106001600160401b038211176105e757604052565b6001600160401b0381116105e757601f01601f191660200190565b81601f820112156102c4578035916001600160401b0383116105e7578260051b9160405193611ecf6020850186611e61565b84526020808501938201019182116102c457602001915b818310611ef35750505090565b82356001600160a01b03811681036102c457815260209283019201611ee6565b9060038210156109345752565b80548210156112de575f5260205f2001905f90565b90604051918281549182825260208201905f5260205f20925f5b818110611f66575050611f6492500383611e61565b565b84546001600160a01b0316835260019485019487945060209093019201611f4f565b919082039182116112f257565b15611f9c57565b60405162461bcd60e51b815260206004820152601160248201527014995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fd5b15611fdc57565b60405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792066756c66696c6c6564000000000000006044820152606490fd5b6001600160401b03166001600160401b0381146112f25760010190565b919082018092116112f257565b1561205257565b60405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120636f6d6d69742d72657665616c207265717565737400000000006044820152606490fd5b1561209e57565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b81156120e0570690565b634e487b7160e01b5f52601260045260245ffd5b908160209103126102c457516001600160401b03811681036102c45790565b5f1981146112f25760010190565b5f546001600160a01b0316330361213457565b63118cdaa760e01b5f523360045260245ffd5b600260015414612158576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9060609260209183526040828401528051918291826040860152018484015e5f828201840152601f01601f1916010190565b6001600160401b03165f81815260066020526040902060048101805460ff60a01b1916600160a01b179055805491939160ff166003811015610934578061226f57509061224b60017f68dc1228fef2529d8e55d849a6fb811d6fc0355eedb5df83f3d75df9160fcf6193016122458154866120d6565b90611f20565b60018060a01b0391549060031b1c169261226a6040519283928361219d565b0390a3565b60011461227d575b50505050565b60036122c07f6b815b5b9de29f9199853c891bf2bc0936730912186ece85660b071f5aa4c1b6946122ba8460026122c69601549485910154611f88565b906120d6565b9061203e565b6122d56040519283928361219d565b0390a25f808080612277565b60ff600254166122ed57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160401b0381165f52600660205260ff600460405f20015460a01c1661237f5780612355611f649261257f565b60405191612364604084611e61565b6009835268084d8dec6d690c2e6d60bb1b60208401526121cf565b50565b6001600160401b03811690815f52600660205260405f2060ff600482015460a01c16612515575f838152600860205260408120805490825b82811061252957505050158091819261251a575b50612515576124d557815f52600860205260405f205f905f935f918054925b83811061247757505050505f1943014381116112f257611f6493604051916020830193845240604083015242606083015260808201526001600160401b0360c01b8360c01b1660a08201526088815261244760a882611e61565b519020604051612458604082611e61565b600c81526b10dbdb5b5a5d14995d99585b60a21b6020820152916121cf565b6124818183611f20565b60018060a01b0391549060031b1c165f52600760205260405f20835f5260205260405f2060ff6002820154166124bb575b506001016123ed565b6001919795826124ce9201541895612113565b96906124b2565b611f6491506124e38161257f565b6040516124f1604082611e61565b6011815270426c6f636b4861736846616c6c6261636b60781b6020820152916121cf565b505050565b6008915001544211155f6123ce565b6125338183611f20565b60018060a01b0391549060031b1c165f52600760205260405f20875f5260205260ff600260405f2001541661256b575b6001016123ba565b92612577600191612113565b939050612563565b6001600160401b0381165f90815260066020526040902060058101548015612656575f1981019081116112f257915b5f194301914383116112f257600a545f52600960205260405f2054906004600682015491015490600354926125e284612113565b60035560405195602087019740885240604087015260608601524260808601524460a086015260c08501526bffffffffffffffffffffffff199060601b1660e084015260f48301526001600160401b0360c01b9060c01b1661011482015260fc815261265061011c82611e61565b51902090565b505f1943014381116112f257916125ae56fea2646970667358221220df6aa6ced4f975b9ab410754fb819daffe22b8b50cf134f3b6ffdcfbdd993e9564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0xD6 JUMPI CALLER ISZERO PUSH1 0xC3 JUMPI PUSH0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND PUSH1 0x2 SSTORE PUSH1 0x1 PUSH10 0x1010000000000000000 PUSH1 0x4 SLOAD PUSH2 0x12C PUSH1 0x5 SSTORE DUP3 PUSH1 0x3 SSTORE DUP3 DUP1 PUSH1 0x50 SHL SUB NOT AND OR OR PUSH1 0x4 SSTORE NUMBER PUSH1 0xA SSTORE PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH1 0xAF JUMPI NUMBER PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE BLOCKHASH PUSH1 0x40 PUSH0 KECCAK256 SSTORE PUSH2 0x269E SWAP1 DUP2 PUSH2 0xDB DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x52 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xF855EC2 EQ PUSH2 0x1D5E JUMPI POP DUP1 PUSH4 0x23806FAD EQ PUSH2 0x1D0E JUMPI DUP1 PUSH4 0x262FD733 EQ PUSH2 0x1BD3 JUMPI DUP1 PUSH4 0x27837EAF EQ PUSH2 0x1B12 JUMPI DUP1 PUSH4 0x3959602D EQ PUSH2 0x1AED JUMPI DUP1 PUSH4 0x45C70069 EQ PUSH2 0x1955 JUMPI DUP1 PUSH4 0x461D54E9 EQ PUSH2 0x1601 JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x52BFA7E5 EQ PUSH2 0x133D JUMPI DUP1 PUSH4 0x58859D74 EQ PUSH2 0x122F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x120D JUMPI DUP1 PUSH4 0x5F2C66D8 EQ PUSH2 0x11F1 JUMPI DUP1 PUSH4 0x65B07D58 EQ PUSH2 0x113C JUMPI DUP1 PUSH4 0x69B16201 EQ PUSH2 0x1112 JUMPI DUP1 PUSH4 0x69DC3AE2 EQ PUSH2 0x10D5 JUMPI DUP1 PUSH4 0x69F74F6D EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0x6B27E2BB EQ PUSH2 0x1004 JUMPI DUP1 PUSH4 0x6E68FC0A EQ PUSH2 0xF9D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF46 JUMPI DUP1 PUSH4 0x7402E13D EQ PUSH2 0xEC2 JUMPI DUP1 PUSH4 0x888EEEA6 EQ PUSH2 0xEA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE80 JUMPI DUP1 PUSH4 0xB76755C5 EQ PUSH2 0xE5B JUMPI DUP1 PUSH4 0xC7513F87 EQ PUSH2 0xE3E JUMPI DUP1 PUSH4 0xCBBF67EC EQ PUSH2 0xC5A JUMPI DUP1 PUSH4 0xCD3B842E EQ PUSH2 0xB95 JUMPI DUP1 PUSH4 0xD21FB421 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xD598E967 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xE71BFDC0 EQ PUSH2 0x9C2 JUMPI DUP1 PUSH4 0xE7C4155D EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0xF2FCD328 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF3BAF070 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x2C8 JUMPI PUSH4 0xFE6D06B4 EQ PUSH2 0x1EA JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x203 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x21B DUP2 PUSH2 0x1E46 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x266 DUP2 PUSH2 0x1E46 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x2E1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2ED PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3C0 JUMPI SELFBALANCE DUP3 GT PUSH2 0x384 JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH2 0x323 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 PUSH2 0x331 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x346 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x42E PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x4B3 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4C7 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x2147 JUMP JUMPDEST AND DUP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x514 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x4FB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x50A DUP3 PUSH1 0x9 DUP7 ADD SLOAD AND PUSH2 0x204B JUMP JUMPDEST PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1FD5 JUMP JUMPDEST ADD DUP1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x635 JUMPI DUP3 ISZERO PUSH2 0x5FB JUMPI CALLER PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH2 0x54C PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2097 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x596 JUMPI JUMPDEST PUSH1 0x4 SWAP1 DUP5 DUP4 SSTORE NUMBER PUSH1 0x3 DUP5 ADD SSTORE SLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x776AF115A08EE6E6223C4848E4DA1AE6F545754DE0F819E8BAA689E540CCA351 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x5E7 JUMPI DUP3 PUSH2 0x5C4 SWAP2 PUSH1 0x1 PUSH1 0x4 SWAP6 ADD DUP2 SSTORE PUSH2 0x1F20 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE SWAP1 POP PUSH2 0x554 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A590818DBDB5B5A5D1B595B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D69746D656E7420706572696F6420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2C4 JUMPI PUSH2 0x6A5 PUSH2 0x22E1 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x98D JUMPI PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x6C8 DUP5 DUP5 PUSH2 0x1F88 JUMP JUMPDEST GT PUSH2 0x956 JUMPI PUSH1 0x4 SLOAD SWAP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x6E5 DUP2 DUP7 AND PUSH2 0x2021 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR DUP1 PUSH1 0x4 SSTORE PUSH2 0x702 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x203E JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x948 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x717 DUP4 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x40 DUP5 ADD SWAP8 DUP9 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0xC0 DUP7 ADD SWAP4 NUMBER DUP6 MSTORE PUSH1 0xE0 DUP8 ADD SWAP6 TIMESTAMP DUP8 MSTORE PUSH0 PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 DUP7 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF DUP1 NOT DUP11 SLOAD AND SWAP2 AND OR DUP9 SSTORE MLOAD SWAP10 DUP11 MLOAD SWAP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP13 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP13 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 DUP10 ADD SLOAD DUP13 PUSH1 0x1 DUP12 ADD SSTORE DUP1 DUP14 LT PUSH2 0x90B JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP11 PUSH1 0x1 DUP10 ADD PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP12 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8EE JUMPI POP POP DUP2 MLOAD PUSH1 0x2 DUP11 ADD SSTORE DUP3 MLOAD PUSH1 0x3 DUP11 ADD SSTORE DUP5 MLOAD PUSH1 0x4 DUP11 ADD DUP1 SLOAD DUP7 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP12 DUP12 PUSH2 0x86C DUP13 PUSH1 0x9 PUSH2 0x140 DUP15 DUP15 DUP15 MLOAD PUSH1 0x5 DUP7 ADD SSTORE MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE DUP2 ISZERO ISZERO DUP5 DUP3 ADD MSTORE PUSH32 0xE0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND SWAP3 LOG2 DUP1 ISZERO SWAP1 PUSH2 0x8DE JUMPI JUMPDEST PUSH2 0x8C7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x8D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND ISZERO PUSH2 0x8B1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP15 DUP4 ADD SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 DUP11 ADD PUSH0 MSTORE DUP13 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x929 JUMPI POP PUSH2 0x7C5 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x91C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x48 SHR PUSH1 0xFF AND SWAP2 POP DUP7 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x52616E676520746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO SWAP1 DUP2 ISZERO SWAP2 DUP3 DUP3 SUB PUSH2 0x2C4 JUMPI PUSH2 0xA08 PUSH2 0x1E1B JUMP JUMPDEST SWAP2 PUSH2 0xA11 PUSH2 0x2121 JUMP JUMPDEST SWAP1 PUSH2 0xAD8 JUMPI JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH32 0xB2692B979A0EBBC948769201966BF3AF4548DC99B201B0188D8F7D727C612B83 SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x4 SLOAD SWAP1 ISZERO ISZERO SWAP1 PUSH10 0xFF000000000000000000 DUP3 PUSH1 0x48 SHL AND SWAP1 PUSH9 0xFF0000000000000000 DUP5 DUP7 SHL AND SWAP1 PUSH10 0xFFFF0000000000000000 NOT AND OR OR PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206D6574686F64206D75737420626520656E6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0xA17 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xAF8 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0xB3F JUMPI PUSH1 0x60 DUP5 DUP5 PUSH2 0xB2C DUP2 DUP4 PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xB49 DUP2 DUP7 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0xB81 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 PUSH2 0xB8D PUSH1 0x1 SWAP2 PUSH2 0x2113 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xB79 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH2 0xBCA PUSH2 0xBF4 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x461D54E9 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x40 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH0 PUSH1 0x24 DUP4 ADD MSTORE SUB DUP2 PUSH0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0xC22 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0xC42 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xC48 JUMPI JUMPDEST PUSH2 0xC3A DUP2 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20F4 JUMP JUMPDEST DUP3 PUSH2 0xC10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xC7B PUSH2 0x1D9D JUMP JUMPDEST PUSH0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0xC8B DUP2 PUSH2 0x1E2A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xCE2 DUP3 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP3 MSTORE PUSH2 0xCFE PUSH1 0x1 DUP3 ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0xFF PUSH1 0xA0 DUP9 ADD SWAP2 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD SLOAD SWAP2 PUSH1 0xE0 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP4 PUSH2 0x100 DUP11 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 PUSH2 0x120 DUP14 ADD SWAP9 DUP10 MSTORE ADD SLOAD AND SWAP7 PUSH2 0x140 DUP12 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x40 MLOAD SWAP10 PUSH1 0x20 DUP12 MSTORE PUSH2 0xDA7 PUSH2 0x180 DUP13 ADD SWAP13 PUSH1 0x20 DUP14 ADD SWAP1 MLOAD PUSH2 0x1F13 JUMP JUMPDEST MLOAD SWAP9 PUSH2 0x160 PUSH1 0x40 DUP13 ADD MSTORE DUP10 MLOAD DUP1 SWAP13 MSTORE PUSH1 0x20 PUSH2 0x1A0 DUP13 ADD SWAP11 ADD DUP13 PUSH0 SWAP14 DUP15 JUMPDEST LT PUSH2 0xE19 JUMPI POP POP MLOAD PUSH1 0x60 DUP12 ADD MSTORE MLOAD PUSH1 0x80 DUP11 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE MLOAD PUSH1 0xE0 DUP8 ADD MSTORE MLOAD PUSH2 0x100 DUP7 ADD MSTORE MLOAD PUSH2 0x120 DUP6 ADD MSTORE MLOAD PUSH2 0x140 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE DUP2 SWAP1 SUB SWAP2 POP RETURN JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 MSTORE PUSH1 0x1 SWAP14 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP12 DUP13 ADD SWAP12 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP15 PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xEDB PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xEE3 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xF5E PUSH2 0x2121 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xFB6 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE7C4155D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0xC22 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1020 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x3C DUP2 LT ISZERO DUP1 PUSH2 0x106A JUMPI JUMPDEST ISZERO PUSH2 0x1035 JUMPI PUSH1 0x5 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642064656C6179 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0xE10 DUP2 GT ISZERO PUSH2 0x102B JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x108F PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD SWAP2 AND PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x10BC SWAP2 PUSH2 0x1F20 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10F6 PUSH2 0x1E05 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x115D PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 DUP3 PUSH1 0x9 PUSH1 0x8 DUP10 ADD SLOAD SWAP9 ADD SLOAD AND SWAP8 PUSH2 0x11AF PUSH1 0x40 MLOAD DUP1 SWAP12 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE10 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH2 0x125F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1306 JUMPI PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI PUSH2 0x12B8 SWAP1 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 BLOCKHASH DUP4 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP4 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x94 DUP2 MSTORE PUSH2 0x12AD PUSH1 0xB4 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP3 MLOAD SWAP1 PUSH2 0x20D6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x12DE JUMPI PUSH1 0x5 SHL ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1356 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1362 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x136A PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x13AD PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x50A DUP3 PUSH1 0x9 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x13A5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST ADD SLOAD AND PUSH2 0x204B JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x14DA JUMPI PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP6 PUSH2 0x13E2 PUSH1 0xFF DUP9 AND ISZERO PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0x149F JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x1418 PUSH1 0x74 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x1469 JUMPI PUSH2 0x1463 SWAP6 DUP5 PUSH1 0x1 DUP1 SWAP4 ADD SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE31C53097A08B041054A61A87113ADC8F265BAE8DF68BA97E83AA8F8901721F7 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C995D99585B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14995D99585B081C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC818DBDB5B5A5D1B595B9D08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x152D PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x1535 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1586 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x15C5 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH2 0x1631 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x1639 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x22E1 JUMP JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1948 JUMPI JUMPDEST POP ISZERO PUSH2 0x1903 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND DUP1 ISZERO PUSH2 0x18F6 JUMPI JUMPDEST ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1686 DUP5 PUSH2 0x2021 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND OR DUP1 PUSH1 0x4 SSTORE DUP2 PUSH2 0x16A4 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x203E JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x18A3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16B9 DUP4 PUSH2 0x1E2A JUMP JUMPDEST PUSH0 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD CALLER DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 NUMBER DUP4 MSTORE PUSH1 0xE0 DUP9 ADD SWAP4 TIMESTAMP DUP6 MSTORE PUSH2 0x100 DUP10 ADD SWAP6 PUSH0 DUP8 MSTORE PUSH2 0x120 DUP11 ADD SWAP8 DUP9 MSTORE PUSH2 0x140 DUP11 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE DUP12 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP10 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF DUP1 NOT DUP13 SLOAD AND SWAP2 AND OR DUP11 SSTORE PUSH1 0x1 DUP11 ADD SWAP13 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5E7 JUMPI DUP15 DUP1 SLOAD SWAP1 DUP4 DUP2 SSTORE DUP2 DUP5 LT PUSH2 0x187D JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP14 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1860 JUMPI POP POP SWAP1 MLOAD PUSH1 0x2 DUP12 ADD SSTORE POP MLOAD PUSH1 0x3 DUP10 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP9 ADD DUP1 SLOAD SWAP3 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x20 SWAP9 POP PUSH2 0x17FA SWAP6 SWAP5 PUSH1 0x9 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 MLOAD PUSH1 0x5 DUP8 ADD SSTORE MLOAD PUSH1 0x6 DUP7 ADD SSTORE MLOAD PUSH1 0x7 DUP6 ADD SSTORE MLOAD PUSH1 0x8 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH0 DUP3 MSTORE ISZERO DUP3 PUSH32 0xE0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE PUSH1 0x40 DUP4 ISZERO SWAP5 DUP6 DUP9 DUP3 ADD MSTORE LOG2 SWAP1 PUSH2 0x1850 JUMPI JUMPDEST PUSH2 0x1842 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND ISZERO PUSH2 0x1835 JUMP JUMPDEST DUP16 SWAP2 PUSH1 0x1 SWAP2 DUP2 PUSH1 0x20 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND SWAP3 ADD SWAP5 ADD SSTORE ADD SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH0 MSTORE DUP3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1898 JUMPI POP DUP16 PUSH2 0x175F JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x188A JUMP JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x48 SHR AND DUP6 PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072616E646F6D6E657373206D6574686F6420656E61626C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xFF DUP3 PUSH1 0x48 SHR AND PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061727469636970616E7420636F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E8 SWAP2 POP GT ISZERO DUP4 PUSH2 0x164D JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x196E PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1998 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 PUSH2 0x19A6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x2C4 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x19D1 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x1A0A PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x50A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AB2 JUMPI PUSH0 NOT NUMBER ADD SWAP3 NUMBER DUP5 GT PUSH2 0x12F2 JUMPI PUSH2 0x1AAD PUSH1 0x27 PUSH2 0x1463 SWAP6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 BLOCKHASH DUP3 MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL DUP6 PUSH1 0xC0 SHL AND PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1A76 PUSH1 0x88 DUP3 DUP9 MLOAD DUP1 DUP12 DUP5 DUP5 ADD MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP2 PUSH7 0x26B0B73AB0B61D PUSH1 0xC9 SHL PUSH1 0x20 DUP5 ADD MSTORE MLOAD DUP1 SWAP2 DUP5 DUP5 ADD MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x26BAB9BA10383937BB34B232903932B0B9B7B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x40 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1B2B PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 PUSH2 0x1B3C PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1B9B JUMPI PUSH1 0x20 PUSH32 0xD6BB5132B8C1A381981B94D9EDA2294AB5F22147EF4D46613202CF95D69D10F8 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xB DUP3 MSTORE PUSH2 0x1B90 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210383937BB34B232B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD NUMBER DUP2 LT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x100 PUSH2 0x1BFC DUP3 NUMBER PUSH2 0x1F88 JUMP JUMPDEST GT PUSH2 0x1C95 JUMPI DUP1 BLOCKHASH DUP1 ISZERO PUSH2 0x1C5B JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0x90CBC6AD14A45CB8A21348DD4105F964F14F41EE0B36E5965B301804C8591F96 SWAP4 PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE PUSH1 0xA SLOAD DUP3 GT PUSH2 0x1C52 JUMPI JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0xA SSTORE PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840C4D8DEC6D640D0C2E6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x426C6F636B206861736820756E617661696C61626C65 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109B1BD8DAC81B9BDD081E595D081B5A5B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1D2F PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x1D5A PUSH2 0x1D46 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1D82 PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DE6 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2C4 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x5E7 JUMPI DUP3 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1ECF PUSH1 0x20 DUP6 ADD DUP7 PUSH2 0x1E61 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x2C4 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1EF3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2C4 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x934 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DE JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F66 JUMPI POP POP PUSH2 0x1F64 SWAP3 POP SUB DUP4 PUSH2 0x1E61 JUMP JUMPDEST JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x12F2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1F9C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FDC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x12F2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2052 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120636F6D6D69742D72657665616C20726571756573740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x209E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x20E0 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2C4 JUMPI SWAP1 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2134 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2158 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x60 SWAP3 PUSH1 0x20 SWAP2 DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 SLOAD SWAP2 SWAP4 SWAP2 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP1 PUSH2 0x226F JUMPI POP SWAP1 PUSH2 0x224B PUSH1 0x1 PUSH32 0x68DC1228FEF2529D8E55D849A6FB811D6FC0355EEDB5DF83F3D75DF9160FCF61 SWAP4 ADD PUSH2 0x2245 DUP2 SLOAD DUP7 PUSH2 0x20D6 JUMP JUMPDEST SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP3 PUSH2 0x226A PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x219D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x227D JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH2 0x22C0 PUSH32 0x6B815B5B9DE29F9199853C891BF2BC0936730912186ECE85660B071F5AA4C1B6 SWAP5 PUSH2 0x22BA DUP5 PUSH1 0x2 PUSH2 0x22C6 SWAP7 ADD SLOAD SWAP5 DUP6 SWAP2 ADD SLOAD PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x20D6 JUMP JUMPDEST SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH2 0x22D5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x219D JUMP JUMPDEST SUB SWAP1 LOG2 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x22ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x237F JUMPI DUP1 PUSH2 0x2355 PUSH2 0x1F64 SWAP3 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2364 PUSH1 0x40 DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x9 DUP4 MSTORE PUSH9 0x84D8DEC6D690C2E6D PUSH1 0xBB SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x2515 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2529 JUMPI POP POP POP ISZERO DUP1 SWAP2 DUP2 SWAP3 PUSH2 0x251A JUMPI JUMPDEST POP PUSH2 0x2515 JUMPI PUSH2 0x24D5 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP1 PUSH0 SWAP4 PUSH0 SWAP2 DUP1 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x2477 JUMPI POP POP POP POP PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI PUSH2 0x1F64 SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE BLOCKHASH PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL DUP4 PUSH1 0xC0 SHL AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x88 DUP2 MSTORE PUSH2 0x2447 PUSH1 0xA8 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2458 PUSH1 0x40 DUP3 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x10DBDB5B5A5D14995D99585B PUSH1 0xA2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2481 DUP2 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x24BB JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP8 SWAP6 DUP3 PUSH2 0x24CE SWAP3 ADD SLOAD XOR SWAP6 PUSH2 0x2113 JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x1F64 SWAP2 POP PUSH2 0x24E3 DUP2 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F1 PUSH1 0x40 DUP3 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH17 0x426C6F636B4861736846616C6C6261636B PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH2 0x21CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO PUSH0 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x2533 DUP2 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x256B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23BA JUMP JUMPDEST SWAP3 PUSH2 0x2577 PUSH1 0x1 SWAP2 PUSH2 0x2113 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD DUP1 ISZERO PUSH2 0x2656 JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x12F2 JUMPI SWAP2 JUMPDEST PUSH0 NOT NUMBER ADD SWAP2 NUMBER DUP4 GT PUSH2 0x12F2 JUMPI PUSH1 0xA SLOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH1 0x4 PUSH1 0x6 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x3 SLOAD SWAP3 PUSH2 0x25E2 DUP5 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH1 0x20 DUP8 ADD SWAP8 BLOCKHASH DUP9 MSTORE BLOCKHASH PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE PREVRANDAO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xF4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL SWAP1 PUSH1 0xC0 SHL AND PUSH2 0x114 DUP3 ADD MSTORE PUSH1 0xFC DUP2 MSTORE PUSH2 0x2650 PUSH2 0x11C DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI SWAP2 PUSH2 0x25AE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH11 0xA6CED4F975B9AB410754FB DUP2 SWAP14 0xAF INVALID 0x22 0xB8 0xB5 0xC CALL CALLVALUE RETURN 0xB6 SELFDESTRUCT 0xDC EXTSTATICCALL 0xDD SWAP10 RETURNDATACOPY SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "466:19535:4:-:0;;;;;;;3487:10;1273:26:0;1269:95;;1297:1;466:19535:4;;3487:10;-1:-1:-1;;;;;;466:19535:4;;;;;;3487:10;-1:-1:-1;;;;;466:19535:4;;;;3052:40:0;;1297:1;3052:40;1716:1:2;466:19535:4;;;;996:15:1;466:19535:4;;996:15:1;466:19535:4;1716:1:2;466:19535:4;763:4;466:19535;856:3;;466:19535;;3510:9;466:19535;;;;;;;;;;763:4;466:19535;3577:12;3559:30;466:19535;;;3577:12;466:19535;3577:12;466:19535;;;;3577:12;1297:1:0;466:19535:4;3647:21;466:19535;;3685:27;466:19535;1297:1:0;466:19535:4;;;;;;;;;;;;;1297:1:0;466:19535:4;;763:4;466:19535;;1297:1:0;466:19535:4;1269:95:0;1322:31;;;1297:1;1322:31;1297:1;1322:31;466:19535:4;;1297:1:0;1322:31;466:19535:4;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint64_fromMemory": {
									"entryPoint": 8436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_RequestType": {
									"entryPoint": 7955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_uint256_string": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 8072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_array_from_storage_to_memory_array_address_dyn": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_31989": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_32012": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 8481,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_finalizeRequest": {
									"entryPoint": 8655,
									"id": 1525,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_generateRandomValue": {
									"entryPoint": 9599,
									"id": 1360,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 8519,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_requireNotPaused": {
									"entryPoint": 8929,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_tryResolveCommitRevealRequest": {
									"entryPoint": 9090,
									"id": 1297,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_tryResolveRequest": {
									"entryPoint": 8997,
									"id": 1191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"increment_uint256": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_uint64": {
									"entryPoint": 8225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_uint256": {
									"entryPoint": 8406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral_08d9": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_50e1": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_52fc": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_8518": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_storage_value_offset_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_t_bool_to_t_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610052575b5036156100505760405162461bcd60e51b8152602060048201526012602482015271119d5b98dd1a5bdb881b9bdd08199bdd5b9960721b6044820152606490fd5b005b5f3560e01c9081630f855ec214611d5e5750806323806fad14611d0e578063262fd73314611bd357806327837eaf14611b125780633959602d14611aed57806345c7006914611955578063461d54e9146116015780634a4e3bd51461156e57806351858e271461151557806352bfa7e51461133d57806358859d741461122f5780635c975abb1461120d5780635f2c66d8146111f157806365b07d581461113c57806369b162011461111257806369dc3ae2146110d557806369f74f6d146110765780636b27e2bb146110045780636e68fc0a14610f9d578063715018a614610f465780637402e13d14610ec2578063888eeea614610ea75780638da5cb5b14610e80578063b76755c514610e5b578063c7513f8714610e3e578063cbbf67ec14610c5a578063cd3b842e14610b95578063d21fb42114610adf578063d598e967146109df578063e71bfdc0146109c2578063e7c4155d1461067a578063f2fcd3281461049a578063f2fde38b14610415578063f3baf070146103f9578063f3fef3a3146102c85763fe6d06b4146101ea575f61000f565b346102c45760403660031901126102c457610203611e05565b61020b611db3565b905f608060405161021b81611e46565b828152826020820152826040820152826060820152015260018060a01b03165f5260076020526001600160401b0360405f2091165f5260205260a060405f2060405161026681611e46565b81549182825260018101546020830190815260ff600283015416906040840191151582526080600460038501549460608701958652015494019384526040519485525160208501525115156040840152516060830152516080820152f35b5f80fd5b346102c45760403660031901126102c4576102e1611e05565b602435906102ed612121565b6102f5612147565b6001600160a01b031680156103c057478211610384575f80809381935af13d1561037f573d61032381611e82565b906103316040519283611e61565b81525f60203d92013e5b156103465760018055005b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b61033b565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b346102c4575f3660031901126102c45760206040516103e88152f35b346102c45760203660031901126102c45761042e611e05565b610436612121565b6001600160a01b03168015610487575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b346102c45760403660031901126102c4576104b3611d9d565b6001600160401b03602435916104c76122e1565b6104cf612147565b16805f526006602052600860405f2061051460ff60048301546104fb60018060a01b0382161515611f95565b61050a8260098601541661204b565b60a01c1615611fd5565b0180544210156106355782156105fb57335f52600760205260405f20825f5260205260405f209061054c60ff60028401541615612097565b815415610596575b600490848355436003840155549101556040519182527f776af115a08ee6e6223c4848e4da1ae6f545754de0f819e8baa689e540cca35160203393a360018055005b825f52600860205260405f2090815491600160401b8310156105e757826105c4916001600495018155611f20565b81546001600160a01b0360039290921b91821b19163390911b1790559050610554565b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e7420706572696f6420656e6465640000000000000000006044820152606490fd5b346102c45760603660031901126102c45760043560243560443580151581036102c4576106a56122e1565b8282111561098d576fffffffffffffffffffffffffffffffff6106c88484611f88565b116109565760045491816001600160401b036106e5818616612021565b166001600160401b0319851617806004556107026005544261203e565b9082610948575b506040519161071783611e2a565b600183526020830193606085526040840197885260608401908152608084019033825260a08501905f825260c086019343855260e08701954287525f61010089015261012088015215156101408701526001600160401b0389165f52600660205260405f2096865160038110156109345760ff80198a5416911617885551998a519a6001600160401b038c116105e757600160401b8c116105e75760018901548c60018b0155808d1061090b575b506020019a600189015f5260205f209b5f905b8282106108ee575050815160028a0155825160038a0155845160048a018054865160ff60a01b90151560a01b166001600160a01b039093166001600160a81b03199091161791909117905560208b8b61086c8c60096101408e8e8e516005860155516006850155610100810151600785015561012081015160088501550151151591019060ff801983541691151516179055565b60405160018152811515848201527fe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de60406001600160401b03851692a28015906108de575b6108c7575b6001600160401b0360405191168152f35b6108d96001600160401b038216612325565b6108b6565b5060ff60045460481c16156108b1565b80516001600160a01b03168e8301556001909101906020016107d8565b60018a015f528c60205f2091820191015b81811061092957506107c5565b5f815560010161091c565b634e487b7160e01b5f52602160045260245ffd5b60481c60ff16915086610709565b60405162461bcd60e51b815260206004820152600f60248201526e52616e676520746f6f206c6172676560881b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b346102c4575f3660031901126102c4576020600554604051908152f35b346102c45760403660031901126102c4576004358015908115918282036102c457610a08611e1b565b91610a11612121565b90610ad8575b15610a87577fb2692b979a0ebbc948769201966bf3af4548dc99b201b0188d8f7d727c612b83916040916004549015159069ff0000000000000000008260481b169068ff000000000000000084861b169069ffff00000000000000001916171760045582519182526020820152a1005b60405162461bcd60e51b815260206004820152602360248201527f4174206c65617374206f6e65206d6574686f64206d75737420626520656e61626044820152621b195960ea1b6064820152608490fd5b5080610a17565b346102c45760203660031901126102c457610af8611d9d565b6001600160401b03165f81815260086020526040812080549092909190815b838110610b3f5760608484610b2c8183611f88565b9060405192835260208301526040820152f35b610b498186611f20565b60018060a01b0391549060031b1c165f52600760205260405f20825f5260205260ff600260405f20015416610b81575b600101610b17565b91610b8d600191612113565b929050610b79565b346102c45760203660031901126102c4576004356001600160401b0381116102c4576020610bca610bf4923690600401611e9d565b610bd26122e1565b6040518093819263461d54e960e01b8352604060048401526044830190611dc9565b5f602483015203815f305af18015610c4f576020915f91610c22575b506001600160401b0360405191168152f35b610c429150823d8411610c48575b610c3a8183611e61565b8101906120f4565b82610c10565b503d610c30565b6040513d5f823e3d90fd5b346102c45760203660031901126102c4576001600160401b03610c7b611d9d565b5f610140604051610c8b81611e2a565b828152606060208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152826101208201520152165f52600660205260405f2060405190610ce282611e2a565b60ff8154166003811015610934578252610cfe60018201611f35565b906020830191825260028101549060408401918252600381015490606085019182526004810154608086019060018060a01b038116825260ff60a088019160a01c1615158152600583015460c0880190815260068401549160e089019283526007850154936101008a0194855260ff60096008880154976101208d01988952015416966101408b0197151588526040519960208b52610da76101808c019c60208d019051611f13565b519861016060408c01528951809c5260206101a08c019a018c5f9d8e5b10610e195750505160608b01525160808a0152516001600160a01b031660a089015251151560c08801525160e08701525161010086015251610120850152516101408401525115156101608301528190039150f35b81516001600160a01b03168c5260019d909d019c60209b8c019b90910190808e610dc4565b346102c4575f3660031901126102c4576020600a54604051908152f35b346102c4575f3660031901126102c457602060ff60045460481c166040519015158152f35b346102c4575f3660031901126102c4575f546040516001600160a01b039091168152602090f35b346102c4575f3660031901126102c4576020604051603c8152f35b346102c45760403660031901126102c457610edb611e05565b610ee3611db3565b9060018060a01b03165f5260076020526001600160401b0360405f2091165f5260205260a060405f2080549060018101549060ff600282015416600460038301549201549260405194855260208501521515604084015260608301526080820152f35b346102c4575f3660031901126102c457610f5e612121565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102c45760403660031901126102c457610fb66122e1565b60405163e7c4155d60e01b8152600435600482015260243560248201525f60448201526020816064815f305af18015610c4f576020915f91610c2257506001600160401b0360405191168152f35b346102c45760203660031901126102c457600435611020612121565b603c8110158061106a575b1561103557600555005b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642064656c617960981b6044820152606490fd5b50610e1081111561102b565b346102c45760403660031901126102c45761108f611d9d565b6001600160401b0360243591165f52600860205260405f2080548210156102c4576020916110bc91611f20565b905460405160039290921b1c6001600160a01b03168152f35b346102c45760203660031901126102c4576001600160a01b036110f6611e05565b165f52600b602052602060ff60405f2054166040519015158152f35b346102c45760203660031901126102c4576004355f526009602052602060405f2054604051908152f35b346102c45760203660031901126102c4576001600160401b0361115d611d9d565b165f52600660205261014060405f2060ff8154169060028101549060038101546004820154600583015460ff600685015492600786015494826009600889015498015416976111af604051809b611f13565b60208a0152604089015260018060a01b038116606089015260a01c161515608087015260a086015260c085015260e08401526101008301521515610120820152f35b346102c4575f3660031901126102c4576020604051610e108152f35b346102c4575f3660031901126102c457602060ff600254166040519015158152f35b346102c45760203660031901126102c4576004356001600160401b0381116102c45761125f903690600401611e9d565b805115611306575f1943014381116112f2576112b8906003546040519060208201924083524260408301524460608301523360601b60808301526094820152609481526112ad60b482611e61565b5190208251906120d6565b81518110156112de5760051b016020908101516040516001600160a01b03919091168152f35b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b6044820152606490fd5b346102c45760603660031901126102c457611356611d9d565b602435906113626122e1565b61136a612147565b6001600160401b03811691825f5260066020526113ad60ff60405f2061050a8260096004840154936113a560018060a01b0386161515611f95565b01541661204b565b335f52600760205260405f20835f5260205260405f209283549384156114da5760028101908154956113e260ff881615612097565b6004820154421161149f57604051602081019086825260443560408201523360601b606082015260548152611418607482611e61565b5190200361146957611463958460018093015560ff19161790556040519182527fe31c53097a08b041054a61a87113adc8f265bae8df68ba97e83aa8f8901721f760203393a3612382565b60018055005b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527214995d99585b081c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc818dbdb5b5a5d1b595b9d08199bdd5b99606a1b6044820152606490fd5b346102c4575f3660031901126102c45761152d612121565b6115356122e1565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102c4575f3660031901126102c457611586612121565b60025460ff8116156115c55760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b346102c45760403660031901126102c4576004356001600160401b0381116102c457611631903690600401611e9d565b611639611e1b565b6116416122e1565b81518015159081611948575b5015611903576004549060ff8260401c1680156118f6575b156118b1576001600160401b038216916001600160401b0361168684612021565b16906001600160401b0319161780600455816116a46005544261203e565b91816118a3575b50604051916116b983611e2a565b5f835260208301958652604083015f8152606084015f81526080850133815260a08601905f825260c087019143835260e08801934285526101008901955f87526101208a019788526101408a0198151589528b5f52600660205260405f20995160038110156109345760ff80198c54169116178a5560018a019c518051906001600160401b0382116105e757600160401b82116105e7578e80549083815581841061187d575b50506020019d5f5260205f209d5f905b828210611860575050905160028b0155505160038901559051600488018054925160ff60a01b90151560a01b166001600160a01b039092166001600160a81b031990931692909217179055602098506117fa959460099490939092909151600587015551600686015551600785015551600884015551151591019060ff801983541691151516179055565b604051905f825215827fe0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de60408315948588820152a290611850575b611842575b604051908152f35b61184b81612325565b61183a565b5060ff60045460481c1615611835565b8f91600191816020848060a01b038351169201940155019061176f565b5f528260205f2091820191015b81811061189857508f61175f565b5f815560010161188a565b60ff915060481c16856116ab565b60405162461bcd60e51b815260206004820152601c60248201527f4e6f2072616e646f6d6e657373206d6574686f6420656e61626c6564000000006044820152606490fd5b5060ff8260481c16611665565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207061727469636970616e7420636f756e74000000000000006044820152606490fd5b6103e8915011158361164d565b346102c45760403660031901126102c45761196e611d9d565b6024356001600160401b0381116102c457366023820112156102c457806004013561199881611e82565b906119a66040519283611e61565b808252602082019236602483830101116102c457815f926024602093018637830101526119d1612121565b6119d9612147565b6001600160401b0383165f526006602052611a0a60ff600460405f20015461050a60018060a01b0382161515611f95565b805115611ab2575f194301924384116112f257611aad60276114639560405160208101914082524260408201524460608201526001600160401b0360c01b8560c01b166080820152611a766088828851808b8484015e81015f838201520301601f198101835282611e61565b519020936040519586916626b0b73ab0b61d60c91b60208401525180918484015e81015f838201520301601f198101855284611e61565b6121cf565b60405162461bcd60e51b815260206004820152601360248201527226bab9ba10383937bb34b232903932b0b9b7b760691b6044820152606490fd5b346102c4575f3660031901126102c457602060ff60045460401c166040519015158152f35b346102c45760403660031901126102c457611b2b611e05565b611b33611e1b565b90611b3c612121565b6001600160a01b0316908115611b9b5760207fd6bb5132b8c1a381981b94d9eda2294ab5f22147ef4d46613202cf95d69d10f891835f52600b8252611b908160405f209060ff801983541691151516179055565b6040519015158152a2005b60405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210383937bb34b232b960811b6044820152606490fd5b346102c45760203660031901126102c45760043543811015611cd357610100611bfc8243611f88565b11611c955780408015611c5b57816040917f90cbc6ad14a45cb8a21348dd4105f964f14f41ee0b36e5965b301804c8591f96935f52600960205280835f2055600a548211611c52575b82519182526020820152a1005b81600a55611c45565b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840c4d8dec6d640d0c2e6d60731b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275426c6f636b206861736820756e617661696c61626c6560501b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272109b1bd8dac81b9bdd081e595d081b5a5b9959606a1b6044820152606490fd5b346102c45760203660031901126102c4576001600160401b03611d2f611d9d565b165f526008602052611d5a611d4660405f20611f35565b604051918291602083526020830190611dc9565b0390f35b346102c45760203660031901126102c4576020906001600160401b03611d82611d9d565b165f526006825260ff600460405f20015460a01c1615158152f35b600435906001600160401b03821682036102c457565b602435906001600160401b03821682036102c457565b90602080835192838152019201905f5b818110611de65750505090565b82516001600160a01b0316845260209384019390920191600101611dd9565b600435906001600160a01b03821682036102c457565b6024359081151582036102c457565b61016081019081106001600160401b038211176105e757604052565b60a081019081106001600160401b038211176105e757604052565b90601f801991011681019081106001600160401b038211176105e757604052565b6001600160401b0381116105e757601f01601f191660200190565b81601f820112156102c4578035916001600160401b0383116105e7578260051b9160405193611ecf6020850186611e61565b84526020808501938201019182116102c457602001915b818310611ef35750505090565b82356001600160a01b03811681036102c457815260209283019201611ee6565b9060038210156109345752565b80548210156112de575f5260205f2001905f90565b90604051918281549182825260208201905f5260205f20925f5b818110611f66575050611f6492500383611e61565b565b84546001600160a01b0316835260019485019487945060209093019201611f4f565b919082039182116112f257565b15611f9c57565b60405162461bcd60e51b815260206004820152601160248201527014995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fd5b15611fdc57565b60405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792066756c66696c6c6564000000000000006044820152606490fd5b6001600160401b03166001600160401b0381146112f25760010190565b919082018092116112f257565b1561205257565b60405162461bcd60e51b815260206004820152601b60248201527f4e6f74206120636f6d6d69742d72657665616c207265717565737400000000006044820152606490fd5b1561209e57565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b81156120e0570690565b634e487b7160e01b5f52601260045260245ffd5b908160209103126102c457516001600160401b03811681036102c45790565b5f1981146112f25760010190565b5f546001600160a01b0316330361213457565b63118cdaa760e01b5f523360045260245ffd5b600260015414612158576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9060609260209183526040828401528051918291826040860152018484015e5f828201840152601f01601f1916010190565b6001600160401b03165f81815260066020526040902060048101805460ff60a01b1916600160a01b179055805491939160ff166003811015610934578061226f57509061224b60017f68dc1228fef2529d8e55d849a6fb811d6fc0355eedb5df83f3d75df9160fcf6193016122458154866120d6565b90611f20565b60018060a01b0391549060031b1c169261226a6040519283928361219d565b0390a3565b60011461227d575b50505050565b60036122c07f6b815b5b9de29f9199853c891bf2bc0936730912186ece85660b071f5aa4c1b6946122ba8460026122c69601549485910154611f88565b906120d6565b9061203e565b6122d56040519283928361219d565b0390a25f808080612277565b60ff600254166122ed57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160401b0381165f52600660205260ff600460405f20015460a01c1661237f5780612355611f649261257f565b60405191612364604084611e61565b6009835268084d8dec6d690c2e6d60bb1b60208401526121cf565b50565b6001600160401b03811690815f52600660205260405f2060ff600482015460a01c16612515575f838152600860205260408120805490825b82811061252957505050158091819261251a575b50612515576124d557815f52600860205260405f205f905f935f918054925b83811061247757505050505f1943014381116112f257611f6493604051916020830193845240604083015242606083015260808201526001600160401b0360c01b8360c01b1660a08201526088815261244760a882611e61565b519020604051612458604082611e61565b600c81526b10dbdb5b5a5d14995d99585b60a21b6020820152916121cf565b6124818183611f20565b60018060a01b0391549060031b1c165f52600760205260405f20835f5260205260405f2060ff6002820154166124bb575b506001016123ed565b6001919795826124ce9201541895612113565b96906124b2565b611f6491506124e38161257f565b6040516124f1604082611e61565b6011815270426c6f636b4861736846616c6c6261636b60781b6020820152916121cf565b505050565b6008915001544211155f6123ce565b6125338183611f20565b60018060a01b0391549060031b1c165f52600760205260405f20875f5260205260ff600260405f2001541661256b575b6001016123ba565b92612577600191612113565b939050612563565b6001600160401b0381165f90815260066020526040902060058101548015612656575f1981019081116112f257915b5f194301914383116112f257600a545f52600960205260405f2054906004600682015491015490600354926125e284612113565b60035560405195602087019740885240604087015260608601524260808601524460a086015260c08501526bffffffffffffffffffffffff199060601b1660e084015260f48301526001600160401b0360c01b9060c01b1661011482015260fc815261265061011c82611e61565b51902090565b505f1943014381116112f257916125ae56fea2646970667358221220df6aa6ced4f975b9ab410754fb819daffe22b8b50cf134f3b6ffdcfbdd993e9564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x52 JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x119D5B98DD1A5BDB881B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xF855EC2 EQ PUSH2 0x1D5E JUMPI POP DUP1 PUSH4 0x23806FAD EQ PUSH2 0x1D0E JUMPI DUP1 PUSH4 0x262FD733 EQ PUSH2 0x1BD3 JUMPI DUP1 PUSH4 0x27837EAF EQ PUSH2 0x1B12 JUMPI DUP1 PUSH4 0x3959602D EQ PUSH2 0x1AED JUMPI DUP1 PUSH4 0x45C70069 EQ PUSH2 0x1955 JUMPI DUP1 PUSH4 0x461D54E9 EQ PUSH2 0x1601 JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x1515 JUMPI DUP1 PUSH4 0x52BFA7E5 EQ PUSH2 0x133D JUMPI DUP1 PUSH4 0x58859D74 EQ PUSH2 0x122F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x120D JUMPI DUP1 PUSH4 0x5F2C66D8 EQ PUSH2 0x11F1 JUMPI DUP1 PUSH4 0x65B07D58 EQ PUSH2 0x113C JUMPI DUP1 PUSH4 0x69B16201 EQ PUSH2 0x1112 JUMPI DUP1 PUSH4 0x69DC3AE2 EQ PUSH2 0x10D5 JUMPI DUP1 PUSH4 0x69F74F6D EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0x6B27E2BB EQ PUSH2 0x1004 JUMPI DUP1 PUSH4 0x6E68FC0A EQ PUSH2 0xF9D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF46 JUMPI DUP1 PUSH4 0x7402E13D EQ PUSH2 0xEC2 JUMPI DUP1 PUSH4 0x888EEEA6 EQ PUSH2 0xEA7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE80 JUMPI DUP1 PUSH4 0xB76755C5 EQ PUSH2 0xE5B JUMPI DUP1 PUSH4 0xC7513F87 EQ PUSH2 0xE3E JUMPI DUP1 PUSH4 0xCBBF67EC EQ PUSH2 0xC5A JUMPI DUP1 PUSH4 0xCD3B842E EQ PUSH2 0xB95 JUMPI DUP1 PUSH4 0xD21FB421 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xD598E967 EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xE71BFDC0 EQ PUSH2 0x9C2 JUMPI DUP1 PUSH4 0xE7C4155D EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0xF2FCD328 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0xF3BAF070 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x2C8 JUMPI PUSH4 0xFE6D06B4 EQ PUSH2 0x1EA JUMPI PUSH0 PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x203 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 PUSH0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x21B DUP2 PUSH2 0x1E46 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x266 DUP2 PUSH2 0x1E46 JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 PUSH1 0x4 PUSH1 0x3 DUP6 ADD SLOAD SWAP5 PUSH1 0x60 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE MLOAD PUSH1 0x20 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE MLOAD PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x2E1 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x2ED PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2F5 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3C0 JUMPI SELFBALANCE DUP3 GT PUSH2 0x384 JUMPI PUSH0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH2 0x323 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 PUSH2 0x331 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x346 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x42E PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x487 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x4B3 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x4C7 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x2147 JUMP JUMPDEST AND DUP1 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x514 PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x4FB PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x50A DUP3 PUSH1 0x9 DUP7 ADD SLOAD AND PUSH2 0x204B JUMP JUMPDEST PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1FD5 JUMP JUMPDEST ADD DUP1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x635 JUMPI DUP3 ISZERO PUSH2 0x5FB JUMPI CALLER PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH2 0x54C PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND ISZERO PUSH2 0x2097 JUMP JUMPDEST DUP2 SLOAD ISZERO PUSH2 0x596 JUMPI JUMPDEST PUSH1 0x4 SWAP1 DUP5 DUP4 SSTORE NUMBER PUSH1 0x3 DUP5 ADD SSTORE SLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x776AF115A08EE6E6223C4848E4DA1AE6F545754DE0F819E8BAA689E540CCA351 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP3 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0x5E7 JUMPI DUP3 PUSH2 0x5C4 SWAP2 PUSH1 0x1 PUSH1 0x4 SWAP6 ADD DUP2 SSTORE PUSH2 0x1F20 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE SWAP1 POP PUSH2 0x554 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A590818DBDB5B5A5D1B595B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D69746D656E7420706572696F6420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2C4 JUMPI PUSH2 0x6A5 PUSH2 0x22E1 JUMP JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x98D JUMPI PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x6C8 DUP5 DUP5 PUSH2 0x1F88 JUMP JUMPDEST GT PUSH2 0x956 JUMPI PUSH1 0x4 SLOAD SWAP2 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x6E5 DUP2 DUP7 AND PUSH2 0x2021 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP6 AND OR DUP1 PUSH1 0x4 SSTORE PUSH2 0x702 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x203E JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x948 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x717 DUP4 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x40 DUP5 ADD SWAP8 DUP9 MSTORE PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 CALLER DUP3 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0xC0 DUP7 ADD SWAP4 NUMBER DUP6 MSTORE PUSH1 0xE0 DUP8 ADD SWAP6 TIMESTAMP DUP8 MSTORE PUSH0 PUSH2 0x100 DUP10 ADD MSTORE PUSH2 0x120 DUP9 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP7 DUP7 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF DUP1 NOT DUP11 SLOAD AND SWAP2 AND OR DUP9 SSTORE MLOAD SWAP10 DUP11 MLOAD SWAP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP13 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP13 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 DUP10 ADD SLOAD DUP13 PUSH1 0x1 DUP12 ADD SSTORE DUP1 DUP14 LT PUSH2 0x90B JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP11 PUSH1 0x1 DUP10 ADD PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP12 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8EE JUMPI POP POP DUP2 MLOAD PUSH1 0x2 DUP11 ADD SSTORE DUP3 MLOAD PUSH1 0x3 DUP11 ADD SSTORE DUP5 MLOAD PUSH1 0x4 DUP11 ADD DUP1 SLOAD DUP7 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP12 DUP12 PUSH2 0x86C DUP13 PUSH1 0x9 PUSH2 0x140 DUP15 DUP15 DUP15 MLOAD PUSH1 0x5 DUP7 ADD SSTORE MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE DUP2 ISZERO ISZERO DUP5 DUP3 ADD MSTORE PUSH32 0xE0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND SWAP3 LOG2 DUP1 ISZERO SWAP1 PUSH2 0x8DE JUMPI JUMPDEST PUSH2 0x8C7 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0x8D9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND ISZERO PUSH2 0x8B1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP15 DUP4 ADD SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 DUP11 ADD PUSH0 MSTORE DUP13 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x929 JUMPI POP PUSH2 0x7C5 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x91C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x48 SHR PUSH1 0xFF AND SWAP2 POP DUP7 PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x52616E676520746F6F206C61726765 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642072616E6765 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO SWAP1 DUP2 ISZERO SWAP2 DUP3 DUP3 SUB PUSH2 0x2C4 JUMPI PUSH2 0xA08 PUSH2 0x1E1B JUMP JUMPDEST SWAP2 PUSH2 0xA11 PUSH2 0x2121 JUMP JUMPDEST SWAP1 PUSH2 0xAD8 JUMPI JUMPDEST ISZERO PUSH2 0xA87 JUMPI PUSH32 0xB2692B979A0EBBC948769201966BF3AF4548DC99B201B0188D8F7D727C612B83 SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x4 SLOAD SWAP1 ISZERO ISZERO SWAP1 PUSH10 0xFF000000000000000000 DUP3 PUSH1 0x48 SHL AND SWAP1 PUSH9 0xFF0000000000000000 DUP5 DUP7 SHL AND SWAP1 PUSH10 0xFFFF0000000000000000 NOT AND OR OR PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206D6574686F64206D75737420626520656E6162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B1959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP1 PUSH2 0xA17 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xAF8 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 JUMPDEST DUP4 DUP2 LT PUSH2 0xB3F JUMPI PUSH1 0x60 DUP5 DUP5 PUSH2 0xB2C DUP2 DUP4 PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0xB49 DUP2 DUP7 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0xB81 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xB17 JUMP JUMPDEST SWAP2 PUSH2 0xB8D PUSH1 0x1 SWAP2 PUSH2 0x2113 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xB79 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH2 0xBCA PUSH2 0xBF4 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0xBD2 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0x461D54E9 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x40 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH0 PUSH1 0x24 DUP4 ADD MSTORE SUB DUP2 PUSH0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0xC22 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH2 0xC42 SWAP2 POP DUP3 RETURNDATASIZE DUP5 GT PUSH2 0xC48 JUMPI JUMPDEST PUSH2 0xC3A DUP2 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20F4 JUMP JUMPDEST DUP3 PUSH2 0xC10 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xC7B PUSH2 0x1D9D JUMP JUMPDEST PUSH0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0xC8B DUP2 PUSH2 0x1E2A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xCE2 DUP3 PUSH2 0x1E2A JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP3 MSTORE PUSH2 0xCFE PUSH1 0x1 DUP3 ADD PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x40 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x60 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0xFF PUSH1 0xA0 DUP9 ADD SWAP2 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xC0 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD SLOAD SWAP2 PUSH1 0xE0 DUP10 ADD SWAP3 DUP4 MSTORE PUSH1 0x7 DUP6 ADD SLOAD SWAP4 PUSH2 0x100 DUP11 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 PUSH2 0x120 DUP14 ADD SWAP9 DUP10 MSTORE ADD SLOAD AND SWAP7 PUSH2 0x140 DUP12 ADD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x40 MLOAD SWAP10 PUSH1 0x20 DUP12 MSTORE PUSH2 0xDA7 PUSH2 0x180 DUP13 ADD SWAP13 PUSH1 0x20 DUP14 ADD SWAP1 MLOAD PUSH2 0x1F13 JUMP JUMPDEST MLOAD SWAP9 PUSH2 0x160 PUSH1 0x40 DUP13 ADD MSTORE DUP10 MLOAD DUP1 SWAP13 MSTORE PUSH1 0x20 PUSH2 0x1A0 DUP13 ADD SWAP11 ADD DUP13 PUSH0 SWAP14 DUP15 JUMPDEST LT PUSH2 0xE19 JUMPI POP POP MLOAD PUSH1 0x60 DUP12 ADD MSTORE MLOAD PUSH1 0x80 DUP11 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP9 ADD MSTORE MLOAD PUSH1 0xE0 DUP8 ADD MSTORE MLOAD PUSH2 0x100 DUP7 ADD MSTORE MLOAD PUSH2 0x120 DUP6 ADD MSTORE MLOAD PUSH2 0x140 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE DUP2 SWAP1 SUB SWAP2 POP RETURN JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 MSTORE PUSH1 0x1 SWAP14 SWAP1 SWAP14 ADD SWAP13 PUSH1 0x20 SWAP12 DUP13 ADD SWAP12 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP15 PUSH2 0xDC4 JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xEDB PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xEE3 PUSH2 0x1DB3 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xF5E PUSH2 0x2121 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0xFB6 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE7C4155D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH0 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH0 ADDRESS GAS CALL DUP1 ISZERO PUSH2 0xC4F JUMPI PUSH1 0x20 SWAP2 PUSH0 SWAP2 PUSH2 0xC22 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1020 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x3C DUP2 LT ISZERO DUP1 PUSH2 0x106A JUMPI JUMPDEST ISZERO PUSH2 0x1035 JUMPI PUSH1 0x5 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C69642064656C6179 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0xE10 DUP2 GT ISZERO PUSH2 0x102B JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x108F PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD SWAP2 AND PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x10BC SWAP2 PUSH2 0x1F20 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10F6 PUSH2 0x1E05 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x115D PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x140 PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 DUP3 PUSH1 0x9 PUSH1 0x8 DUP10 ADD SLOAD SWAP9 ADD SLOAD AND SWAP8 PUSH2 0x11AF PUSH1 0x40 MLOAD DUP1 SWAP12 PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xE10 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH2 0x125F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1306 JUMPI PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI PUSH2 0x12B8 SWAP1 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 BLOCKHASH DUP4 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP4 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x94 DUP3 ADD MSTORE PUSH1 0x94 DUP2 MSTORE PUSH2 0x12AD PUSH1 0xB4 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP3 MLOAD SWAP1 PUSH2 0x20D6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x12DE JUMPI PUSH1 0x5 SHL ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1356 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1362 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x136A PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x13AD PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x50A DUP3 PUSH1 0x9 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH2 0x13A5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST ADD SLOAD AND PUSH2 0x204B JUMP JUMPDEST CALLER PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP4 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x14DA JUMPI PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP6 PUSH2 0x13E2 PUSH1 0xFF DUP9 AND ISZERO PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0x149F JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 DUP7 DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x1418 PUSH1 0x74 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SUB PUSH2 0x1469 JUMPI PUSH2 0x1463 SWAP6 DUP5 PUSH1 0x1 DUP1 SWAP4 ADD SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE31C53097A08B041054A61A87113ADC8F265BAE8DF68BA97E83AA8F8901721F7 PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081C995D99585B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14995D99585B081C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC818DBDB5B5A5D1B595B9D08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x152D PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x1535 PUSH2 0x22E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1586 PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x15C5 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI PUSH2 0x1631 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1E9D JUMP JUMPDEST PUSH2 0x1639 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x1641 PUSH2 0x22E1 JUMP JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1948 JUMPI JUMPDEST POP ISZERO PUSH2 0x1903 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND DUP1 ISZERO PUSH2 0x18F6 JUMPI JUMPDEST ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1686 DUP5 PUSH2 0x2021 JUMP JUMPDEST AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND OR DUP1 PUSH1 0x4 SSTORE DUP2 PUSH2 0x16A4 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x203E JUMP JUMPDEST SWAP2 DUP2 PUSH2 0x18A3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x16B9 DUP4 PUSH2 0x1E2A JUMP JUMPDEST PUSH0 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP4 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD CALLER DUP2 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH0 DUP3 MSTORE PUSH1 0xC0 DUP8 ADD SWAP2 NUMBER DUP4 MSTORE PUSH1 0xE0 DUP9 ADD SWAP4 TIMESTAMP DUP6 MSTORE PUSH2 0x100 DUP10 ADD SWAP6 PUSH0 DUP8 MSTORE PUSH2 0x120 DUP11 ADD SWAP8 DUP9 MSTORE PUSH2 0x140 DUP11 ADD SWAP9 ISZERO ISZERO DUP10 MSTORE DUP12 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP10 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI PUSH1 0xFF DUP1 NOT DUP13 SLOAD AND SWAP2 AND OR DUP11 SSTORE PUSH1 0x1 DUP11 ADD SWAP13 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x5E7 JUMPI DUP15 DUP1 SLOAD SWAP1 DUP4 DUP2 SSTORE DUP2 DUP5 LT PUSH2 0x187D JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP14 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP14 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1860 JUMPI POP POP SWAP1 MLOAD PUSH1 0x2 DUP12 ADD SSTORE POP MLOAD PUSH1 0x3 DUP10 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP9 ADD DUP1 SLOAD SWAP3 MLOAD PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x20 SWAP9 POP PUSH2 0x17FA SWAP6 SWAP5 PUSH1 0x9 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 MLOAD PUSH1 0x5 DUP8 ADD SSTORE MLOAD PUSH1 0x6 DUP7 ADD SSTORE MLOAD PUSH1 0x7 DUP6 ADD SSTORE MLOAD PUSH1 0x8 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH0 DUP3 MSTORE ISZERO DUP3 PUSH32 0xE0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE PUSH1 0x40 DUP4 ISZERO SWAP5 DUP6 DUP9 DUP3 ADD MSTORE LOG2 SWAP1 PUSH2 0x1850 JUMPI JUMPDEST PUSH2 0x1842 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x2325 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x48 SHR AND ISZERO PUSH2 0x1835 JUMP JUMPDEST DUP16 SWAP2 PUSH1 0x1 SWAP2 DUP2 PUSH1 0x20 DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND SWAP3 ADD SWAP5 ADD SSTORE ADD SWAP1 PUSH2 0x176F JUMP JUMPDEST PUSH0 MSTORE DUP3 PUSH1 0x20 PUSH0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1898 JUMPI POP DUP16 PUSH2 0x175F JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x188A JUMP JUMPDEST PUSH1 0xFF SWAP2 POP PUSH1 0x48 SHR AND DUP6 PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072616E646F6D6E657373206D6574686F6420656E61626C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xFF DUP3 PUSH1 0x48 SHR AND PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061727469636970616E7420636F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E8 SWAP2 POP GT ISZERO DUP4 PUSH2 0x164D JUMP JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x196E PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2C4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1998 DUP2 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 PUSH2 0x19A6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1E61 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x2C4 JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP7 CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x19D1 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x19D9 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0x1A0A PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x50A PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO PUSH2 0x1F95 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1AB2 JUMPI PUSH0 NOT NUMBER ADD SWAP3 NUMBER DUP5 GT PUSH2 0x12F2 JUMPI PUSH2 0x1AAD PUSH1 0x27 PUSH2 0x1463 SWAP6 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 BLOCKHASH DUP3 MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE PREVRANDAO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL DUP6 PUSH1 0xC0 SHL AND PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x1A76 PUSH1 0x88 DUP3 DUP9 MLOAD DUP1 DUP12 DUP5 DUP5 ADD MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP2 PUSH7 0x26B0B73AB0B61D PUSH1 0xC9 SHL PUSH1 0x20 DUP5 ADD MSTORE MLOAD DUP1 SWAP2 DUP5 DUP5 ADD MCOPY DUP2 ADD PUSH0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP6 MSTORE DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x26BAB9BA10383937BB34B232903932B0B9B7B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0x40 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH2 0x1B2B PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1B33 PUSH2 0x1E1B JUMP JUMPDEST SWAP1 PUSH2 0x1B3C PUSH2 0x2121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1B9B JUMPI PUSH1 0x20 PUSH32 0xD6BB5132B8C1A381981B94D9EDA2294AB5F22147EF4D46613202CF95D69D10F8 SWAP2 DUP4 PUSH0 MSTORE PUSH1 0xB DUP3 MSTORE PUSH2 0x1B90 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x24B73B30B634B210383937BB34B232B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x4 CALLDATALOAD NUMBER DUP2 LT ISZERO PUSH2 0x1CD3 JUMPI PUSH2 0x100 PUSH2 0x1BFC DUP3 NUMBER PUSH2 0x1F88 JUMP JUMPDEST GT PUSH2 0x1C95 JUMPI DUP1 BLOCKHASH DUP1 ISZERO PUSH2 0x1C5B JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0x90CBC6AD14A45CB8A21348DD4105F964F14F41EE0B36E5965B301804C8591F96 SWAP4 PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE PUSH1 0xA SLOAD DUP3 GT PUSH2 0x1C52 JUMPI JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST DUP2 PUSH1 0xA SSTORE PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840C4D8DEC6D640D0C2E6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x426C6F636B206861736820756E617661696C61626C65 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x109B1BD8DAC81B9BDD081E595D081B5A5B9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1D2F PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x1D5A PUSH2 0x1D46 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1D82 PUSH2 0x1D9D JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DE6 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2C4 JUMPI JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x5E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5E7 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2C4 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x5E7 JUMPI DUP3 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1ECF PUSH1 0x20 DUP6 ADD DUP7 PUSH2 0x1E61 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x2C4 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1EF3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2C4 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1EE6 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x934 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12DE JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1F66 JUMPI POP POP PUSH2 0x1F64 SWAP3 POP SUB DUP4 PUSH2 0x1E61 JUMP JUMPDEST JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x12F2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1F9C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FDC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792066756C66696C6C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x12F2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2052 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74206120636F6D6D69742D72657665616C20726571756573740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x209E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x20E0 JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2C4 JUMPI SWAP1 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x12F2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2134 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2158 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x60 SWAP3 PUSH1 0x20 SWAP2 DUP4 MSTORE PUSH1 0x40 DUP3 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 SLOAD SWAP2 SWAP4 SWAP2 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP1 PUSH2 0x226F JUMPI POP SWAP1 PUSH2 0x224B PUSH1 0x1 PUSH32 0x68DC1228FEF2529D8E55D849A6FB811D6FC0355EEDB5DF83F3D75DF9160FCF61 SWAP4 ADD PUSH2 0x2245 DUP2 SLOAD DUP7 PUSH2 0x20D6 JUMP JUMPDEST SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP3 PUSH2 0x226A PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x219D JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x227D JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH2 0x22C0 PUSH32 0x6B815B5B9DE29F9199853C891BF2BC0936730912186ECE85660B071F5AA4C1B6 SWAP5 PUSH2 0x22BA DUP5 PUSH1 0x2 PUSH2 0x22C6 SWAP7 ADD SLOAD SWAP5 DUP6 SWAP2 ADD SLOAD PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x20D6 JUMP JUMPDEST SWAP1 PUSH2 0x203E JUMP JUMPDEST PUSH2 0x22D5 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x219D JUMP JUMPDEST SUB SWAP1 LOG2 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x22ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x237F JUMPI DUP1 PUSH2 0x2355 PUSH2 0x1F64 SWAP3 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2364 PUSH1 0x40 DUP5 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x9 DUP4 MSTORE PUSH9 0x84D8DEC6D690C2E6D PUSH1 0xBB SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x2515 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 DUP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x2529 JUMPI POP POP POP ISZERO DUP1 SWAP2 DUP2 SWAP3 PUSH2 0x251A JUMPI JUMPDEST POP PUSH2 0x2515 JUMPI PUSH2 0x24D5 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP1 PUSH0 SWAP4 PUSH0 SWAP2 DUP1 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x2477 JUMPI POP POP POP POP PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI PUSH2 0x1F64 SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE BLOCKHASH PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL DUP4 PUSH1 0xC0 SHL AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x88 DUP2 MSTORE PUSH2 0x2447 PUSH1 0xA8 DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2458 PUSH1 0x40 DUP3 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x10DBDB5B5A5D14995D99585B PUSH1 0xA2 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x2481 DUP2 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP4 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x24BB JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x23ED JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP8 SWAP6 DUP3 PUSH2 0x24CE SWAP3 ADD SLOAD XOR SWAP6 PUSH2 0x2113 JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x1F64 SWAP2 POP PUSH2 0x24E3 DUP2 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F1 PUSH1 0x40 DUP3 PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH17 0x426C6F636B4861736846616C6C6261636B PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 PUSH2 0x21CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO PUSH0 PUSH2 0x23CE JUMP JUMPDEST PUSH2 0x2533 DUP2 DUP4 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP8 PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND PUSH2 0x256B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x23BA JUMP JUMPDEST SWAP3 PUSH2 0x2577 PUSH1 0x1 SWAP2 PUSH2 0x2113 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x2563 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD DUP1 ISZERO PUSH2 0x2656 JUMPI PUSH0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x12F2 JUMPI SWAP2 JUMPDEST PUSH0 NOT NUMBER ADD SWAP2 NUMBER DUP4 GT PUSH2 0x12F2 JUMPI PUSH1 0xA SLOAD PUSH0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH1 0x4 PUSH1 0x6 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x3 SLOAD SWAP3 PUSH2 0x25E2 DUP5 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH1 0x20 DUP8 ADD SWAP8 BLOCKHASH DUP9 MSTORE BLOCKHASH PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE PREVRANDAO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xF4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 SHL SWAP1 PUSH1 0xC0 SHL AND PUSH2 0x114 DUP3 ADD MSTORE PUSH1 0xFC DUP2 MSTORE PUSH2 0x2650 PUSH2 0x11C DUP3 PUSH2 0x1E61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH0 NOT NUMBER ADD NUMBER DUP2 GT PUSH2 0x12F2 JUMPI SWAP2 PUSH2 0x25AE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH11 0xA6CED4F975B9AB410754FB DUP2 SWAP14 0xAF INVALID 0x22 0xB8 0xB5 0xC CALL CALLVALUE RETURN 0xB6 SELFDESTRUCT 0xDC EXTSTATICCALL 0xDD SWAP10 RETURNDATACOPY SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "466:19535:4:-:0;;;;;;;;;;-1:-1:-1;466:19535:4;;;;;;;-1:-1:-1;;;19962:28:4;;466:19535;;19962:28;;466:19535;;;;;;-1:-1:-1;;;466:19535:4;;;;19962:28;;;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18239:13;466:19535;;-1:-1:-1;;;;;466:19535:4;;;18239:36;466:19535;-1:-1:-1;466:19535:4;;;;;-1:-1:-1;466:19535:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;2227:103:2;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;19492:16;;466:19535;;19559:21;19549:31;;466:19535;;;19645:35;;;;;;;466:19535;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;963:4;466:19535;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;2627:22:0;;2623:91;;466:19535:4;;;-1:-1:-1;;;;;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;3052:40:0;;466:19535:4;3052:40:0;466:19535:4;2623:91:0;2672:31;;;466:19535:4;2672:31:0;466:19535:4;;;;;2672:31:0;466:19535:4;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;1204:72:1;;;:::i;:::-;2227:103:2;;:::i;:::-;466:19535:4;;;;9503:15;466:19535;;9780:22;466:19535;;;9687:56;466:19535;;9550:17;;466:19535;9542:61;466:19535;;;;;;;9550:31;;9542:61;:::i;:::-;9614:62;9622:22;;;;466:19535;;9614:62;:::i;:::-;466:19535;;;9695:18;9687:56;:::i;:::-;9780:22;466:19535;;9762:15;:40;466:19535;;;9849:24;;466:19535;;9967:10;466:19535;;9953:13;466:19535;;;;;;-1:-1:-1;466:19535:4;;;;-1:-1:-1;466:19535:4;10011:21;10002:51;466:19535;10011:21;;;466:19535;;10010:22;10002:51;:::i;:::-;466:19535;;10139:37;10135:116;;466:19535;;;;;;10345:12;10318:24;;;466:19535;;10368:27;;466:19535;;;;;;10446:52;466:19535;9967:10;10446:52;;466:19535;;;;10135:116;466:19535;;;9780:22;466:19535;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;9967:10;466:19535;;;;;;10135:116;-1:-1:-1;10135:116:4;;466:19535;;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;;;;;;;1204:72:1;;:::i;:::-;7779:9:4;;;466:19535;;;;7825:9;;;;:::i;:::-;:30;466:19535;;;;;;-1:-1:-1;;;;;7910:16:4;466:19535;;;7910:16;:::i;:::-;466:19535;-1:-1:-1;;;;;466:19535:4;;;;;;;8385:35;8403:17;466:19535;8302:15;8385:35;:::i;:::-;8451:40;;;;466:19535;;;;;;;;:::i;:::-;;;;;8016:487;;466:19535;;;;;8016:487;;466:19535;;;;8016:487;;466:19535;;;8016:487;;;8194:10;;466:19535;;8016:487;;;466:19535;;;;8016:487;;;8264:12;;466:19535;;;8016:487;;8302:15;;466:19535;;;8016:487;;;466:19535;8016:487;;;466:19535;;;8016:487;;;466:19535;-1:-1:-1;;;;;466:19535:4;;;;7985:15;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;;-1:-1:-1;;;;;;466:19535:4;;;;;;;;;;;;;;;;8016:487;466:19535;;;;8403:17;466:19535;;;;7985:15;466:19535;;;8016:487;;;466:19535;;;;;8016:487;;;466:19535;;;;;8016:487;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8529:72;466:19535;-1:-1:-1;;;;;466:19535:4;;8529:72;;466:19535;;;8626:42;;466:19535;8622:106;;466:19535;-1:-1:-1;;;;;466:19535:4;;;;;;;8622:106;8704:11;-1:-1:-1;;;;;466:19535:4;;8704:11;:::i;:::-;8622:106;;8626:42;466:19535;;;;;;;8646:22;8626:42;;466:19535;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8451:40;466:19535;;;;;-1:-1:-1;8451:40:4;;;466:19535;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;821:38;466:19535;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;3914:33:4;;;466:19535;;;;4103:56;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4103:56;466:19535;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;3914:33;;;;;466:19535;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;;;;18754:16;466:19535;;;;;;;;;;;;;18868:20;;;;;;466:19535;19061:30;;;;;;:::i;:::-;466:19535;;;;;;;;;;;;;;;18890:3;18928:12;;;;:::i;:::-;466:19535;;;;;;;;;;;;;;18914:13;466:19535;;;;;;-1:-1:-1;466:19535:4;;;;18914:49;466:19535;-1:-1:-1;466:19535:4;18914:49;466:19535;;18910:105;;18890:3;466:19535;;18853:13;;18910:105;18984:15;;466:19535;18984:15;;:::i;:::-;18910:105;;;;;466:19535;;;;;;-1:-1:-1;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;:::i;:::-;1204:72:1;;:::i;:::-;466:19535:4;;;;;;;;;7244:44;;466:19535;;7244:44;;466:19535;;;;;;:::i;:::-;;;;;;7244:44;:4;466:19535;7244:4;:44;;;;;;466:19535;7244:44;466:19535;7244:44;;;466:19535;;-1:-1:-1;;;;;466:19535:4;;;;;;;7244:44;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;466:19535;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17841:15;466:19535;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17841:15;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;2215:30;466:19535;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;1017:2;466:19535;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;1972:72;466:19535;;-1:-1:-1;;;;;466:19535:4;;;1972:72;466:19535;-1:-1:-1;466:19535:4;;;;;-1:-1:-1;466:19535:4;;;1972:72;;;;466:19535;1972:72;466:19535;1972:72;;;466:19535;;;1972:72;;;466:19535;1972:72;;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;1500:62:0;;:::i;:::-;466:19535:4;;;-1:-1:-1;;;;;;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;3052:40:0;466:19535:4;;3052:40:0;466:19535:4;;;;;;;-1:-1:-1;;466:19535:4;;;;1204:72:1;;:::i;:::-;466:19535:4;;;;;8995:37;;466:19535;;;8995:37;;466:19535;;;;;;;;;;;;;8995:4;:37;:4;466:19535;8995:4;:37;;;;;;466:19535;8995:37;466:19535;8995:37;;;466:19535;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;1500:62:0;;:::i;:::-;1017:2:4;4263:26;;;:56;;;466:19535;;;;4348:26;466:19535;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;4263:56;4293:26;1089:4;4293:26;;;4263:56;;466:19535;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;;;;;2051:52;466:19535;;;;;;;2051:52;;;;;466:19535;2051:52;;;;:::i;:::-;466:19535;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;;:::i;:::-;;;;2319:51;466:19535;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;2152:56;466:19535;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;;:::i;:::-;;;;1910:55;466:19535;;;;;;;;;;1910:55;;;;466:19535;1910:55;;;;466:19535;;1910:55;;466:19535;1910:55;;;466:19535;;1910:55;;;466:19535;1910:55;;;;466:19535;1910:55;;;;;;466:19535;1910:55;;466:19535;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;1089:4;466:19535;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;1685:7:1;466:19535:4;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;:::i;:::-;;;17284:23;466:19535;;;;17428:12;466:19535;17428:12;466:19535;;;;17607:32;466:19535;17546:5;466:19535;;;17387:175;466:19535;17387:175;;17418:27;;466:19535;;17460:15;466:19535;;;;17490:16;466:19535;;;;17521:10;466:19535;;;;;;;;;;;17387:175;;;;;;:::i;:::-;466:19535;17377:186;;466:19535;;17607:32;;:::i;:::-;466:19535;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;1204:72:1;;;:::i;:::-;2227:103:2;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;;;;;10931:15;466:19535;;11115:56;466:19535;;;;11042:62;10978:17;11050:22;466:19535;10978:17;;466:19535;;10970:61;466:19535;;;;;;;10978:31;;10970:61;:::i;:::-;11050:22;466:19535;;11042:62;:::i;11115:56::-;11242:10;466:19535;;11228:13;466:19535;;;;;;-1:-1:-1;466:19535:4;;;;-1:-1:-1;466:19535:4;;;;11285:37;;;466:19535;;11366:21;;;466:19535;;;;11357:51;466:19535;;;11365:22;11357:51;:::i;:::-;466:19535;11446:27;;466:19535;11427:15;:46;466:19535;;;;;11587:42;;466:19535;;;;;;;;;;11242:10;466:19535;;;;;;11587:42;;;;;;;:::i;:::-;466:19535;11577:53;;11649:45;466:19535;;11985:11;11734:24;;466:19535;11734:24;;;466:19535;;;;;;;;;;;;11832:48;466:19535;11242:10;11832:48;;11985:11;:::i;:::-;466:19535;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;1500:62:0;;:::i;:::-;1204:72:1;;:::i;:::-;2255:4;466:19535:4;;2245:14:1;466:19535:4;;;2245:14:1;466:19535:4;2274:20:1;466:19535:4;;;735:10:3;466:19535:4;;2274:20:1;466:19535:4;;;;;;;-1:-1:-1;;466:19535:4;;;;1500:62:0;;:::i;:::-;1685:7:1;466:19535:4;;;;;;;;;;1685:7:1;466:19535:4;2521:22:1;466:19535:4;;;735:10:3;466:19535:4;;2521:22:1;466:19535:4;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;:::i;:::-;;;:::i;:::-;1204:72:1;;:::i;:::-;466:19535:4;;5831:23;;;:66;;;;466:19535;;;;;;;;;;;;;5946:47;;;;466:19535;;;;-1:-1:-1;;;;;466:19535:4;;6061:16;-1:-1:-1;;;;;6061:16:4;;;:::i;:::-;466:19535;;-1:-1:-1;;;;;466:19535:4;;;;;;;6526:35;6544:17;466:19535;6443:15;6526:35;:::i;:::-;6592:40;;;;466:19535;;;;;;;;:::i;:::-;;;;;6156:488;;466:19535;;;;6156:488;;466:19535;;;6156:488;;;466:19535;;;6156:488;;;6335:10;466:19535;;6156:488;;;466:19535;;;;6156:488;;;6405:12;;466:19535;;;6156:488;;6443:15;;466:19535;;6156:488;;;466:19535;;;;6156:488;;;466:19535;;;6156:488;;;466:19535;;;;;;;;6125:15;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;-1:-1:-1;466:19535:4;;;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;;-1:-1:-1;;;;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;466:19535:4;;;;;;;;;;;;6544:17;466:19535;;;;6125:15;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6670:75;466:19535;;;;;;;;;6670:75;6835:42;;;466:19535;6831:106;;466:19535;;;;;;;6831:106;6913:11;;;:::i;:::-;6831:106;;6835:42;466:19535;;;;;;;6855:22;6835:42;;466:19535;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6592:40;466:19535;;;;;;6592:40;;;466:19535;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;5946:47;466:19535;;;;;;5946:47;;466:19535;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;5831:66;963:4;5858:39;;;;5831:66;;;466:19535;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2227:103:2;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;;;16404:15;466:19535;;16515:56;466:19535;;;;;16451:17;466:19535;16443:61;466:19535;;;;;;;16451:31;;16443:61;:::i;16515:56::-;466:19535;;16590:24;466:19535;;;;16800:12;466:19535;16800:12;;466:19535;;;;17009:35;466:19535;17002:43;466:19535;;;;16759:177;;16790:27;;466:19535;;16832:15;466:19535;;;;16862:16;466:19535;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;16759:177;466:19535;;;;;;;;;;;;;;;;;16759:177;;;;;;;;;;:::i;:::-;466:19535;16749:188;;466:19535;;;17009:35;;;-1:-1:-1;;;466:19535:4;17009:35;;466:19535;;;;;;;;;;;;;;;17009:35;;16759:177;;17009:35;;;;;;:::i;:::-;17002:43;:::i;466:19535::-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;:::i;:::-;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;466:19535:4;;4498:22;;466:19535;;;4610:47;466:19535;;;;4552:19;466:19535;;4552:42;466:19535;;;;;;;;;;;;;;;;;;;4552:42;466:19535;;;;;;;4610:47;466:19535;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;4764:12;4750:26;;466:19535;;;4849:3;4819:26;4764:12;;4819:26;:::i;:::-;:33;466:19535;;4920:22;;4961:23;;466:19535;;;;;5201:39;466:19535;;;5028:21;466:19535;;;;;;;5103:15;466:19535;5089:29;;5085:91;;466:19535;;;;;;;;;;5201:39;466:19535;5085:91;466:19535;5103:15;466:19535;5085:91;;466:19535;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;-1:-1:-1;;;;;466:19535:4;;:::i;:::-;;;;18442:16;466:19535;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;;;-1:-1:-1;;;;;466:19535:4;;:::i;:::-;;;;18020:15;466:19535;;;;;;;18020:38;466:19535;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;466:19535:4;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;466:19535:4;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;:::o;:::-;;;16759:177;;466:19535;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;:::o;:::-;-1:-1:-1;;;;;466:19535:4;;;;;;-1:-1:-1;;466:19535:4;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;466:19535:4;;-1:-1:-1;466:19535:4;;;-1:-1:-1;466:19535:4;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;466:19535:4;;-1:-1:-1;466:19535:4;;-1:-1:-1;466:19535:4;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;-1:-1:-1;466:19535:4;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;-1:-1:-1;;;;;466:19535:4;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;:::o;:::-;-1:-1:-1;;466:19535:4;;;;;;;:::o;1796:162:0:-;1710:6;466:19535:4;-1:-1:-1;;;;;466:19535:4;735:10:3;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:3;1901:40:0;466:19535:4;;1710:6:0;1901:40;2336:287:2;1759:1;2468:7;466:19535:4;2468:19:2;1759:1;;;2468:7;466:19535:4;2336:287:2:o;1759:1::-;466:19535:4;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;466:19535:4;1759:1:2;466:19535:4;;;1759:1:2;;;;466:19535:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:19535:4;;;;:::o;15304:757::-;-1:-1:-1;;;;;466:19535:4;-1:-1:-1;466:19535:4;;;15445:15;466:19535;;;;;15484:17;;;466:19535;;-1:-1:-1;;;;466:19535:4;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;;;;;15533:51;;;15637:20;;15696:33;15504:4;15749:62;15637:20;;15623:41;466:19535;;15623:41;;:::i;:::-;15696:33;;:::i;:::-;466:19535;;;;;;;;;;;;;15749:62;466:19535;;15749:62;;;;;:::i;:::-;;;;15304:757::o;15529:525::-;15504:4;15833:48;15829:225;;15529:525;;;;;15304:757::o;15829:225::-;466:19535;15930:41;15992:50;15915:11;15945:25;15915:11;;:57;:11;;466:19535;15945:11;;;;466:19535;15945:25;:::i;:::-;15930:41;;:::i;:::-;15915:57;;:::i;:::-;15992:50;466:19535;;15992:50;;;;;:::i;:::-;;;;15829:225;;;;;;1767:106:1;466:19535:4;1685:7:1;466:19535:4;;;;1767:106:1:o;466:19535:4:-;;;-1:-1:-1;;;466:19535:4;;;;;;;;;;;;-1:-1:-1;;;466:19535:4;;;;;;;12099:318;-1:-1:-1;;;;;466:19535:4;;-1:-1:-1;466:19535:4;12199:15;466:19535;;;12242:17;466:19535;-1:-1:-1;466:19535:4;12242:17;466:19535;;;;12238:30;;12310:33;;12354:55;12310:33;;:::i;:::-;466:19535;;;;;;;:::i;:::-;;;;-1:-1:-1;;;466:19535:4;;;;12354:55;:::i;12238:30::-;12261:7;:::o;12429:1240::-;-1:-1:-1;;;;;466:19535:4;;;;-1:-1:-1;466:19535:4;12541:15;466:19535;;;-1:-1:-1;466:19535:4;;12584:17;;;466:19535;;;;12580:30;;-1:-1:-1;466:19535:4;;;12709:16;466:19535;;;;;;;;-1:-1:-1;12814:20:4;;;;;;13056:17;;;;;;;:62;;;12794:177;13052:126;;;13273:16;;466:19535;-1:-1:-1;466:19535:4;12709:16;466:19535;;;-1:-1:-1;466:19535:4;-1:-1:-1;14592:23:4;-1:-1:-1;14681:13:4;-1:-1:-1;466:19535:4;;;14676:283;14696:20;;;;;;466:19535;;;;;;15129:12;466:19535;15129:12;466:19535;;;;13654:6;466:19535;;;15058:181;466:19535;15058:181;;466:19535;;;15119:27;466:19535;;;;15161:15;466:19535;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;15058:181;;;;;;;:::i;:::-;466:19535;15048:192;;466:19535;;;;;;:::i;:::-;;;;-1:-1:-1;;;466:19535:4;;;;13269:322;13654:6;:::i;14718:3::-;14782:12;;;;:::i;:::-;466:19535;;;;;;;;;;;;-1:-1:-1;466:19535:4;12860:13;466:19535;;;-1:-1:-1;466:19535:4;;-1:-1:-1;466:19535:4;;;;-1:-1:-1;466:19535:4;;12860:49;14827:15;;466:19535;;14823:125;;14718:3;;466:19535;;14681:13;;14823:125;466:19535;14882:18;;;;14919:13;14882:18;;466:19535;14863:37;14919:13;;:::i;:::-;14823:125;;;;13269:322;13654:6;13503:33;;;;;:::i;:::-;466:19535;;;;;;:::i;:::-;;;;-1:-1:-1;;;466:19535:4;;;;13269:322;13654:6;:::i;13052:126::-;13135:7;;;:::o;13056:62::-;12709:16;13096:22;;;466:19535;13077:15;:41;;13056:62;;;12836:3;12874:12;;;;:::i;:::-;466:19535;;;;;;;;;;;;-1:-1:-1;466:19535:4;12860:13;466:19535;;;-1:-1:-1;466:19535:4;;-1:-1:-1;466:19535:4;;;;12860:49;466:19535;-1:-1:-1;466:19535:4;12860:49;466:19535;;12856:104;;12836:3;466:19535;;12799:13;;12856:104;12930:14;;466:19535;12930:14;;:::i;:::-;12856:104;;;;;13681:686;-1:-1:-1;;;;;466:19535:4;;-1:-1:-1;466:19535:4;;;13801:15;466:19535;;;;;13972:20;;;466:19535;13972:24;;;;-1:-1:-1;;466:19535:4;;;;;;;13972:70;;466:19535;;14068:12;466:19535;14068:12;;466:19535;;;;14122:15;466:19535;-1:-1:-1;466:19535:4;14100:21;466:19535;;;-1:-1:-1;466:19535:4;;14214:17;14246;13801:15;14214:17;;466:19535;14246:17;;466:19535;;14278:7;466:19535;14278:7;;;;:::i;:::-;;466:19535;;;13931:391;466:19535;13931:391;;13962:81;;466:19535;;14058:27;466:19535;;;;;;;;14153:15;466:19535;;;;14183:16;466:19535;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:19535:4;;;;;;;;;;13931:391;;;;;;;:::i;:::-;466:19535;13921:402;;13681:686;:::o;13972:70::-;466:19535;;;14026:12;466:19535;14026:12;466:19535;;;;13972:70;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1977200",
								"executionCost": "186990",
								"totalCost": "2164190"
							},
							"external": {
								"": "978",
								"MAX_PARTICIPANTS()": "879",
								"MAX_REVEAL_DELAY()": "417",
								"MIN_REVEAL_DELAY()": "615",
								"authorizedProviders(address)": "2748",
								"commitRevealDelay()": "2894",
								"commitReveals(address,uint64)": "11521",
								"emergencyPause()": "29866",
								"emergencyUnpause()": "27717",
								"getCommitReveal(address,uint64)": "infinite",
								"getRandomNumber(uint256,uint256)": "infinite",
								"getRandomNumber(uint256,uint256,bool)": "infinite",
								"getRequest(uint64)": "infinite",
								"getRevealStats(uint64)": "infinite",
								"getRevealersForRequest(uint64)": "infinite",
								"historicalBlockHashes(uint256)": "2629",
								"isRequestFulfilled(uint64)": "2422",
								"lastStoredBlock()": "2784",
								"manualResolveRequest(uint64,string)": "infinite",
								"owner()": "2763",
								"paused()": "2510",
								"pendingRequests(uint64)": "19826",
								"previewRandomWinner(address[])": "infinite",
								"renounceOwnership()": "28468",
								"requestRevealers(uint64,uint256)": "7140",
								"revealCommitment(uint64,uint256,uint256)": "infinite",
								"selectRandomWinner(address[])": "infinite",
								"selectRandomWinner(address[],bool)": "infinite",
								"setAuthorizedProvider(address,bool)": "28267",
								"setCommitRevealDelay(uint256)": "24846",
								"setRandomnessMethod(bool,bool)": "28647",
								"storeBlockHash(uint256)": "48046",
								"submitCommitment(uint64,bytes32)": "181450",
								"transferOwnership(address)": "28874",
								"useBlockHashRandomness()": "2362",
								"useCommitRevealScheme()": "2780",
								"withdraw(address,uint256)": "infinite"
							},
							"internal": {
								"_finalizeRequest(uint64,uint256,string memory)": "infinite",
								"_generateCommitRevealRandomValue(uint64)": "infinite",
								"_generateRandomValue(uint64)": "infinite",
								"_tryResolveCommitRevealRequest(uint64)": "infinite",
								"_tryResolveRequest(uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3497,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3497,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3497,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "1010000000000000000"
								},
								{
									"begin": 763,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 856,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "12C"
								},
								{
									"begin": 856,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3510,
									"end": 3519,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 763,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3577,
									"end": 3589,
									"name": "NUMBER",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3589,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3577,
									"end": 3589,
									"name": "NUMBER",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3577,
									"end": 3589,
									"name": "NUMBER",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3577,
									"end": 3589,
									"name": "NUMBER",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3647,
									"end": 3668,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3685,
									"end": 3712,
									"name": "BLOCKHASH",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 763,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 20001,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df6aa6ced4f975b9ab410754fb819daffe22b8b50cf134f3b6ffdcfbdd993e9564736f6c634300081e0033",
									".code": [
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119D5B98DD1A5BDB881B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 19962,
											"end": 19990,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F855EC2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "23806FAD"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "262FD733"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "27837EAF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3959602D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "45C70069"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "461D54E9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4A4E3BD5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "51858E27"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "52BFA7E5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "58859D74"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5F2C66D8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "65B07D58"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "69B16201"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "69DC3AE2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "69F74F6D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "6B27E2BB"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "6E68FC0A"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "7402E13D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "888EEEA6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "B76755C5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C7513F87"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "CBBF67EC"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "CD3B842E"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "D21FB421"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "D598E967"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E71BFDC0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E7C4155D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F2FCD328"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F3BAF070"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F3FEF3A3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FE6D06B4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18239,
											"end": 18252,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18239,
											"end": 18275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 19492,
											"end": 19508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 19492,
											"end": 19508,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 19559,
											"end": 19580,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 19549,
											"end": 19580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 19549,
											"end": 19580,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 19645,
											"end": 19680,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15DA5D1A191C985DD85B0819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9958DA5C1A595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 963,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2623,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF7"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9503,
											"end": 9518,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9542,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9581,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9550,
											"end": 9581,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9542,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 9542,
											"end": 9603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9542,
											"end": 9603,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 9542,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9614,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9614,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 9614,
											"end": 9676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9614,
											"end": 9676,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 9614,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 9687,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9743,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 9687,
											"end": 9743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 9762,
											"end": 9802,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9849,
											"end": 9873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9849,
											"end": 9873,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9967,
											"end": 9977,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9953,
											"end": 9966,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10002,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10011,
											"end": 10032,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10010,
											"end": 10032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10002,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10002,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10002,
											"end": 10053,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 10002,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10176,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10345,
											"end": 10357,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 10318,
											"end": 10342,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10318,
											"end": 10342,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10318,
											"end": 10342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10498,
											"name": "PUSH",
											"source": 4,
											"value": "776AF115A08EE6E6223C4848E4DA1AE6F545754DE0F819E8BAA689E540CCA351"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9967,
											"end": 9977,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10498,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10446,
											"end": 10498,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9780,
											"end": 9802,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9967,
											"end": 9977,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10135,
											"end": 10251,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A590818DBDB5B5A5D1B595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "436F6D6D69746D656E7420706572696F6420656E646564000000000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7779,
											"end": 7788,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7779,
											"end": 7788,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7825,
											"end": 7834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7855,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 7910,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7910,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8385,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8403,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8385,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 8385,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8385,
											"end": 8420,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8385,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8194,
											"end": 8204,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8302,
											"end": 8317,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7985,
											"end": 8000,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8420,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7985,
											"end": 8000,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8016,
											"end": 8503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8601,
											"name": "PUSH",
											"source": 4,
											"value": "E0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8601,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8601,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 8704,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8704,
											"end": 8715,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8704,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8622,
											"end": 8728,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8668,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8626,
											"end": 8668,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8451,
											"end": 8491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52616E676520746F6F206C61726765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "B2692B979A0EBBC948769201966BF3AF4548DC99B201B0188D8F7D727C612B83"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF000000000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF0000000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FFFF0000000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4159,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4174206C65617374206F6E65206D6574686F64206D75737420626520656E6162"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3914,
											"end": 3947,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18754,
											"end": 18770,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 18868,
											"end": 18888,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 19061,
											"end": 19091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 19061,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 18890,
											"end": 18893,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 18890,
											"end": 18893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 18928,
											"end": 18940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 18928,
											"end": 18940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18914,
											"end": 18927,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 18914,
											"end": 18963,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18914,
											"end": 18963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18890,
											"end": 18893,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 18890,
											"end": 18893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18853,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 18853,
											"end": 18866,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 18984,
											"end": 18999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 18984,
											"end": 18999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 18910,
											"end": 19015,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "461D54E9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7244,
											"end": 7248,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7244,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7244,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 7244,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17856,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17841,
											"end": 17856,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E7C4155D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 8999,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 8995,
											"end": 9032,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "3C"
										},
										{
											"begin": 4263,
											"end": 4289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4289,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4289,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4348,
											"end": 4374,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642064656C6179"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 4293,
											"end": 4319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4319,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4319,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 4263,
											"end": 4319,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2051,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 2051,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "PUSH",
											"source": 4,
											"value": "E10"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17284,
											"end": 17307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17428,
											"end": 17440,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17428,
											"end": 17440,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17546,
											"end": 17551,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17418,
											"end": 17445,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17418,
											"end": 17445,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17460,
											"end": 17475,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17490,
											"end": 17506,
											"name": "PREVRANDAO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17521,
											"end": 17531,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "PUSH",
											"source": 4,
											"value": "B4"
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 17387,
											"end": 17562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 17387,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17563,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 17607,
											"end": 17639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 17607,
											"end": 17639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207061727469636970616E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "365"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10931,
											"end": 10946,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11115,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11050,
											"end": 11072,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10970,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10978,
											"end": 11009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10978,
											"end": 11009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10970,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 10970,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10970,
											"end": 11031,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 10970,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11050,
											"end": 11072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 11042,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11115,
											"end": 11171,
											"name": "tag",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 11115,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11242,
											"end": 11252,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11228,
											"end": 11241,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11322,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11322,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11285,
											"end": 11322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11387,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11366,
											"end": 11387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 11357,
											"end": 11408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11357,
											"end": 11408,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 11357,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11446,
											"end": 11473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11446,
											"end": 11473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11427,
											"end": 11442,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11427,
											"end": 11473,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11242,
											"end": 11252,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "PUSH",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "PUSH",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 11587,
											"end": 11629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 11587,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11630,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11694,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11985,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 11734,
											"end": 11758,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11758,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11734,
											"end": 11758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11758,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11734,
											"end": 11758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "PUSH",
											"source": 4,
											"value": "E31C53097A08B041054A61A87113ADC8F265BAE8DF68BA97E83AA8F8901721F7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11242,
											"end": 11252,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11985,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 11985,
											"end": 11996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11985,
											"end": 11996,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 11985,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C995D99585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14995D99585B081C195C9A5BD908195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC818DBDB5B5A5D1B595B9D08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1204,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 1204,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5854,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6061,
											"end": 6077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 6061,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 6544,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6443,
											"end": 6458,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6526,
											"end": 6561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6526,
											"end": 6561,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 6526,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6345,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6443,
											"end": 6458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6443,
											"end": 6458,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6156,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP13",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP14",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6670,
											"end": 6745,
											"name": "PUSH",
											"source": 4,
											"value": "E0CE7AAEB215BB79A9DD4DC5A9E9268C5ABAA14011F5AAFA4CC86140273DB5DE"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6670,
											"end": 6745,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6913,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 6913,
											"end": 6924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6913,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 6913,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6913,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 6913,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 6831,
											"end": 6937,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 6835,
											"end": 6877,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP16",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP16",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "422"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 6592,
											"end": 6632,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F2072616E646F6D6E657373206D6574686F6420656E61626C656400000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 5946,
											"end": 5993,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C6964207061727469636970616E7420636F756E7400000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 963,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 5858,
											"end": 5897,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5858,
											"end": 5897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5858,
											"end": 5897,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5858,
											"end": 5897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5831,
											"end": 5897,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2227,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 2227,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16404,
											"end": 16419,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16515,
											"end": 16571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16451,
											"end": 16468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16443,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16451,
											"end": 16482,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16451,
											"end": 16482,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16443,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 16443,
											"end": 16504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16515,
											"end": 16571,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 16515,
											"end": 16571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16590,
											"end": 16614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 16800,
											"end": 16812,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16800,
											"end": 16812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16800,
											"end": 16812,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 17002,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16790,
											"end": 16817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16790,
											"end": 16817,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16832,
											"end": 16847,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16862,
											"end": 16878,
											"name": "PREVRANDAO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 16759,
											"end": 16936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16749,
											"end": 16937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16749,
											"end": 16937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26B0B73AB0B61D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 17009,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "tag",
											"source": 4,
											"value": "457"
										},
										{
											"begin": 17009,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17002,
											"end": 17045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 17002,
											"end": 17045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26BAB9BA10383937BB34B232903932B0B9B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "469"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1500,
											"end": 1562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 1500,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4657,
											"name": "PUSH",
											"source": 4,
											"value": "D6BB5132B8C1A381981B94D9EDA2294AB5F22147EF4D46613202CF95D69D10F8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4571,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4594,
											"name": "tag",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 4552,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4657,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B210383937BB34B232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4776,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4776,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4849,
											"end": 4852,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4819,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 4764,
											"end": 4776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4776,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4819,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4845,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 4819,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4984,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4984,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5201,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "90CBC6AD14A45CB8A21348DD4105F964F14F41EE0B36E5965B301804C8591F96"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5028,
											"end": 5049,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5118,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5118,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5201,
											"end": 5240,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5118,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "486"
										},
										{
											"begin": 5085,
											"end": 5176,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840C4D8DEC6D640D0C2E6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426C6F636B206861736820756E617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109B1BD8DAC81B9BDD081E595D081B5A5B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "491"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18442,
											"end": 18458,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "493"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "498"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18035,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 18020,
											"end": 18058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16936,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "522"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "526"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "535"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "535"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "534"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "540"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "540"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14995C5D595CDD081B9BDD08199BDD5B99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "5265717565737420616C72656164792066756C66696C6C656400000000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "548"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "548"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F74206120636F6D6D69742D72657665616C20726571756573740000000000"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481C995D99585B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA7"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15304,
											"end": 16061,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 15304,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15445,
											"end": 15460,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15484,
											"end": 15501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15533,
											"end": 15584,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15533,
											"end": 15584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "566"
										},
										{
											"begin": 15533,
											"end": 15584,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15637,
											"end": 15657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15637,
											"end": 15657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15696,
											"end": 15729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "568"
										},
										{
											"begin": 15504,
											"end": 15508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "PUSH",
											"source": 4,
											"value": "68DC1228FEF2529D8E55D849A6FB811D6FC0355EEDB5DF83F3D75DF9160FCF61"
										},
										{
											"begin": 15637,
											"end": 15657,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 15637,
											"end": 15657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15623,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "569"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15623,
											"end": 15664,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 15623,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 15623,
											"end": 15664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15623,
											"end": 15664,
											"name": "tag",
											"source": 4,
											"value": "569"
										},
										{
											"begin": 15623,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15696,
											"end": 15729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15696,
											"end": 15729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 15696,
											"end": 15729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15696,
											"end": 15729,
											"name": "tag",
											"source": 4,
											"value": "568"
										},
										{
											"begin": 15696,
											"end": 15729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "570"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 15749,
											"end": 15811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "tag",
											"source": 4,
											"value": "570"
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15749,
											"end": 15811,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15304,
											"end": 16061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "tag",
											"source": 4,
											"value": "566"
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15504,
											"end": 15508,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 15833,
											"end": 15881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "572"
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "tag",
											"source": 4,
											"value": "573"
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15529,
											"end": 16054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15304,
											"end": 16061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "tag",
											"source": 4,
											"value": "572"
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 15930,
											"end": 15971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "574"
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "PUSH",
											"source": 4,
											"value": "6B815B5B9DE29F9199853C891BF2BC0936730912186ECE85660B071F5AA4C1B6"
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "575"
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 15915,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "576"
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 15915,
											"end": 15926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15956,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15956,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 15945,
											"end": 15970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "tag",
											"source": 4,
											"value": "575"
										},
										{
											"begin": 15945,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15930,
											"end": 15971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15930,
											"end": 15971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 15930,
											"end": 15971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15930,
											"end": 15971,
											"name": "tag",
											"source": 4,
											"value": "574"
										},
										{
											"begin": 15930,
											"end": 15971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15915,
											"end": 15972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15915,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 15915,
											"end": 15972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15915,
											"end": 15972,
											"name": "tag",
											"source": 4,
											"value": "576"
										},
										{
											"begin": 15915,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "577"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 15992,
											"end": 16042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "tag",
											"source": 4,
											"value": "577"
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15992,
											"end": 16042,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "573"
										},
										{
											"begin": 15829,
											"end": 16054,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "578"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "578"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12099,
											"end": 12417,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 12099,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12242,
											"end": 12259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12242,
											"end": 12259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 12238,
											"end": 12268,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "582"
										},
										{
											"begin": 12354,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 12310,
											"end": 12343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "tag",
											"source": 4,
											"value": "582"
										},
										{
											"begin": 12310,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "584"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "584"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84D8DEC6D690C2E6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12354,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 12354,
											"end": 12409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12268,
											"name": "tag",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 12238,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12261,
											"end": 12268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12261,
											"end": 12268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12429,
											"end": 13669,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 12429,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12541,
											"end": 12556,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12584,
											"end": 12601,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12584,
											"end": 12601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12584,
											"end": 12601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12580,
											"end": 12610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 12580,
											"end": 12610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "tag",
											"source": 4,
											"value": "587"
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 12814,
											"end": 12834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12794,
											"end": 12971,
											"name": "tag",
											"source": 4,
											"value": "591"
										},
										{
											"begin": 12794,
											"end": 12971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13052,
											"end": 13178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13052,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 13052,
											"end": 13178,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13273,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 13273,
											"end": 13289,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14592,
											"end": 14615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 14681,
											"end": 14694,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14676,
											"end": 14959,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "tag",
											"source": 4,
											"value": "596"
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "597"
										},
										{
											"begin": 14696,
											"end": 14716,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15129,
											"end": 15141,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15129,
											"end": 15141,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15119,
											"end": 15146,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15161,
											"end": 15176,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "PUSH",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "602"
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "PUSH",
											"source": 4,
											"value": "A8"
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 15058,
											"end": 15239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "tag",
											"source": 4,
											"value": "602"
										},
										{
											"begin": 15058,
											"end": 15239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15048,
											"end": 15240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15048,
											"end": 15240,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "603"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10DBDB5B5A5D14995D99585B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13269,
											"end": 13591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 13654,
											"end": 13660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "tag",
											"source": 4,
											"value": "597"
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "605"
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 14782,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "tag",
											"source": 4,
											"value": "605"
										},
										{
											"begin": 14782,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12860,
											"end": 12909,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 14827,
											"end": 14842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14827,
											"end": 14842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "606"
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "tag",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14718,
											"end": 14721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14681,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "596"
										},
										{
											"begin": 14681,
											"end": 14694,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "tag",
											"source": 4,
											"value": "606"
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14919,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14882,
											"end": 14900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14863,
											"end": 14900,
											"name": "XOR",
											"source": 4
										},
										{
											"begin": 14919,
											"end": 14932,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 14919,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 14919,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14919,
											"end": 14932,
											"name": "tag",
											"source": 4,
											"value": "608"
										},
										{
											"begin": 14919,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "607"
										},
										{
											"begin": 14823,
											"end": 14948,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13269,
											"end": 13591,
											"name": "tag",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 13269,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "537"
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 13503,
											"end": 13536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "tag",
											"source": 4,
											"value": "609"
										},
										{
											"begin": 13503,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "610"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 466,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "tag",
											"source": 4,
											"value": "610"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426C6F636B4861736846616C6C6261636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13269,
											"end": 13591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 13654,
											"end": 13660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13052,
											"end": 13178,
											"name": "tag",
											"source": 4,
											"value": "592"
										},
										{
											"begin": 13052,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13135,
											"end": 13142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "tag",
											"source": 4,
											"value": "590"
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12725,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 13096,
											"end": 13118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13096,
											"end": 13118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13096,
											"end": 13118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13077,
											"end": 13092,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 13077,
											"end": 13118,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13077,
											"end": 13118,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "591"
										},
										{
											"begin": 13056,
											"end": 13118,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12836,
											"end": 12839,
											"name": "tag",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 12836,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "611"
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 12874,
											"end": 12886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "tag",
											"source": 4,
											"value": "611"
										},
										{
											"begin": 12874,
											"end": 12886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12860,
											"end": 12909,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 12860,
											"end": 12909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "612"
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12836,
											"end": 12839,
											"name": "tag",
											"source": 4,
											"value": "613"
										},
										{
											"begin": 12836,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12799,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "587"
										},
										{
											"begin": 12799,
											"end": 12812,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "tag",
											"source": 4,
											"value": "612"
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "614"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 12930,
											"end": 12944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "tag",
											"source": 4,
											"value": "614"
										},
										{
											"begin": 12930,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "613"
										},
										{
											"begin": 12856,
											"end": 12960,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13681,
											"end": 14367,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 13681,
											"end": 14367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13816,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 13992,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 13972,
											"end": 13992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 13992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 13996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 13996,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 13996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "615"
										},
										{
											"begin": 13972,
											"end": 13996,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "tag",
											"source": 4,
											"value": "619"
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14080,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14080,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14122,
											"end": 14137,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14100,
											"end": 14121,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14214,
											"end": 14231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13801,
											"end": 13816,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 14214,
											"end": 14231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14214,
											"end": 14231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14246,
											"end": 14263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "622"
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 14278,
											"end": 14285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "tag",
											"source": 4,
											"value": "622"
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14278,
											"end": 14285,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13962,
											"end": 14043,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 13962,
											"end": 14043,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14058,
											"end": 14085,
											"name": "BLOCKHASH",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14153,
											"end": 14168,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14183,
											"end": 14199,
											"name": "PREVRANDAO",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "F4"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "PUSH",
											"source": 4,
											"value": "FC"
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "623"
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "PUSH",
											"source": 4,
											"value": "11C"
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 13931,
											"end": 14322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "tag",
											"source": 4,
											"value": "623"
										},
										{
											"begin": 13931,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13921,
											"end": 14323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13921,
											"end": 14323,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 13681,
											"end": 14367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13681,
											"end": 14367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "tag",
											"source": 4,
											"value": "615"
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 14026,
											"end": 14038,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14026,
											"end": 14038,
											"name": "NUMBER",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 20001,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "619"
										},
										{
											"begin": 13972,
											"end": 14042,
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"LotteryEngine.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_PARTICIPANTS()": "f3baf070",
							"MAX_REVEAL_DELAY()": "5f2c66d8",
							"MIN_REVEAL_DELAY()": "888eeea6",
							"authorizedProviders(address)": "69dc3ae2",
							"commitRevealDelay()": "e71bfdc0",
							"commitReveals(address,uint64)": "7402e13d",
							"emergencyPause()": "51858e27",
							"emergencyUnpause()": "4a4e3bd5",
							"getCommitReveal(address,uint64)": "fe6d06b4",
							"getRandomNumber(uint256,uint256)": "6e68fc0a",
							"getRandomNumber(uint256,uint256,bool)": "e7c4155d",
							"getRequest(uint64)": "cbbf67ec",
							"getRevealStats(uint64)": "d21fb421",
							"getRevealersForRequest(uint64)": "23806fad",
							"historicalBlockHashes(uint256)": "69b16201",
							"isRequestFulfilled(uint64)": "0f855ec2",
							"lastStoredBlock()": "c7513f87",
							"manualResolveRequest(uint64,string)": "45c70069",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"pendingRequests(uint64)": "65b07d58",
							"previewRandomWinner(address[])": "58859d74",
							"renounceOwnership()": "715018a6",
							"requestRevealers(uint64,uint256)": "69f74f6d",
							"revealCommitment(uint64,uint256,uint256)": "52bfa7e5",
							"selectRandomWinner(address[])": "cd3b842e",
							"selectRandomWinner(address[],bool)": "461d54e9",
							"setAuthorizedProvider(address,bool)": "27837eaf",
							"setCommitRevealDelay(uint256)": "6b27e2bb",
							"setRandomnessMethod(bool,bool)": "d598e967",
							"storeBlockHash(uint256)": "262fd733",
							"submitCommitment(uint64,bytes32)": "f2fcd328",
							"transferOwnership(address)": "f2fde38b",
							"useBlockHashRandomness()": "3959602d",
							"useCommitRevealScheme()": "b76755c5",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"AuthorizedProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"BlockHashStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revealer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"CommitSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"RandomNumberGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"enum CitreaLotteryEngine.RequestType\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useCommitReveal\",\"type\":\"bool\"}],\"name\":\"RandomRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"RandomWinnerSelected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blockHash\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"commitReveal\",\"type\":\"bool\"}],\"name\":\"RandomnessMethodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequenceNumber\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revealer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revealValue\",\"type\":\"uint256\"}],\"name\":\"RevealSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_PARTICIPANTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REVEAL_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_REVEAL_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitRevealDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"commitReveals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"revealValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"commitBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revealer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"name\":\"getCommitReveal\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"revealValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"commitBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct CitreaLotteryEngine.CommitReveal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useCommitReveal\",\"type\":\"bool\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"enum CitreaLotteryEngine.RequestType\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"requestBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"commitHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCommitReveal\",\"type\":\"bool\"}],\"internalType\":\"struct CitreaLotteryEngine.RandomRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"name\":\"getRevealStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRevealers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealedCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"name\":\"getRevealersForRequest\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"historicalBlockHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"name\":\"isRequestFulfilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastStoredBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"manualResolveRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"pendingRequests\",\"outputs\":[{\"internalType\":\"enum CitreaLotteryEngine.RequestType\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"requestBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"commitHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCommitReveal\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"}],\"name\":\"previewRandomWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestRevealers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"secret\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"revealCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"useCommitReveal\",\"type\":\"bool\"}],\"name\":\"selectRandomWinner\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"}],\"name\":\"selectRandomWinner\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delay\",\"type\":\"uint256\"}],\"name\":\"setCommitRevealDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_useBlockHash\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_useCommitReveal\",\"type\":\"bool\"}],\"name\":\"setRandomnessMethod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"storeBlockHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sequenceNum\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"}],\"name\":\"submitCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useBlockHashRandomness\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"useCommitRevealScheme\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Provides secure random winner selection using Bitcoin block hashes and commit-reveal schemes\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRandomNumber(uint256,uint256,bool)\":{\"params\":{\"max\":\"Maximum value (exclusive)\",\"min\":\"Minimum value (inclusive)\",\"useCommitReveal\":\"Whether to use commit-reveal scheme\"},\"returns\":{\"sequenceNum\":\"The sequence number for tracking this request\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealCommitment(uint64,uint256,uint256)\":{\"params\":{\"salt\":\"Additional salt used in commitment\",\"secret\":\"The secret value used in commitment\",\"sequenceNum\":\"The sequence number of the request\"}},\"selectRandomWinner(address[],bool)\":{\"params\":{\"participants\":\"Array of participant addresses\",\"useCommitReveal\":\"Whether to use commit-reveal scheme for this request\"},\"returns\":{\"sequenceNum\":\"The sequence number for tracking this request\"}},\"submitCommitment(uint64,bytes32)\":{\"params\":{\"commitment\":\"Keccak256 hash of (secret + salt)\",\"sequenceNum\":\"The sequence number of the request\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"CitreaLotteryEngine\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRandomNumber(uint256,uint256)\":{\"notice\":\"Overloaded function for backward compatibility\"},\"getRandomNumber(uint256,uint256,bool)\":{\"notice\":\"Generate a random number within a range\"},\"manualResolveRequest(uint64,string)\":{\"notice\":\"Manually resolve a request (owner only, for emergencies)\"},\"revealCommitment(uint64,uint256,uint256)\":{\"notice\":\"Reveal the committed value\"},\"selectRandomWinner(address[])\":{\"notice\":\"Overloaded function for backward compatibility (defaults to block hash method)\"},\"selectRandomWinner(address[],bool)\":{\"notice\":\"Select a random winner from participants using multiple randomness sources\"},\"submitCommitment(uint64,bytes32)\":{\"notice\":\"Submit commitment for randomness generation\"}},\"notice\":\"Enhanced lottery engine for ChainPot on Citrea with multiple randomness sources\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"LotteryEngine.sol\":\"CitreaLotteryEngine\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"LotteryEngine.sol\":{\"keccak256\":\"0xe6d9be2267455f193570c011b20806c547ac4e4136bdde5bee946e3268abc0c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eae20355828192659218e7649e4de523791d14f18a9c980aea59d0e65e68cb0f\",\"dweb:/ipfs/QmZExqqpXkFXYKKKMePxgRyjdD8oZQbKwqrtQimHq2N73T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 165,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 364,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "nonce",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 366,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "sequenceNumber",
								"offset": 0,
								"slot": "4",
								"type": "t_uint64"
							},
							{
								"astId": 369,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "useBlockHashRandomness",
								"offset": 8,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 372,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "useCommitRevealScheme",
								"offset": 9,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 375,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "commitRevealDelay",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 429,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "pendingRequests",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint64,t_struct(RandomRequest)409_storage)"
							},
							{
								"astId": 436,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "commitReveals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint64,t_struct(CommitReveal)420_storage))"
							},
							{
								"astId": 441,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "requestRevealers",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint64,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 445,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "historicalBlockHashes",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_bytes32)"
							},
							{
								"astId": 447,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "lastStoredBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 451,
								"contract": "LotteryEngine.sol:CitreaLotteryEngine",
								"label": "authorizedProviders",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(RequestType)424": {
								"encoding": "inplace",
								"label": "enum CitreaLotteryEngine.RequestType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint64,t_struct(CommitReveal)420_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint64,t_struct(CommitReveal)420_storage)"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint64,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint64",
								"label": "mapping(uint64 => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_uint64,t_struct(CommitReveal)420_storage)": {
								"encoding": "mapping",
								"key": "t_uint64",
								"label": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal)",
								"numberOfBytes": "32",
								"value": "t_struct(CommitReveal)420_storage"
							},
							"t_mapping(t_uint64,t_struct(RandomRequest)409_storage)": {
								"encoding": "mapping",
								"key": "t_uint64",
								"label": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest)",
								"numberOfBytes": "32",
								"value": "t_struct(RandomRequest)409_storage"
							},
							"t_struct(CommitReveal)420_storage": {
								"encoding": "inplace",
								"label": "struct CitreaLotteryEngine.CommitReveal",
								"members": [
									{
										"astId": 411,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "commitment",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 413,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "revealValue",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 415,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "revealed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 417,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "commitBlock",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 419,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "revealDeadline",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(RandomRequest)409_storage": {
								"encoding": "inplace",
								"label": "struct CitreaLotteryEngine.RandomRequest",
								"members": [
									{
										"astId": 387,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "requestType",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(RequestType)424"
									},
									{
										"astId": 390,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "participants",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 392,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "min",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 394,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "max",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 396,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "requester",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 398,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "fulfilled",
										"offset": 20,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 400,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "requestBlock",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 402,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "timestamp",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 404,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "commitHash",
										"offset": 0,
										"slot": "7",
										"type": "t_bytes32"
									},
									{
										"astId": 406,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "revealDeadline",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 408,
										"contract": "LotteryEngine.sol:CitreaLotteryEngine",
										"label": "isCommitReveal",
										"offset": 0,
										"slot": "9",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "320"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getRandomNumber(uint256,uint256)": {
								"notice": "Overloaded function for backward compatibility"
							},
							"getRandomNumber(uint256,uint256,bool)": {
								"notice": "Generate a random number within a range"
							},
							"manualResolveRequest(uint64,string)": {
								"notice": "Manually resolve a request (owner only, for emergencies)"
							},
							"revealCommitment(uint64,uint256,uint256)": {
								"notice": "Reveal the committed value"
							},
							"selectRandomWinner(address[])": {
								"notice": "Overloaded function for backward compatibility (defaults to block hash method)"
							},
							"selectRandomWinner(address[],bool)": {
								"notice": "Select a random winner from participants using multiple randomness sources"
							},
							"submitCommitment(uint64,bytes32)": {
								"notice": "Submit commitment for randomness generation"
							}
						},
						"notice": "Enhanced lottery engine for ChainPot on Citrea with multiple randomness sources",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n   --> LotteryEngine.sol:363:13:\n    |\n363 |             block.difficulty,\n    |             ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 14199,
					"file": "LotteryEngine.sol",
					"start": 14183
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n   --> LotteryEngine.sol:430:13:\n    |\n430 |             block.difficulty,\n    |             ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 16878,
					"file": "LotteryEngine.sol",
					"start": 16862
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "8417",
				"formattedMessage": "Warning: Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.\n   --> LotteryEngine.sol:450:13:\n    |\n450 |             block.difficulty,\n    |             ^^^^^^^^^^^^^^^^\n\n",
				"message": "Since the VM version paris, \"difficulty\" was replaced by \"prevrandao\", which now returns a random number based on the beacon chain.",
				"severity": "warning",
				"sourceLocation": {
					"end": 17506,
					"file": "LotteryEngine.sol",
					"start": 17490
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							350
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 351,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 350,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 350,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								350
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							350
						],
						"Pausable": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 256,
							"sourceUnit": 351,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 350,
										"src": "632:7:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255,
								350
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 158,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 163,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 255,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 164,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 174,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 255,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 182,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 185,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 190,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 255,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 204,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 255,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 255,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 225,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 255,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 241,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 190,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 255,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								158,
								163
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 261,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 270,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 274,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 320,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 280,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 285,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 290,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 320,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 320,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 315,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 320,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							350
						]
					},
					"id": 351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 328,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 330,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 350,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 337,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 336,
												"id": 339,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 350,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 345,
												"id": 347,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 350,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 351,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"LotteryEngine.sol": {
				"ast": {
					"absolutePath": "LotteryEngine.sol",
					"exportedSymbols": {
						"CitreaLotteryEngine": [
							1857
						],
						"Context": [
							350
						],
						"Ownable": [
							147
						],
						"Pausable": [
							255
						],
						"ReentrancyGuard": [
							320
						]
					},
					"id": 1858,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 148,
							"src": "61:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 321,
							"src": "115:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 256,
							"src": "179:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 357,
										"name": "Ownable",
										"nameLocations": [
											"498:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "498:7:4"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "498:7:4"
								},
								{
									"baseName": {
										"id": 359,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"507:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "507:15:4"
									},
									"id": 360,
									"nodeType": "InheritanceSpecifier",
									"src": "507:15:4"
								},
								{
									"baseName": {
										"id": 361,
										"name": "Pausable",
										"nameLocations": [
											"524:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "524:8:4"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "524:8:4"
								}
							],
							"canonicalName": "CitreaLotteryEngine",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "238:228:4",
								"text": "@title CitreaLotteryEngine\n @notice Enhanced lottery engine for ChainPot on Citrea with multiple randomness sources\n @dev Provides secure random winner selection using Bitcoin block hashes and commit-reveal schemes"
							},
							"fullyImplemented": true,
							"id": 1857,
							"linearizedBaseContracts": [
								1857,
								255,
								320,
								147,
								350
							],
							"name": "CitreaLotteryEngine",
							"nameLocation": "475:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 364,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "636:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "620:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 366,
									"mutability": "mutable",
									"name": "sequenceNumber",
									"nameLocation": "663:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "648:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 365,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "648:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3959602d",
									"id": 369,
									"mutability": "mutable",
									"name": "useBlockHashRandomness",
									"nameLocation": "738:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "726:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 367,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "726:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "763:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b76755c5",
									"id": 372,
									"mutability": "mutable",
									"name": "useCommitRevealScheme",
									"nameLocation": "786:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "774:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 370,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "774:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 371,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e71bfdc0",
									"id": 375,
									"mutability": "mutable",
									"name": "commitRevealDelay",
									"nameLocation": "836:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "821:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "821:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "856:3:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f3baf070",
									"id": 378,
									"mutability": "constant",
									"name": "MAX_PARTICIPANTS",
									"nameLocation": "944:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "920:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "920:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "963:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "888eeea6",
									"id": 381,
									"mutability": "constant",
									"name": "MIN_REVEAL_DELAY",
									"nameLocation": "998:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "974:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "974:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 380,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1017:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5f2c66d8",
									"id": 384,
									"mutability": "constant",
									"name": "MAX_REVEAL_DELAY",
									"nameLocation": "1070:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1046:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 382,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1089:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CitreaLotteryEngine.RandomRequest",
									"id": 409,
									"members": [
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "requestType",
											"nameLocation": "1232:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1220:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_RequestType_$424",
												"typeString": "enum CitreaLotteryEngine.RequestType"
											},
											"typeName": {
												"id": 386,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 385,
													"name": "RequestType",
													"nameLocations": [
														"1220:11:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 424,
													"src": "1220:11:4"
												},
												"referencedDeclaration": 424,
												"src": "1220:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RequestType_$424",
													"typeString": "enum CitreaLotteryEngine.RequestType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 390,
											"mutability": "mutable",
											"name": "participants",
											"nameLocation": "1264:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1254:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ArrayTypeName",
												"src": "1254:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 392,
											"mutability": "mutable",
											"name": "min",
											"nameLocation": "1295:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1287:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 391,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1287:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "max",
											"nameLocation": "1317:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1309:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1309:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "requester",
											"nameLocation": "1339:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1331:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 395,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "fulfilled",
											"nameLocation": "1364:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1359:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 397,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1359:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "requestBlock",
											"nameLocation": "1392:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1384:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1423:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1415:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1415:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 404,
											"mutability": "mutable",
											"name": "commitHash",
											"nameLocation": "1451:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1443:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 403,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1443:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "revealDeadline",
											"nameLocation": "1480:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1472:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1472:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"mutability": "mutable",
											"name": "isCommitReveal",
											"nameLocation": "1510:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 409,
											"src": "1505:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 407,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1505:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RandomRequest",
									"nameLocation": "1195:13:4",
									"nodeType": "StructDefinition",
									"scope": 1857,
									"src": "1188:344:4",
									"visibility": "public"
								},
								{
									"canonicalName": "CitreaLotteryEngine.CommitReveal",
									"id": 420,
									"members": [
										{
											"constant": false,
											"id": 411,
											"mutability": "mutable",
											"name": "commitment",
											"nameLocation": "1583:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 420,
											"src": "1575:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 410,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 413,
											"mutability": "mutable",
											"name": "revealValue",
											"nameLocation": "1612:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 420,
											"src": "1604:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1604:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "revealed",
											"nameLocation": "1639:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 420,
											"src": "1634:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 414,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1634:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "commitBlock",
											"nameLocation": "1666:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 420,
											"src": "1658:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1658:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "revealDeadline",
											"nameLocation": "1696:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 420,
											"src": "1688:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1688:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CommitReveal",
									"nameLocation": "1551:12:4",
									"nodeType": "StructDefinition",
									"scope": 1857,
									"src": "1544:174:4",
									"visibility": "public"
								},
								{
									"canonicalName": "CitreaLotteryEngine.RequestType",
									"id": 424,
									"members": [
										{
											"id": 421,
											"name": "WINNER_SELECTION",
											"nameLocation": "1758:16:4",
											"nodeType": "EnumValue",
											"src": "1758:16:4"
										},
										{
											"id": 422,
											"name": "RANDOM_NUMBER",
											"nameLocation": "1785:13:4",
											"nodeType": "EnumValue",
											"src": "1785:13:4"
										},
										{
											"id": 423,
											"name": "WEIGHTED_SELECTION",
											"nameLocation": "1809:18:4",
											"nodeType": "EnumValue",
											"src": "1809:18:4"
										}
									],
									"name": "RequestType",
									"nameLocation": "1735:11:4",
									"nodeType": "EnumDefinition",
									"src": "1730:104:4"
								},
								{
									"constant": false,
									"functionSelector": "65b07d58",
									"id": 429,
									"mutability": "mutable",
									"name": "pendingRequests",
									"nameLocation": "1950:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1910:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
										"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest)"
									},
									"typeName": {
										"id": 428,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 425,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "1918:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										},
										"nodeType": "Mapping",
										"src": "1910:32:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
											"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 427,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 426,
												"name": "RandomRequest",
												"nameLocations": [
													"1928:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 409,
												"src": "1928:13:4"
											},
											"referencedDeclaration": 409,
											"src": "1928:13:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
												"typeString": "struct CitreaLotteryEngine.RandomRequest"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7402e13d",
									"id": 436,
									"mutability": "mutable",
									"name": "commitReveals",
									"nameLocation": "2031:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1972:72:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
										"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal))"
									},
									"typeName": {
										"id": 435,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 430,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1980:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1972:51:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
											"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 434,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 431,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1999:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"nodeType": "Mapping",
											"src": "1991:31:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
												"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 433,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 432,
													"name": "CommitReveal",
													"nameLocations": [
														"2009:12:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 420,
													"src": "2009:12:4"
												},
												"referencedDeclaration": 420,
												"src": "2009:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
													"typeString": "struct CitreaLotteryEngine.CommitReveal"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "69f74f6d",
									"id": 441,
									"mutability": "mutable",
									"name": "requestRevealers",
									"nameLocation": "2087:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2051:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(uint64 => address[])"
									},
									"typeName": {
										"id": 440,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 437,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "2059:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										},
										"nodeType": "Mapping",
										"src": "2051:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(uint64 => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 438,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2069:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 439,
											"nodeType": "ArrayTypeName",
											"src": "2069:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "69b16201",
									"id": 445,
									"mutability": "mutable",
									"name": "historicalBlockHashes",
									"nameLocation": "2187:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2152:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 444,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 442,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2160:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2152:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 443,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2171:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7513f87",
									"id": 447,
									"mutability": "mutable",
									"name": "lastStoredBlock",
									"nameLocation": "2230:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2215:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2215:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "69dc3ae2",
									"id": 451,
									"mutability": "mutable",
									"name": "authorizedProviders",
									"nameLocation": "2351:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2319:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 450,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 448,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2327:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2319:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 449,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2338:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "68dc1228fef2529d8e55d849a6fb811d6fc0355eedb5df83f3d75df9160fcf61",
									"id": 461,
									"name": "RandomWinnerSelected",
									"nameLocation": "2452:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "2499:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2483:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2483:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomSeed",
												"nameLocation": "2525:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2517:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "2562:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2547:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 456,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2547:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "method",
												"nameLocation": "2594:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2587:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:135:4"
									},
									"src": "2446:162:4"
								},
								{
									"anonymous": false,
									"eventSelector": "6b815b5b9de29f9199853c891bf2bc0936730912186ece85660b071f5aa4c1b6",
									"id": 469,
									"name": "RandomNumberGenerated",
									"nameLocation": "2620:21:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "randomNumber",
												"nameLocation": "2660:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2652:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "2699:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2684:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 464,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2684:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "method",
												"nameLocation": "2731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "2724:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 466,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2724:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2641:103:4"
									},
									"src": "2614:131:4"
								},
								{
									"anonymous": false,
									"eventSelector": "e0ce7aaeb215bb79a9dd4dc5a9e9268c5abaa14011f5aafa4cc86140273db5de",
									"id": 478,
									"name": "RandomRequested",
									"nameLocation": "2757:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "2798:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2783:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 470,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestType",
												"nameLocation": "2836:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2824:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RequestType_$424",
													"typeString": "enum CitreaLotteryEngine.RequestType"
												},
												"typeName": {
													"id": 473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 472,
														"name": "RequestType",
														"nameLocations": [
															"2824:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 424,
														"src": "2824:11:4"
													},
													"referencedDeclaration": 424,
													"src": "2824:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RequestType_$424",
														"typeString": "enum CitreaLotteryEngine.RequestType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": false,
												"mutability": "mutable",
												"name": "useCommitReveal",
												"nameLocation": "2863:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2858:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2858:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2772:113:4"
									},
									"src": "2751:135:4"
								},
								{
									"anonymous": false,
									"eventSelector": "776af115a08ee6e6223c4848e4da1ae6f545754de0f819e8baa689e540cca351",
									"id": 486,
									"name": "CommitSubmitted",
									"nameLocation": "2898:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "2939:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2924:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 479,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2924:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "revealer",
												"nameLocation": "2980:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2964:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "commitment",
												"nameLocation": "3007:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2999:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 483,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2913:111:4"
									},
									"src": "2892:133:4"
								},
								{
									"anonymous": false,
									"eventSelector": "e31c53097a08b041054a61a87113adc8f265bae8df68ba97e83aa8f8901721f7",
									"id": 494,
									"name": "RevealSubmitted",
									"nameLocation": "3037:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequenceNumber",
												"nameLocation": "3078:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3063:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 487,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3063:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "revealer",
												"nameLocation": "3119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3103:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "revealValue",
												"nameLocation": "3146:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3138:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:112:4"
									},
									"src": "3031:134:4"
								},
								{
									"anonymous": false,
									"eventSelector": "90cbc6ad14a45cb8a21348dd4105f964f14f41ee0b36e5965b301804c8591f96",
									"id": 500,
									"name": "BlockHashStored",
									"nameLocation": "3177:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "3201:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3193:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockHash",
												"nameLocation": "3222:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3214:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3192:40:4"
									},
									"src": "3171:62:4"
								},
								{
									"anonymous": false,
									"eventSelector": "b2692b979a0ebbc948769201966bf3af4548dc99b201b0188d8f7d727c612b83",
									"id": 506,
									"name": "RandomnessMethodUpdated",
									"nameLocation": "3245:23:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockHash",
												"nameLocation": "3274:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3269:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3269:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": false,
												"mutability": "mutable",
												"name": "commitReveal",
												"nameLocation": "3290:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3285:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3285:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:35:4"
									},
									"src": "3239:65:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d6bb5132b8c1a381981b94d9eda2294ab5f22147ef4d46613202cf95d69d10f8",
									"id": 512,
									"name": "AuthorizedProviderUpdated",
									"nameLocation": "3316:25:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "3358:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3342:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"indexed": false,
												"mutability": "mutable",
												"name": "authorized",
												"nameLocation": "3373:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "3368:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3368:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3341:43:4"
									},
									"src": "3310:75:4"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "3499:221:4",
										"statements": [
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3510:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3510:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "3510:9:4"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "sequenceNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "3530:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3547:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3530:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3530:18:4"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "lastStoredBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3559:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3577:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3583:6:4",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3577:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3559:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "3559:30:4"
											},
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 532,
															"name": "historicalBlockHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3647:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 535,
														"indexExpression": {
															"expression": {
																"id": 533,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3669:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3675:6:4",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3669:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3647:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 537,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3695:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3701:6:4",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "3695:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3710:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3695:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 536,
															"name": "blockhash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967291,
															"src": "3685:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (uint256) view returns (bytes32)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3685:27:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3647:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "3647:65:4"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 515,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3487:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3491:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3487:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 517,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 514,
												"name": "Ownable",
												"nameLocations": [
													"3479:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3479:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3479:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3476:2:4"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3499:0:4"
									},
									"scope": 1857,
									"src": "3465:255:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3895:272:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "_useBlockHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "3914:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 556,
																"name": "_useCommitReveal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "3931:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3914:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c65617374206f6e65206d6574686f64206d75737420626520656e61626c6564",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3949:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f27af899a77a6a4787d55f82e14469f15da66da8824dd27bdadaf1096a76d35",
																"typeString": "literal_string \"At least one method must be enabled\""
															},
															"value": "At least one method must be enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f27af899a77a6a4787d55f82e14469f15da66da8824dd27bdadaf1096a76d35",
																"typeString": "literal_string \"At least one method must be enabled\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3906:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3906:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "3906:81:4"
											},
											{
												"expression": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 561,
														"name": "useBlockHashRandomness",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3998:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 562,
														"name": "_useBlockHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4023:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3998:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "3998:38:4"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 565,
														"name": "useCommitRevealScheme",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4047:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "_useCommitReveal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "4071:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4047:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4047:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "_useBlockHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "_useCommitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4142:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 569,
														"name": "RandomnessMethodUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "4103:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (bool,bool)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "EmitStatement",
												"src": "4098:61:4"
											}
										]
									},
									"functionSelector": "d598e967",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 551,
												"name": "onlyOwner",
												"nameLocations": [
													"3885:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3885:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3885:9:4"
										}
									],
									"name": "setRandomnessMethod",
									"nameLocation": "3813:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "_useBlockHash",
												"nameLocation": "3838:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3833:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3833:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "_useCommitReveal",
												"nameLocation": "3858:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3853:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3853:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:43:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3895:0:4"
									},
									"scope": 1857,
									"src": "3804:363:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4244:138:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 583,
																	"name": "_delay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "4263:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 584,
																	"name": "MIN_REVEAL_DELAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "4273:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4263:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 586,
																	"name": "_delay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "4293:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 587,
																	"name": "MAX_REVEAL_DELAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "4303:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4293:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4263:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642064656c6179",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4321:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1fadb79f4c9225a33360c5680cc52997a6812ba9bbf09fcf61bcfd1ea1c923c",
																"typeString": "literal_string \"Invalid delay\""
															},
															"value": "Invalid delay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1fadb79f4c9225a33360c5680cc52997a6812ba9bbf09fcf61bcfd1ea1c923c",
																"typeString": "literal_string \"Invalid delay\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4255:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "4255:82:4"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 593,
														"name": "commitRevealDelay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "4348:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 594,
														"name": "_delay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "4368:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4348:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "4348:26:4"
											}
										]
									},
									"functionSelector": "6b27e2bb",
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nameLocations": [
													"4234:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4234:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4234:9:4"
										}
									],
									"name": "setCommitRevealDelay",
									"nameLocation": "4188:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "_delay",
												"nameLocation": "4217:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4209:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:16:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:0:4"
									},
									"scope": 1857,
									"src": "4179:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "4479:186:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "provider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "4498:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4518:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4510:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 609,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4510:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4510:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4498:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f7669646572",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4522:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ca94f0ee3143561a1975a13643c9645b8339a06e48a4e5ed4df40a727cd280f",
																"typeString": "literal_string \"Invalid provider\""
															},
															"value": "Invalid provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ca94f0ee3143561a1975a13643c9645b8339a06e48a4e5ed4df40a727cd280f",
																"typeString": "literal_string \"Invalid provider\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4490:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "4490:51:4"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 617,
															"name": "authorizedProviders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4552:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 619,
														"indexExpression": {
															"id": 618,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4572:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4552:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 620,
														"name": "authorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "4584:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4552:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "4552:42:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 624,
															"name": "provider",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4636:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4646:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 623,
														"name": "AuthorizedProviderUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "4610:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4610:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "EmitStatement",
												"src": "4605:52:4"
											}
										]
									},
									"functionSelector": "27837eaf",
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 605,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 604,
												"name": "onlyOwner",
												"nameLocations": [
													"4469:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4469:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4469:9:4"
										}
									],
									"name": "setAuthorizedProvider",
									"nameLocation": "4403:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "4433:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4425:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "authorized",
												"nameLocation": "4448:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4443:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4443:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:35:4"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4479:0:4"
									},
									"scope": 1857,
									"src": "4394:271:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "4731:517:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 635,
																"name": "blockNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "4750:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 636,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4764:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4770:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "4764:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4750:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c6f636b206e6f7420796574206d696e6564",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4778:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc04a59d831ca94c4bd8f980b75e7ab8b4baa6a4d134d12ed5cc56c76c98ca7a",
																"typeString": "literal_string \"Block not yet mined\""
															},
															"value": "Block not yet mined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc04a59d831ca94c4bd8f980b75e7ab8b4baa6a4d134d12ed5cc56c76c98ca7a",
																"typeString": "literal_string \"Block not yet mined\""
															}
														],
														"id": 634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4742:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4742:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "4742:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 643,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4819:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4825:6:4",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "4819:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 645,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "4834:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4819:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323536",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4849:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "256"
															},
															"src": "4819:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c6f636b206861736820756e617661696c61626c65",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4854:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c08d9837ab85c9b0f2f0d00e7bb838ce7c4098ae5caf6f6966d37953c2daf01",
																"typeString": "literal_string \"Block hash unavailable\""
															},
															"value": "Block hash unavailable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c08d9837ab85c9b0f2f0d00e7bb838ce7c4098ae5caf6f6966d37953c2daf01",
																"typeString": "literal_string \"Block hash unavailable\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4811:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4811:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4811:68:4"
											},
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "blockHash",
														"nameLocation": "4908:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "4900:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 652,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4930:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 654,
														"name": "blockhash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967291,
														"src": "4920:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (uint256) view returns (bytes32)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4920:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4900:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "blockHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "4961:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4982:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4974:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 660,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4974:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4974:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4961:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420626c6f636b2068617368",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4986:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06efa4dfb2d40012f34132799d025db7854fd05b2ef724f6d3d41816f9f8d342",
																"typeString": "literal_string \"Invalid block hash\""
															},
															"value": "Invalid block hash"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06efa4dfb2d40012f34132799d025db7854fd05b2ef724f6d3d41816f9f8d342",
																"typeString": "literal_string \"Invalid block hash\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4953:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4953:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "4953:54:4"
											},
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 668,
															"name": "historicalBlockHashes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5028:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																"typeString": "mapping(uint256 => bytes32)"
															}
														},
														"id": 670,
														"indexExpression": {
															"id": 669,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5050:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5028:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 671,
														"name": "blockHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "5065:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5028:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "5028:46:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5089:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 675,
														"name": "lastStoredBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "5103:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5089:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "5085:91:4",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "5120:56:4",
													"statements": [
														{
															"expression": {
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 677,
																	"name": "lastStoredBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5135:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 678,
																	"name": "blockNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "5153:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5135:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "5135:29:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 684,
															"name": "blockNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5217:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 685,
															"name": "blockHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5230:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 683,
														"name": "BlockHashStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5201:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
															"typeString": "function (uint256,bytes32)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5201:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "EmitStatement",
												"src": "5196:44:4"
											}
										]
									},
									"functionSelector": "262fd733",
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeBlockHash",
									"nameLocation": "4686:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "4709:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4701:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4700:21:4"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4731:0:4"
									},
									"scope": 1857,
									"src": "4677:571:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5812:1171:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 703,
																		"name": "participants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5831:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5844:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5831:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5853:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5831:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 707,
																		"name": "participants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5858:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5871:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5858:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 709,
																	"name": "MAX_PARTICIPANTS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "5881:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5858:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5831:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061727469636970616e7420636f756e74",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5899:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f13e4d4126e4848f568be4fc0a991e7b5c3b03b7de7fde0851d0bd0d81b1d4e2",
																"typeString": "literal_string \"Invalid participant count\""
															},
															"value": "Invalid participant count"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f13e4d4126e4848f568be4fc0a991e7b5c3b03b7de7fde0851d0bd0d81b1d4e2",
																"typeString": "literal_string \"Invalid participant count\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5823:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5823:104:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "5823:104:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "useBlockHashRandomness",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "5946:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 717,
																"name": "useCommitRevealScheme",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5972:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5946:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072616e646f6d6e657373206d6574686f6420656e61626c6564",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5995:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7740ac227048c477492cc6b1d4e4aa448439074ab9a8a226b0d531bfdedfe1a",
																"typeString": "literal_string \"No randomness method enabled\""
															},
															"value": "No randomness method enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7740ac227048c477492cc6b1d4e4aa448439074ab9a8a226b0d531bfdedfe1a",
																"typeString": "literal_string \"No randomness method enabled\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5938:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5938:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5938:88:4"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 722,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6047:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6061:16:4",
														"subExpression": {
															"id": 723,
															"name": "sequenceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6061:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6047:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "6047:30:4"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 727,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "6125:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
																"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
															}
														},
														"id": 729,
														"indexExpression": {
															"id": 728,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6141:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6125:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
															"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 731,
																	"name": "RequestType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "6198:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																		"typeString": "type(enum CitreaLotteryEngine.RequestType)"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6210:16:4",
																"memberName": "WINNER_SELECTION",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 421,
																"src": "6198:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RequestType_$424",
																	"typeString": "enum CitreaLotteryEngine.RequestType"
																}
															},
															{
																"id": 733,
																"name": "participants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "6255:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															{
																"hexValue": "30",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6287:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6308:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 736,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6335:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6339:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6335:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6371:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"expression": {
																	"id": 739,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6405:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6411:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "6405:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 741,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6443:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6449:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6443:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6493:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6485:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 743,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6485:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6485:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 747,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6526:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6532:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6526:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 749,
																	"name": "commitRevealDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "6544:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6526:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 751,
																	"name": "useCommitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "6592:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 752,
																	"name": "useCommitRevealScheme",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6611:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6592:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_RequestType_$424",
																	"typeString": "enum CitreaLotteryEngine.RequestType"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 730,
															"name": "RandomRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "6156:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RandomRequest_$409_storage_ptr_$",
																"typeString": "type(struct CitreaLotteryEngine.RandomRequest storage pointer)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6185:11:4",
															"6241:12:4",
															"6282:3:4",
															"6303:3:4",
															"6324:9:4",
															"6360:9:4",
															"6391:12:4",
															"6432:9:4",
															"6473:10:4",
															"6510:14:4",
															"6576:14:4"
														],
														"names": [
															"requestType",
															"participants",
															"min",
															"max",
															"requester",
															"fulfilled",
															"requestBlock",
															"timestamp",
															"commitHash",
															"revealDeadline",
															"isCommitReveal"
														],
														"nodeType": "FunctionCall",
														"src": "6156:488:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_memory_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest memory"
														}
													},
													"src": "6125:519:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "6125:519:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 758,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6686:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 759,
																"name": "RequestType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "6699:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																	"typeString": "type(enum CitreaLotteryEngine.RequestType)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6711:16:4",
															"memberName": "WINNER_SELECTION",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 421,
															"src": "6699:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															}
														},
														{
															"id": 761,
															"name": "useCommitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "6729:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 757,
														"name": "RandomRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "6670:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_enum$_RequestType_$424_$_t_bool_$returns$__$",
															"typeString": "function (uint64,enum CitreaLotteryEngine.RequestType,bool)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6670:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "EmitStatement",
												"src": "6665:80:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6835:16:4",
														"subExpression": {
															"id": 764,
															"name": "useCommitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "6836:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6855:22:4",
														"subExpression": {
															"id": 766,
															"name": "useCommitRevealScheme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "6856:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6835:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "6831:106:4",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "6879:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 770,
																		"name": "sequenceNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "6913:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 769,
																	"name": "_tryResolveRequest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "6894:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6894:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "6894:31:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 775,
													"name": "sequenceNum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 700,
													"src": "6964:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 701,
												"id": 776,
												"nodeType": "Return",
												"src": "6957:18:4"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5342:306:4",
										"text": "@notice Select a random winner from participants using multiple randomness sources\n @param participants Array of participant addresses\n @param useCommitReveal Whether to use commit-reveal scheme for this request\n @return sequenceNum The sequence number for tracking this request"
									},
									"functionSelector": "461d54e9",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 697,
												"name": "whenNotPaused",
												"nameLocations": [
													"5769:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "5769:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5769:13:4"
										}
									],
									"name": "selectRandomWinner",
									"nameLocation": "5663:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "5709:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5692:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5692:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "5692:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "useCommitReveal",
												"nameLocation": "5737:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5732:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5732:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:78:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "5799:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5792:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 699,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5792:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5791:20:4"
									},
									"scope": 1857,
									"src": "5654:1329:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "7226:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7268:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7282:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 789,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "7244:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CitreaLotteryEngine_$1857",
																"typeString": "contract CitreaLotteryEngine"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7249:18:4",
														"memberName": "selectRandomWinner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 778,
														"src": "7244:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$returns$_t_uint64_$",
															"typeString": "function (address[] memory,bool) external returns (uint64)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7244:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 788,
												"id": 794,
												"nodeType": "Return",
												"src": "7237:51:4"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "6995:90:4",
										"text": "@notice Overloaded function for backward compatibility (defaults to block hash method)"
									},
									"functionSelector": "cd3b842e",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 785,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 784,
												"name": "whenNotPaused",
												"nameLocations": [
													"7179:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "7179:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7179:13:4"
										}
									],
									"name": "selectRandomWinner",
									"nameLocation": "7100:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "7136:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "7119:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 780,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7119:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 781,
													"nodeType": "ArrayTypeName",
													"src": "7119:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:31:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "7212:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 786,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7212:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7211:8:4"
									},
									"scope": 1857,
									"src": "7091:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "7760:1014:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 811,
																"name": "max",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "7779:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 812,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "7785:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7779:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072616e6765",
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7790:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec",
																"typeString": "literal_string \"Invalid range\""
															},
															"value": "Invalid range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86f5232cd420b5d8e89c0911fc290331f6cfd7bd7824383c43ece46e2a1c20ec",
																"typeString": "literal_string \"Invalid range\""
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7771:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7771:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "7771:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 818,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "7825:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 819,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "7831:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7825:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 822,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "7843:7:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			}
																		],
																		"id": 821,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7838:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7838:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint128",
																		"typeString": "type(uint128)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7852:3:4",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7838:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "7825:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52616e676520746f6f206c61726765",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7857:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a15982954d17e1c85785c152f48e44e4276a9034bddce22c25e0a10a93ee7782",
																"typeString": "literal_string \"Range too large\""
															},
															"value": "Range too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a15982954d17e1c85785c152f48e44e4276a9034bddce22c25e0a10a93ee7782",
																"typeString": "literal_string \"Range too large\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7817:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7817:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "7817:58:4"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "7896:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7910:16:4",
														"subExpression": {
															"id": 831,
															"name": "sequenceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "7910:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7896:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "7896:30:4"
											},
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "emptyArray",
														"nameLocation": "7954:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "7937:27:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7937:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 838,
															"nodeType": "ArrayTypeName",
															"src": "7937:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"nodeType": "VariableDeclarationStatement",
												"src": "7937:27:4"
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 841,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7985:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
																"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
															}
														},
														"id": 843,
														"indexExpression": {
															"id": 842,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8001:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7985:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
															"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 845,
																	"name": "RequestType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "8058:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																		"typeString": "type(enum CitreaLotteryEngine.RequestType)"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8070:13:4",
																"memberName": "RANDOM_NUMBER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 422,
																"src": "8058:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RequestType_$424",
																	"typeString": "enum CitreaLotteryEngine.RequestType"
																}
															},
															{
																"id": 847,
																"name": "emptyArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "8112:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															{
																"id": 848,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "8142:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 849,
																"name": "max",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "8165:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 850,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8194:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8198:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8194:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8230:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"expression": {
																	"id": 853,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8264:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8270:6:4",
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "8264:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 855,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8302:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8308:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8302:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8352:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8344:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 857,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "8344:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8344:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 861,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8385:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8391:9:4",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8385:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 863,
																	"name": "commitRevealDelay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "8403:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8385:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 865,
																	"name": "useCommitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "8451:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 866,
																	"name": "useCommitRevealScheme",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "8470:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8451:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_RequestType_$424",
																	"typeString": "enum CitreaLotteryEngine.RequestType"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 844,
															"name": "RandomRequest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8016:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RandomRequest_$409_storage_ptr_$",
																"typeString": "type(struct CitreaLotteryEngine.RandomRequest storage pointer)"
															}
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"8045:11:4",
															"8098:12:4",
															"8137:3:4",
															"8160:3:4",
															"8183:9:4",
															"8219:9:4",
															"8250:12:4",
															"8291:9:4",
															"8332:10:4",
															"8369:14:4",
															"8435:14:4"
														],
														"names": [
															"requestType",
															"participants",
															"min",
															"max",
															"requester",
															"fulfilled",
															"requestBlock",
															"timestamp",
															"commitHash",
															"revealDeadline",
															"isCommitReveal"
														],
														"nodeType": "FunctionCall",
														"src": "8016:487:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_memory_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest memory"
														}
													},
													"src": "7985:518:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "7985:518:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "8545:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 873,
																"name": "RequestType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "8558:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																	"typeString": "type(enum CitreaLotteryEngine.RequestType)"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8570:13:4",
															"memberName": "RANDOM_NUMBER",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 422,
															"src": "8558:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															}
														},
														{
															"id": 875,
															"name": "useCommitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "8585:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 871,
														"name": "RandomRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "8529:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_enum$_RequestType_$424_$_t_bool_$returns$__$",
															"typeString": "function (uint64,enum CitreaLotteryEngine.RequestType,bool)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8529:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "EmitStatement",
												"src": "8524:77:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8626:16:4",
														"subExpression": {
															"id": 878,
															"name": "useCommitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "8627:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8646:22:4",
														"subExpression": {
															"id": 880,
															"name": "useCommitRevealScheme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "8647:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8626:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 888,
												"nodeType": "IfStatement",
												"src": "8622:106:4",
												"trueBody": {
													"id": 887,
													"nodeType": "Block",
													"src": "8670:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "sequenceNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "8704:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 883,
																	"name": "_tryResolveRequest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "8685:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8685:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "8685:31:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 889,
													"name": "sequenceNum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "8755:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 809,
												"id": 890,
												"nodeType": "Return",
												"src": "8748:18:4"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "7308:286:4",
										"text": "@notice Generate a random number within a range\n @param min Minimum value (inclusive)\n @param max Maximum value (exclusive)\n @param useCommitReveal Whether to use commit-reveal scheme\n @return sequenceNum The sequence number for tracking this request"
									},
									"functionSelector": "e7c4155d",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 806,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 805,
												"name": "whenNotPaused",
												"nameLocations": [
													"7717:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "7717:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7717:13:4"
										}
									],
									"name": "getRandomNumber",
									"nameLocation": "7609:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "7643:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7635:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7635:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "7666:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7658:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7658:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "useCommitReveal",
												"nameLocation": "7685:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7680:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 802,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7680:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7624:83:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "7747:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7740:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 807,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7740:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7739:20:4"
									},
									"scope": 1857,
									"src": "7600:1174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "8977:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9016:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 907,
															"name": "max",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9021:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9026:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 904,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "8995:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CitreaLotteryEngine_$1857",
																"typeString": "contract CitreaLotteryEngine"
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9000:15:4",
														"memberName": "getRandomNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 892,
														"src": "8995:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint256,bool) external returns (uint64)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8995:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 903,
												"id": 910,
												"nodeType": "Return",
												"src": "8988:44:4"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8786:58:4",
										"text": "@notice Overloaded function for backward compatibility"
									},
									"functionSelector": "6e68fc0a",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "whenNotPaused",
												"nameLocations": [
													"8930:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "8930:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8930:13:4"
										}
									],
									"name": "getRandomNumber",
									"nameLocation": "8859:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "min",
												"nameLocation": "8883:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "8875:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8875:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "max",
												"nameLocation": "8896:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "8888:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8874:26:4"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "8963:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 901,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8963:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8962:8:4"
									},
									"scope": 1857,
									"src": "8850:190:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "9460:1046:4",
										"statements": [
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "9493:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "9471:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 925,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 924,
																"name": "RandomRequest",
																"nameLocations": [
																	"9471:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "9471:13:4"
															},
															"referencedDeclaration": 409,
															"src": "9471:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"baseExpression": {
														"id": 927,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "9503:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 929,
													"indexExpression": {
														"id": 928,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "9519:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9503:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9471:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 932,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "9550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9558:9:4",
																"memberName": "requester",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 396,
																"src": "9550:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9579:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9571:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 934,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9571:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9571:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9550:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657175657374206e6f7420666f756e64",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9583:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															},
															"value": "Request not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															}
														],
														"id": 931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9542:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9542:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "9542:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 943,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "9622:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																	"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9630:14:4",
															"memberName": "isCommitReveal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 408,
															"src": "9622:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206120636f6d6d69742d72657665616c2072657175657374",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9646:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50e19db97231a1b7914ce22dcbe9621dcbe8767e2737c3118325e735362adb11",
																"typeString": "literal_string \"Not a commit-reveal request\""
															},
															"value": "Not a commit-reveal request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50e19db97231a1b7914ce22dcbe9621dcbe8767e2737c3118325e735362adb11",
																"typeString": "literal_string \"Not a commit-reveal request\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9614:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9614:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "9614:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9695:18:4",
															"subExpression": {
																"expression": {
																	"id": 949,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "9696:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9704:9:4",
																"memberName": "fulfilled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 398,
																"src": "9696:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420616c72656164792066756c66696c6c6564",
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9715:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															},
															"value": "Request already fulfilled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9687:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9687:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "9687:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 956,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9762:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9768:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9762:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 958,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "9780:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9788:14:4",
																"memberName": "revealDeadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "9780:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9762:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d6d69746d656e7420706572696f6420656e646564",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9804:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e72294b3765969c6844396c3dece80eeb274151ffa3aa6faaaf19f93b20c7981",
																"typeString": "literal_string \"Commitment period ended\""
															},
															"value": "Commitment period ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e72294b3765969c6844396c3dece80eeb274151ffa3aa6faaaf19f93b20c7981",
																"typeString": "literal_string \"Commitment period ended\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9754:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9754:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "9754:76:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "commitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "9849:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9871:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9863:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "9863:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9863:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "9849:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6d6d69746d656e74",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9875:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37deded7645232335d6363ec0ce7bfd4fafcb64b738b05599f29832c44ad0e2b",
																"typeString": "literal_string \"Invalid commitment\""
															},
															"value": "Invalid commitment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37deded7645232335d6363ec0ce7bfd4fafcb64b738b05599f29832c44ad0e2b",
																"typeString": "literal_string \"Invalid commitment\""
															}
														],
														"id": 964,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9841:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9841:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "9841:55:4"
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "commitReveal",
														"nameLocation": "9938:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "9917:33:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.CommitReveal"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "CommitReveal",
																"nameLocations": [
																	"9917:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 420,
																"src": "9917:12:4"
															},
															"referencedDeclaration": 420,
															"src": "9917:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 977,
															"name": "commitReveals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "9953:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
															}
														},
														"id": 980,
														"indexExpression": {
															"expression": {
																"id": 978,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9967:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9971:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9967:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9953:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
														}
													},
													"id": 982,
													"indexExpression": {
														"id": 981,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "9979:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9953:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
														"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9917:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10010:22:4",
															"subExpression": {
																"expression": {
																	"id": 985,
																	"name": "commitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "10011:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10024:8:4",
																"memberName": "revealed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "10011:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792072657665616c6564",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10034:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
																"typeString": "literal_string \"Already revealed\""
															},
															"value": "Already revealed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
																"typeString": "literal_string \"Already revealed\""
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10002:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10002:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "10002:51:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 991,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10139:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10152:10:4",
														"memberName": "commitment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "10139:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10174:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10166:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 993,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10166:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10166:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10139:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "10135:116:4",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "10178:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1002,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10228:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10232:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10228:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 998,
																			"name": "requestRevealers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "10193:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(uint64 => address[] storage ref)"
																			}
																		},
																		"id": 1000,
																		"indexExpression": {
																			"id": 999,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "10210:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10193:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10223:4:4",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "10193:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10193:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "10193:46:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1008,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10271:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10284:10:4",
														"memberName": "commitment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "10271:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1011,
														"name": "commitment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "10297:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10271:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "10271:36:4"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1014,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10318:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10331:11:4",
														"memberName": "commitBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "10318:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1017,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10345:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10351:6:4",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "10345:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10318:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "10318:39:4"
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1021,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10368:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10381:14:4",
														"memberName": "revealDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 419,
														"src": "10368:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1024,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10398:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10406:14:4",
														"memberName": "revealDeadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 406,
														"src": "10398:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10368:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "10368:52:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1029,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "10462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 1030,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10475:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10479:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10475:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "commitment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "10487:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1028,
														"name": "CommitSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "10446:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (uint64,address,bytes32)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10446:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "EmitStatement",
												"src": "10441:57:4"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "9137:179:4",
										"text": "@notice Submit commitment for randomness generation\n @param sequenceNum The sequence number of the request\n @param commitment Keccak256 hash of (secret + salt)"
									},
									"functionSelector": "f2fcd328",
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 920,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 919,
												"name": "whenNotPaused",
												"nameLocations": [
													"9417:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "9417:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9417:13:4"
										},
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "nonReentrant",
												"nameLocations": [
													"9441:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "9441:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "9441:12:4"
										}
									],
									"name": "submitCommitment",
									"nameLocation": "9331:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "9355:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "9348:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 914,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9348:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "commitment",
												"nameLocation": "9376:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "9368:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 916,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9368:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9347:40:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9460:0:4"
									},
									"scope": 1857,
									"src": "9322:1184:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "10888:1117:4",
										"statements": [
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "10921:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "10899:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1051,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1050,
																"name": "RandomRequest",
																"nameLocations": [
																	"10899:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "10899:13:4"
															},
															"referencedDeclaration": 409,
															"src": "10899:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"baseExpression": {
														"id": 1053,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10931:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1055,
													"indexExpression": {
														"id": 1054,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "10947:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10931:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10899:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1058,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "10978:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10986:9:4",
																"memberName": "requester",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 396,
																"src": "10978:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11007:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10999:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10999:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10999:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10978:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657175657374206e6f7420666f756e64",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11011:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															},
															"value": "Request not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10970:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "10970:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1069,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "11050:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																	"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11058:14:4",
															"memberName": "isCommitReveal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 408,
															"src": "11050:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206120636f6d6d69742d72657665616c2072657175657374",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11074:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50e19db97231a1b7914ce22dcbe9621dcbe8767e2737c3118325e735362adb11",
																"typeString": "literal_string \"Not a commit-reveal request\""
															},
															"value": "Not a commit-reveal request"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50e19db97231a1b7914ce22dcbe9621dcbe8767e2737c3118325e735362adb11",
																"typeString": "literal_string \"Not a commit-reveal request\""
															}
														],
														"id": 1068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11042:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "11042:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11123:18:4",
															"subExpression": {
																"expression": {
																	"id": 1075,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11124:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11132:9:4",
																"memberName": "fulfilled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 398,
																"src": "11124:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420616c72656164792066756c66696c6c6564",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11143:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															},
															"value": "Request already fulfilled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11115:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11115:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "11115:56:4"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "commitReveal",
														"nameLocation": "11213:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "11192:33:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.CommitReveal"
														},
														"typeName": {
															"id": 1082,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1081,
																"name": "CommitReveal",
																"nameLocations": [
																	"11192:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 420,
																"src": "11192:12:4"
															},
															"referencedDeclaration": 420,
															"src": "11192:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1084,
															"name": "commitReveals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "11228:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
															}
														},
														"id": 1087,
														"indexExpression": {
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11242:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11246:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11242:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11228:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
														}
													},
													"id": 1089,
													"indexExpression": {
														"id": 1088,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "11254:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11228:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
														"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11192:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1092,
																	"name": "commitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "11285:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11298:10:4",
																"memberName": "commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "11285:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11320:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11312:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1094,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "11312:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11312:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "11285:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636f6d6d69746d656e7420666f756e64",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11324:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58f303d4cc09e1247f6f424c7d92c840240314295fc8a8799a6484f716ee2e99",
																"typeString": "literal_string \"No commitment found\""
															},
															"value": "No commitment found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58f303d4cc09e1247f6f424c7d92c840240314295fc8a8799a6484f716ee2e99",
																"typeString": "literal_string \"No commitment found\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11277:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11277:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "11277:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11365:22:4",
															"subExpression": {
																"expression": {
																	"id": 1103,
																	"name": "commitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "11366:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11379:8:4",
																"memberName": "revealed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "11366:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792072657665616c6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11389:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
																"typeString": "literal_string \"Already revealed\""
															},
															"value": "Already revealed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
																"typeString": "literal_string \"Already revealed\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11357:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11357:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "11357:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1110,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "11427:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11433:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "11427:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1112,
																	"name": "commitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "11446:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11459:14:4",
																"memberName": "revealDeadline",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 419,
																"src": "11446:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11427:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657665616c20706572696f6420656e646564",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11475:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5ee0d341ea49d6b3524354af0732779cb1df9ce2af1dd1164643506494cb38e",
																"typeString": "literal_string \"Reveal period ended\""
															},
															"value": "Reveal period ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5ee0d341ea49d6b3524354af0732779cb1df9ce2af1dd1164643506494cb38e",
																"typeString": "literal_string \"Reveal period ended\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11419:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11419:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "11419:78:4"
											},
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "expectedCommitment",
														"nameLocation": "11556:18:4",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "11548:26:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1118,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "11548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1123,
																	"name": "secret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "11604:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1124,
																	"name": "salt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "11612:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1125,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11618:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11622:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11618:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1121,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11587:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11591:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "11587:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11587:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1120,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "11577:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11577:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11548:82:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1131,
																	"name": "commitReveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "11649:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11662:10:4",
																"memberName": "commitment",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 411,
																"src": "11649:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1133,
																"name": "expectedCommitment",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "11676:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "11649:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657665616c",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11696:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9011bf05b33bdd4aa147b19581dbf78541882e8cea7c343255f966df51e06eb8",
																"typeString": "literal_string \"Invalid reveal\""
															},
															"value": "Invalid reveal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9011bf05b33bdd4aa147b19581dbf78541882e8cea7c343255f966df51e06eb8",
																"typeString": "literal_string \"Invalid reveal\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11641:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11641:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "11641:72:4"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1138,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "11734:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11747:11:4",
														"memberName": "revealValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "11734:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "secret",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "11761:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11734:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "11734:33:4"
											},
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1144,
															"name": "commitReveal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "11778:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11791:8:4",
														"memberName": "revealed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "11778:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11802:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11778:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "11778:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1151,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11848:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"expression": {
																"id": 1152,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11861:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11865:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11861:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "secret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "11873:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "RevealSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "11832:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint64,address,uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11832:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "EmitStatement",
												"src": "11827:53:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1158,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11985:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1157,
														"name": "_tryResolveCommitRevealRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "11954:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11954:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "11954:43:4"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "10518:216:4",
										"text": "@notice Reveal the committed value\n @param sequenceNum The sequence number of the request\n @param secret The secret value used in commitment\n @param salt Additional salt used in commitment"
									},
									"functionSelector": "52bfa7e5",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1046,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1045,
												"name": "whenNotPaused",
												"nameLocations": [
													"10861:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "10861:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "10861:13:4"
										},
										{
											"id": 1048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1047,
												"name": "nonReentrant",
												"nameLocations": [
													"10875:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "10875:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "10875:12:4"
										}
									],
									"name": "revealCommitment",
									"nameLocation": "10749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "10783:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "10776:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1038,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "10776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "secret",
												"nameLocation": "10814:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "10806:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10806:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "10840:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "10832:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10765:86:4"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10888:0:4"
									},
									"scope": 1857,
									"src": "10740:1265:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "12156:261:4",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "12189:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "12167:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1168,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1167,
																"name": "RandomRequest",
																"nameLocations": [
																	"12167:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "12167:13:4"
															},
															"referencedDeclaration": 409,
															"src": "12167:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1173,
												"initialValue": {
													"baseExpression": {
														"id": 1170,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "12199:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1172,
													"indexExpression": {
														"id": 1171,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "12215:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12199:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12167:60:4"
											},
											{
												"condition": {
													"expression": {
														"id": 1174,
														"name": "request",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "12242:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12250:9:4",
													"memberName": "fulfilled",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 398,
													"src": "12242:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "12238:30:4",
												"trueBody": {
													"functionReturnParameters": 1166,
													"id": 1176,
													"nodeType": "Return",
													"src": "12261:7:4"
												}
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "randomValue",
														"nameLocation": "12296:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "12288:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"arguments": [
														{
															"id": 1181,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "12331:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1180,
														"name": "_generateRandomValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "12310:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64) returns (uint256)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12310:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12288:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1185,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "12371:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1186,
															"name": "randomValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "12384:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "426c6f636b48617368",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12397:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7b154249ef9975550cd6a009b7bf0977bb7d6efea3d57ee77b0c721e98d6661a",
																"typeString": "literal_string \"BlockHash\""
															},
															"value": "BlockHash"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_7b154249ef9975550cd6a009b7bf0977bb7d6efea3d57ee77b0c721e98d6661a",
																"typeString": "literal_string \"BlockHash\""
															}
														],
														"id": 1184,
														"name": "_finalizeRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "12354:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint64,uint256,string memory)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12354:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "12354:55:4"
											}
										]
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryResolveRequest",
									"nameLocation": "12108:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "12134:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "12127:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1163,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12127:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12126:20:4"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12156:0:4"
									},
									"scope": 1857,
									"src": "12099:318:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "12498:1171:4",
										"statements": [
											{
												"assignments": [
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "12531:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "12509:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1197,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1196,
																"name": "RandomRequest",
																"nameLocations": [
																	"12509:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "12509:13:4"
															},
															"referencedDeclaration": 409,
															"src": "12509:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"baseExpression": {
														"id": 1199,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "12541:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1201,
													"indexExpression": {
														"id": 1200,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "12557:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12541:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12509:60:4"
											},
											{
												"condition": {
													"expression": {
														"id": 1203,
														"name": "request",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "12584:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12592:9:4",
													"memberName": "fulfilled",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 398,
													"src": "12584:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "12580:30:4",
												"trueBody": {
													"functionReturnParameters": 1195,
													"id": 1205,
													"nodeType": "Return",
													"src": "12603:7:4"
												}
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "revealers",
														"nameLocation": "12697:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "12679:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1209,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12679:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1210,
															"nodeType": "ArrayTypeName",
															"src": "12679:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"baseExpression": {
														"id": 1212,
														"name": "requestRevealers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "12709:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint64 => address[] storage ref)"
														}
													},
													"id": 1214,
													"indexExpression": {
														"id": 1213,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "12726:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12709:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12679:59:4"
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "validReveals",
														"nameLocation": "12757:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "12749:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12749:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"hexValue": "30",
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12772:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12749:24:4"
											},
											{
												"body": {
													"id": 1244,
													"nodeType": "Block",
													"src": "12841:130:4",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1231,
																			"name": "commitReveals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "12860:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																				"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
																			}
																		},
																		"id": 1235,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1232,
																				"name": "revealers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1211,
																				"src": "12874:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[] storage pointer"
																				}
																			},
																			"id": 1234,
																			"indexExpression": {
																				"id": 1233,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1221,
																				"src": "12884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12874:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12860:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
																			"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
																		}
																	},
																	"id": 1237,
																	"indexExpression": {
																		"id": 1236,
																		"name": "sequenceNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "12888:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12860:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12901:8:4",
																"memberName": "revealed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "12860:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1243,
															"nodeType": "IfStatement",
															"src": "12856:104:4",
															"trueBody": {
																"id": 1242,
																"nodeType": "Block",
																"src": "12911:49:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "12930:14:4",
																			"subExpression": {
																				"id": 1239,
																				"name": "validReveals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1217,
																				"src": "12930:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1241,
																		"nodeType": "ExpressionStatement",
																		"src": "12930:14:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "12814:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1225,
															"name": "revealers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "12818:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12828:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12818:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12814:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"initializationExpression": {
													"assignments": [
														1221
													],
													"declarations": [
														{
															"constant": false,
															"id": 1221,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12807:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1245,
															"src": "12799:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1220,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12799:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1223,
													"initialValue": {
														"hexValue": "30",
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12811:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12799:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12836:3:4",
														"subExpression": {
															"id": 1228,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12836:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1230,
													"nodeType": "ExpressionStatement",
													"src": "12836:3:4"
												},
												"nodeType": "ForStatement",
												"src": "12794:177:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1246,
															"name": "validReveals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "13056:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "13056:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1249,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "13077:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13083:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "13077:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"expression": {
																"id": 1251,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "13096:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																	"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13104:14:4",
															"memberName": "revealDeadline",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 406,
															"src": "13096:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13077:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13056:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1257,
												"nodeType": "IfStatement",
												"src": "13052:126:4",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "13120:58:4",
													"statements": [
														{
															"functionReturnParameters": 1195,
															"id": 1255,
															"nodeType": "Return",
															"src": "13135:7:4"
														}
													]
												}
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "randomValue",
														"nameLocation": "13206:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "13198:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13198:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"nodeType": "VariableDeclarationStatement",
												"src": "13198:19:4"
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "method",
														"nameLocation": "13242:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "13228:20:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1261,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "13228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1263,
												"nodeType": "VariableDeclarationStatement",
												"src": "13228:20:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1264,
														"name": "validReveals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "13273:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13288:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13273:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1288,
													"nodeType": "Block",
													"src": "13421:170:4",
													"statements": [
														{
															"expression": {
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1278,
																	"name": "randomValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "13489:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1280,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "13524:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		],
																		"id": 1279,
																		"name": "_generateRandomValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "13503:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$returns$_t_uint256_$",
																			"typeString": "function (uint64) returns (uint256)"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13503:33:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13489:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "13489:47:4"
														},
														{
															"expression": {
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1284,
																	"name": "method",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "13551:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "426c6f636b4861736846616c6c6261636b",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13560:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_eeb0cd8b15fdd79b1b0d7087f6545b18864f5b4e0bedfad191547d51875a675c",
																		"typeString": "literal_string \"BlockHashFallback\""
																	},
																	"value": "BlockHashFallback"
																},
																"src": "13551:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1287,
															"nodeType": "ExpressionStatement",
															"src": "13551:28:4"
														}
													]
												},
												"id": 1289,
												"nodeType": "IfStatement",
												"src": "13269:322:4",
												"trueBody": {
													"id": 1277,
													"nodeType": "Block",
													"src": "13291:124:4",
													"statements": [
														{
															"expression": {
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1267,
																	"name": "randomValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "13306:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1269,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "13353:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		],
																		"id": 1268,
																		"name": "_generateCommitRevealRandomValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "13320:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint64_$returns$_t_uint256_$",
																			"typeString": "function (uint64) view returns (uint256)"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13320:45:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13306:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "13306:59:4"
														},
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1273,
																	"name": "method",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "13380:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "436f6d6d697452657665616c",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13389:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_698cfa43c7b4d3029654a5330033bdc7e9c6dd147e5acfc4511ac5fb82adad23",
																		"typeString": "literal_string \"CommitReveal\""
																	},
																	"value": "CommitReveal"
																},
																"src": "13380:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "13380:23:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "13628:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1292,
															"name": "randomValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "13641:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1293,
															"name": "method",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "13654:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1290,
														"name": "_finalizeRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "13611:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint64,uint256,string memory)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13611:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "13611:50:4"
											}
										]
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryResolveCommitRevealRequest",
									"nameLocation": "12438:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "12476:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "12469:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1192,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "12469:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12468:20:4"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12498:0:4"
									},
									"scope": 1857,
									"src": "12429:1240:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "13758:609:4",
										"statements": [
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "13791:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "13769:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1305,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1304,
																"name": "RandomRequest",
																"nameLocations": [
																	"13769:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "13769:13:4"
															},
															"referencedDeclaration": 409,
															"src": "13769:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"baseExpression": {
														"id": 1307,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "13801:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1309,
													"indexExpression": {
														"id": 1308,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "13817:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13801:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13769:60:4"
											},
											{
												"assignments": [
													1312
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "entropy",
														"nameLocation": "13903:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "13895:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13895:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1319,
																								"name": "request",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1306,
																								"src": "13972:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																									"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																								}
																							},
																							"id": 1320,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13980:12:4",
																							"memberName": "requestBlock",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 400,
																							"src": "13972:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1321,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13995:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13972:24:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1327,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "14026:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1328,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14032:6:4",
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "14026:12:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1329,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14041:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "14026:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "13972:70:4",
																					"trueExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1323,
																								"name": "request",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1306,
																								"src": "13999:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																									"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																								}
																							},
																							"id": 1324,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "14007:12:4",
																							"memberName": "requestBlock",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 400,
																							"src": "13999:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14022:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "13999:24:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1318,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "13962:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13962:81:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1334,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "14068:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1335,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14074:6:4",
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"src": "14068:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1336,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14083:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "14068:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1333,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "14058:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14058:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1339,
																				"name": "historicalBlockHashes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "14100:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																					"typeString": "mapping(uint256 => bytes32)"
																				}
																			},
																			"id": 1341,
																			"indexExpression": {
																				"id": 1340,
																				"name": "lastStoredBlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "14122:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14100:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 1342,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "14153:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14159:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "14153:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1344,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "14183:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14189:10:4",
																			"memberName": "difficulty",
																			"nodeType": "MemberAccess",
																			"src": "14183:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1346,
																				"name": "request",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "14214:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																					"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																				}
																			},
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14222:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 402,
																			"src": "14214:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1348,
																				"name": "request",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "14246:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																					"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																				}
																			},
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14254:9:4",
																			"memberName": "requester",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 396,
																			"src": "14246:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "14278:7:4",
																			"subExpression": {
																				"id": 1350,
																				"name": "nonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 364,
																				"src": "14278:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1352,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "14300:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		],
																		"expression": {
																			"id": 1316,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "13931:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13935:12:4",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "13931:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13931:391:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1315,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "13921:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13921:402:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13913:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13913:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13913:411:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13895:429:4"
											},
											{
												"expression": {
													"id": 1357,
													"name": "entropy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1312,
													"src": "14352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1358,
												"nodeType": "Return",
												"src": "14345:14:4"
											}
										]
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomValue",
									"nameLocation": "13690:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "13718:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "13711:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13711:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13710:20:4"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "13749:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13749:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13748:9:4"
									},
									"scope": 1857,
									"src": "13681:686:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "14473:819:4",
										"statements": [
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "revealers",
														"nameLocation": "14502:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "14484:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1369,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14484:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1370,
															"nodeType": "ArrayTypeName",
															"src": "14484:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"baseExpression": {
														"id": 1372,
														"name": "requestRevealers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "14514:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint64 => address[] storage ref)"
														}
													},
													"id": 1374,
													"indexExpression": {
														"id": 1373,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "14531:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14514:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14484:59:4"
											},
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "combinedEntropy",
														"nameLocation": "14562:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "14554:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14554:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"hexValue": "30",
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14580:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14554:27:4"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "revealCount",
														"nameLocation": "14600:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "14592:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14592:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1383,
												"initialValue": {
													"hexValue": "30",
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14614:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14592:23:4"
											},
											{
												"body": {
													"id": 1418,
													"nodeType": "Block",
													"src": "14723:236:4",
													"statements": [
														{
															"assignments": [
																1397
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1397,
																	"mutability": "mutable",
																	"name": "reveal",
																	"nameLocation": "14759:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1418,
																	"src": "14738:27:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal"
																	},
																	"typeName": {
																		"id": 1396,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1395,
																			"name": "CommitReveal",
																			"nameLocations": [
																				"14738:12:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 420,
																			"src": "14738:12:4"
																		},
																		"referencedDeclaration": 420,
																		"src": "14738:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																			"typeString": "struct CitreaLotteryEngine.CommitReveal"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1405,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1398,
																		"name": "commitReveals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "14768:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																			"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
																		}
																	},
																	"id": 1402,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1399,
																			"name": "revealers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "14782:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																				"typeString": "address[] storage pointer"
																			}
																		},
																		"id": 1401,
																		"indexExpression": {
																			"id": 1400,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1385,
																			"src": "14792:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14782:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14768:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
																		"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
																	}
																},
																"id": 1404,
																"indexExpression": {
																	"id": 1403,
																	"name": "sequenceNum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "14796:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14768:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
																	"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14738:70:4"
														},
														{
															"condition": {
																"expression": {
																	"id": 1406,
																	"name": "reveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "14827:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14834:8:4",
																"memberName": "revealed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "14827:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1417,
															"nodeType": "IfStatement",
															"src": "14823:125:4",
															"trueBody": {
																"id": 1416,
																"nodeType": "Block",
																"src": "14844:104:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1408,
																				"name": "combinedEntropy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "14863:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1409,
																					"name": "reveal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1397,
																					"src": "14882:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
																						"typeString": "struct CitreaLotteryEngine.CommitReveal storage pointer"
																					}
																				},
																				"id": 1410,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "14889:11:4",
																				"memberName": "revealValue",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "14882:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14863:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1412,
																		"nodeType": "ExpressionStatement",
																		"src": "14863:37:4"
																	},
																	{
																		"expression": {
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "14919:13:4",
																			"subExpression": {
																				"id": 1413,
																				"name": "revealCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "14919:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1415,
																		"nodeType": "ExpressionStatement",
																		"src": "14919:13:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1388,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "14696:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1389,
															"name": "revealers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "14700:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14710:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14700:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14696:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"initializationExpression": {
													"assignments": [
														1385
													],
													"declarations": [
														{
															"constant": false,
															"id": 1385,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14689:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1419,
															"src": "14681:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1384,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14681:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1387,
													"initialValue": {
														"hexValue": "30",
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14693:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14681:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14718:3:4",
														"subExpression": {
															"id": 1392,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "14718:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1394,
													"nodeType": "ExpressionStatement",
													"src": "14718:3:4"
												},
												"nodeType": "ForStatement",
												"src": "14676:283:4"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1420,
														"name": "combinedEntropy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "15022:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1426,
																				"name": "combinedEntropy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "15089:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1428,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "15129:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1429,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "15135:6:4",
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "15129:12:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1430,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15144:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "15129:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1427,
																					"name": "blockhash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967291,
																					"src": "15119:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																						"typeString": "function (uint256) view returns (bytes32)"
																					}
																				},
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15119:27:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"expression": {
																					"id": 1433,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "15161:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15167:9:4",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "15161:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1435,
																				"name": "revealCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "15191:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1436,
																				"name": "sequenceNum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "15217:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint64",
																					"typeString": "uint64"
																				}
																			],
																			"expression": {
																				"id": 1424,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "15058:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "15062:12:4",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "15058:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15058:181:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1423,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "15048:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15048:192:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15040:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1421,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15040:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15040:201:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15022:219:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "15022:219:4"
											},
											{
												"expression": {
													"id": 1442,
													"name": "combinedEntropy",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1377,
													"src": "15269:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1443,
												"nodeType": "Return",
												"src": "15262:22:4"
											}
										]
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateCommitRevealRandomValue",
									"nameLocation": "14388:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "14428:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "14421:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1361,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14421:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14420:20:4"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "14464:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14463:9:4"
									},
									"scope": 1857,
									"src": "14379:913:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "15402:659:4",
										"statements": [
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "15435:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "15413:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1455,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1454,
																"name": "RandomRequest",
																"nameLocations": [
																	"15413:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "15413:13:4"
															},
															"referencedDeclaration": 409,
															"src": "15413:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"baseExpression": {
														"id": 1457,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "15445:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1459,
													"indexExpression": {
														"id": 1458,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "15461:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15445:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15413:60:4"
											},
											{
												"expression": {
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1461,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "15484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15492:9:4",
														"memberName": "fulfilled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "15484:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15504:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15484:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "15484:24:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RequestType_$424",
														"typeString": "enum CitreaLotteryEngine.RequestType"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1467,
															"name": "request",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "15533:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15541:11:4",
														"memberName": "requestType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "15533:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RequestType_$424",
															"typeString": "enum CitreaLotteryEngine.RequestType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1469,
															"name": "RequestType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "15556:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																"typeString": "type(enum CitreaLotteryEngine.RequestType)"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15568:16:4",
														"memberName": "WINNER_SELECTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 421,
														"src": "15556:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RequestType_$424",
															"typeString": "enum CitreaLotteryEngine.RequestType"
														}
													},
													"src": "15533:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RequestType_$424",
															"typeString": "enum CitreaLotteryEngine.RequestType"
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1495,
																"name": "request",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "15833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																	"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15841:11:4",
															"memberName": "requestType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 387,
															"src": "15833:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1497,
																"name": "RequestType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "15856:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RequestType_$424_$",
																	"typeString": "type(enum CitreaLotteryEngine.RequestType)"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "15868:13:4",
															"memberName": "RANDOM_NUMBER",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 422,
															"src": "15856:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RequestType_$424",
																"typeString": "enum CitreaLotteryEngine.RequestType"
															}
														},
														"src": "15833:48:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1522,
													"nodeType": "IfStatement",
													"src": "15829:225:4",
													"trueBody": {
														"id": 1521,
														"nodeType": "Block",
														"src": "15883:171:4",
														"statements": [
															{
																"assignments": [
																	1501
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1501,
																		"mutability": "mutable",
																		"name": "result",
																		"nameLocation": "15906:6:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1521,
																		"src": "15898:14:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1500,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15898:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1514,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1502,
																			"name": "request",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "15915:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																				"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																			}
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15923:3:4",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "15915:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1504,
																					"name": "randomValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1449,
																					"src": "15930:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1505,
																									"name": "request",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1456,
																									"src": "15945:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																										"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																									}
																								},
																								"id": 1506,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15953:3:4",
																								"memberName": "max",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 394,
																								"src": "15945:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"expression": {
																									"id": 1507,
																									"name": "request",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1456,
																									"src": "15959:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																										"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																									}
																								},
																								"id": 1508,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15967:3:4",
																								"memberName": "min",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 392,
																								"src": "15959:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15945:25:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1510,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15944:27:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15930:41:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1512,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "15929:43:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15915:57:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "15898:74:4"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"id": 1516,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "16014:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1517,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "16022:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		{
																			"id": 1518,
																			"name": "method",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "16035:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1515,
																		"name": "RandomNumberGenerated",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "15992:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint64_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (uint256,uint64,string memory)"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15992:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1520,
																"nodeType": "EmitStatement",
																"src": "15987:55:4"
															}
														]
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "15529:525:4",
												"trueBody": {
													"id": 1494,
													"nodeType": "Block",
													"src": "15586:237:4",
													"statements": [
														{
															"assignments": [
																1473
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1473,
																	"mutability": "mutable",
																	"name": "winnerIndex",
																	"nameLocation": "15609:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1494,
																	"src": "15601:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1472,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15601:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1479,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1474,
																	"name": "randomValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "15623:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1475,
																			"name": "request",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "15637:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																				"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																			}
																		},
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15645:12:4",
																		"memberName": "participants",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 390,
																		"src": "15637:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15658:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15637:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15623:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15601:63:4"
														},
														{
															"assignments": [
																1481
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1481,
																	"mutability": "mutable",
																	"name": "winner",
																	"nameLocation": "15687:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1494,
																	"src": "15679:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1480,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15679:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1486,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1482,
																		"name": "request",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1456,
																		"src": "15696:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																			"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15704:12:4",
																	"memberName": "participants",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 390,
																	"src": "15696:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1485,
																"indexExpression": {
																	"id": 1484,
																	"name": "winnerIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "15717:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15696:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15679:50:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1488,
																		"name": "winner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "15770:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1489,
																		"name": "randomValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "15778:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1490,
																		"name": "sequenceNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "15791:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"id": 1491,
																		"name": "method",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "15804:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1487,
																	"name": "RandomWinnerSelected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "15749:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint64_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,uint64,string memory)"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15749:62:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1493,
															"nodeType": "EmitStatement",
															"src": "15744:67:4"
														}
													]
												}
											}
										]
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_finalizeRequest",
									"nameLocation": "15313:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "15337:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "15330:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1446,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "15330:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "randomValue",
												"nameLocation": "15358:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "15350:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15350:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "method",
												"nameLocation": "15385:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "15371:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15371:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15329:63:4"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15402:0:4"
									},
									"scope": 1857,
									"src": "15304:757:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "16361:693:4",
										"statements": [
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "request",
														"nameLocation": "16394:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "16372:29:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
															"typeString": "struct CitreaLotteryEngine.RandomRequest"
														},
														"typeName": {
															"id": 1538,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1537,
																"name": "RandomRequest",
																"nameLocations": [
																	"16372:13:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 409,
																"src": "16372:13:4"
															},
															"referencedDeclaration": 409,
															"src": "16372:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																"typeString": "struct CitreaLotteryEngine.RandomRequest"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"baseExpression": {
														"id": 1540,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "16404:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1542,
													"indexExpression": {
														"id": 1541,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "16420:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16404:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16372:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1545,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "16451:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16459:9:4",
																"memberName": "requester",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 396,
																"src": "16451:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16480:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16472:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1547,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16472:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16472:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16451:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657175657374206e6f7420666f756e64",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16484:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															},
															"value": "Request not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204",
																"typeString": "literal_string \"Request not found\""
															}
														],
														"id": 1544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16443:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16443:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "16443:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16523:18:4",
															"subExpression": {
																"expression": {
																	"id": 1556,
																	"name": "request",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "16524:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
																		"typeString": "struct CitreaLotteryEngine.RandomRequest storage pointer"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16532:9:4",
																"memberName": "fulfilled",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 398,
																"src": "16524:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420616c72656164792066756c66696c6c6564",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16543:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															},
															"value": "Request already fulfilled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52fc2292162ea9abf0f8251837e3b75846031996a7b81ef4cf94cf516b351442",
																"typeString": "literal_string \"Request already fulfilled\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16515:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16515:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "16515:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1565,
																			"name": "reason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "16596:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16590:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1563,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "16590:5:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16590:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16604:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16590:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16613:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16590:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742070726f7669646520726561736f6e",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16616:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98eae86230ad2e307ea75099497e15f2985e3a65615370cc19ce02a37aef48bd",
																"typeString": "literal_string \"Must provide reason\""
															},
															"value": "Must provide reason"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98eae86230ad2e307ea75099497e15f2985e3a65615370cc19ce02a37aef48bd",
																"typeString": "literal_string \"Must provide reason\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16582:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16582:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "16582:56:4"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "randomValue",
														"nameLocation": "16727:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "16719:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16719:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1581,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "16800:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1582,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "16806:6:4",
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"src": "16800:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1583,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16815:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "16800:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1580,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "16790:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16790:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 1586,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "16832:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "16838:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "16832:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1588,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "16862:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "16868:10:4",
																			"memberName": "difficulty",
																			"nodeType": "MemberAccess",
																			"src": "16862:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1590,
																			"name": "sequenceNum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "16893:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		{
																			"id": 1591,
																			"name": "reason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "16919:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 1578,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "16759:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16763:12:4",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "16759:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16759:177:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1577,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "16749:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16749:188:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16741:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1575,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16741:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16741:197:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16719:219:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "16976:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1598,
															"name": "randomValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "16989:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "4d616e75616c3a",
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17026:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_93c70936e28a48c5519bd96beb4d3c82d1f8f3d2703cbe2a013612b517a8e6d3",
																				"typeString": "literal_string \"Manual:\""
																			},
																			"value": "Manual:"
																		},
																		{
																			"id": 1604,
																			"name": "reason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1530,
																			"src": "17037:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_93c70936e28a48c5519bd96beb4d3c82d1f8f3d2703cbe2a013612b517a8e6d3",
																				"typeString": "literal_string \"Manual:\""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 1601,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "17009:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "17013:12:4",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "17009:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17009:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17002:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1599,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "17002:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17002:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1596,
														"name": "_finalizeRequest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "16959:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint64,uint256,string memory)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16959:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "16959:87:4"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "16147:68:4",
										"text": "@notice Manually resolve a request (owner only, for emergencies)"
									},
									"functionSelector": "45c70069",
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1533,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1532,
												"name": "onlyOwner",
												"nameLocations": [
													"16322:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "16322:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "16322:9:4"
										},
										{
											"id": 1535,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1534,
												"name": "nonReentrant",
												"nameLocations": [
													"16342:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "16342:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "16342:12:4"
										}
									],
									"name": "manualResolveRequest",
									"nameLocation": "16230:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "16258:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "16251:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1527,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "16251:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "16285:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "16271:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16271:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16250:42:4"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16361:0:4"
									},
									"scope": 1857,
									"src": "16221:833:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "17265:425:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1619,
																	"name": "participants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "17284:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17297:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "17284:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17306:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17284:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207061727469636970616e7473",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17309:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f",
																"typeString": "literal_string \"No participants\""
															},
															"value": "No participants"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f",
																"typeString": "literal_string \"No participants\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17276:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17276:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "17276:51:4"
											},
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "randomSeed",
														"nameLocation": "17356:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1661,
														"src": "17348:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17348:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1634,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "17428:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17434:6:4",
																						"memberName": "number",
																						"nodeType": "MemberAccess",
																						"src": "17428:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17443:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "17428:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1633,
																				"name": "blockhash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967291,
																				"src": "17418:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17418:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 1639,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "17460:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17466:9:4",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "17460:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1641,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "17490:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17496:10:4",
																			"memberName": "difficulty",
																			"nodeType": "MemberAccess",
																			"src": "17490:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1643,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "17521:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "17525:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "17521:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1645,
																			"name": "nonce",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "17546:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1631,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "17387:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "17391:12:4",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "17387:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17387:175:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1630,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "17377:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17377:186:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17369:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17369:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17369:195:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17348:216:4"
											},
											{
												"assignments": [
													1651
												],
												"declarations": [
													{
														"constant": false,
														"id": 1651,
														"mutability": "mutable",
														"name": "winnerIndex",
														"nameLocation": "17593:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1661,
														"src": "17585:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1650,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17585:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1652,
														"name": "randomSeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "17607:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"expression": {
															"id": 1653,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "17620:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17633:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17620:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17607:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17585:54:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1657,
														"name": "participants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "17657:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1659,
													"indexExpression": {
														"id": 1658,
														"name": "winnerIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "17670:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17657:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1617,
												"id": 1660,
												"nodeType": "Return",
												"src": "17650:32:4"
											}
										]
									},
									"functionSelector": "58859d74",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewRandomWinner",
									"nameLocation": "17146:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "17183:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "17166:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17166:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "17166:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17165:31:4"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "17250:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17250:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17249:9:4"
									},
									"scope": 1857,
									"src": "17137:553:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "17823:54:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1670,
														"name": "pendingRequests",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "17841:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
														}
													},
													"id": 1672,
													"indexExpression": {
														"id": 1671,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "17857:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17841:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
														"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1673,
												"nodeType": "Return",
												"src": "17834:35:4"
											}
										]
									},
									"functionSelector": "cbbf67ec",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRequest",
									"nameLocation": "17711:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "17729:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "17722:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1663,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "17722:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17721:20:4"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "17795:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RandomRequest_$409_memory_ptr",
													"typeString": "struct CitreaLotteryEngine.RandomRequest"
												},
												"typeName": {
													"id": 1667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1666,
														"name": "RandomRequest",
														"nameLocations": [
															"17795:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 409,
														"src": "17795:13:4"
													},
													"referencedDeclaration": 409,
													"src": "17795:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RandomRequest_$409_storage_ptr",
														"typeString": "struct CitreaLotteryEngine.RandomRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17794:22:4"
									},
									"scope": 1857,
									"src": "17702:175:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "18002:64:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1682,
															"name": "pendingRequests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "18020:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_RandomRequest_$409_storage_$",
																"typeString": "mapping(uint64 => struct CitreaLotteryEngine.RandomRequest storage ref)"
															}
														},
														"id": 1684,
														"indexExpression": {
															"id": 1683,
															"name": "sequenceNum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "18036:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18020:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RandomRequest_$409_storage",
															"typeString": "struct CitreaLotteryEngine.RandomRequest storage ref"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18049:9:4",
													"memberName": "fulfilled",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 398,
													"src": "18020:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1686,
												"nodeType": "Return",
												"src": "18013:45:4"
											}
										]
									},
									"functionSelector": "0f855ec2",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRequestFulfilled",
									"nameLocation": "17898:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "17924:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "17917:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1676,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "17917:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17916:20:4"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "17990:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17990:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17989:6:4"
									},
									"scope": 1857,
									"src": "17889:177:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "18221:62:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1698,
															"name": "commitReveals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "18239:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
															}
														},
														"id": 1700,
														"indexExpression": {
															"id": 1699,
															"name": "revealer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "18253:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18239:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
															"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
														}
													},
													"id": 1702,
													"indexExpression": {
														"id": 1701,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "18263:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18239:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
														"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1703,
												"nodeType": "Return",
												"src": "18232:43:4"
											}
										]
									},
									"functionSelector": "fe6d06b4",
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCommitReveal",
									"nameLocation": "18087:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "revealer",
												"nameLocation": "18111:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "18103:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "18128:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "18121:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1691,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18121:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18102:38:4"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "18194:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CommitReveal_$420_memory_ptr",
													"typeString": "struct CitreaLotteryEngine.CommitReveal"
												},
												"typeName": {
													"id": 1695,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1694,
														"name": "CommitReveal",
														"nameLocations": [
															"18194:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 420,
														"src": "18194:12:4"
													},
													"referencedDeclaration": 420,
													"src": "18194:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CommitReveal_$420_storage_ptr",
														"typeString": "struct CitreaLotteryEngine.CommitReveal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18193:21:4"
									},
									"scope": 1857,
									"src": "18078:205:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "18424:55:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1713,
														"name": "requestRevealers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "18442:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint64 => address[] storage ref)"
														}
													},
													"id": 1715,
													"indexExpression": {
														"id": 1714,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "18459:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18442:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1716,
												"nodeType": "Return",
												"src": "18435:36:4"
											}
										]
									},
									"functionSelector": "23806fad",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRevealersForRequest",
									"nameLocation": "18304:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "18334:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "18327:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1706,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18327:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18326:20:4"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "18400:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1709,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18400:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1710,
													"nodeType": "ArrayTypeName",
													"src": "18400:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18399:18:4"
									},
									"scope": 1857,
									"src": "18295:184:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "18713:386:4",
										"statements": [
											{
												"assignments": [
													1733
												],
												"declarations": [
													{
														"constant": false,
														"id": 1733,
														"mutability": "mutable",
														"name": "revealers",
														"nameLocation": "18742:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1775,
														"src": "18724:27:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1731,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18724:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1732,
															"nodeType": "ArrayTypeName",
															"src": "18724:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"baseExpression": {
														"id": 1734,
														"name": "requestRevealers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "18754:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint64 => address[] storage ref)"
														}
													},
													"id": 1736,
													"indexExpression": {
														"id": 1735,
														"name": "sequenceNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "18771:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18754:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18724:59:4"
											},
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "totalRevealers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "18794:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1739,
															"name": "revealers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "18811:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18821:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18794:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "18794:33:4"
											},
											{
												"body": {
													"id": 1767,
													"nodeType": "Block",
													"src": "18895:131:4",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1754,
																			"name": "commitReveals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "18914:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$_$",
																				"typeString": "mapping(address => mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref))"
																			}
																		},
																		"id": 1758,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1755,
																				"name": "revealers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1733,
																				"src": "18928:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																					"typeString": "address[] storage pointer"
																				}
																			},
																			"id": 1757,
																			"indexExpression": {
																				"id": 1756,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "18938:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18928:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18914:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_CommitReveal_$420_storage_$",
																			"typeString": "mapping(uint64 => struct CitreaLotteryEngine.CommitReveal storage ref)"
																		}
																	},
																	"id": 1760,
																	"indexExpression": {
																		"id": 1759,
																		"name": "sequenceNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "18942:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18914:40:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_CommitReveal_$420_storage",
																		"typeString": "struct CitreaLotteryEngine.CommitReveal storage ref"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18955:8:4",
																"memberName": "revealed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "18914:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1766,
															"nodeType": "IfStatement",
															"src": "18910:105:4",
															"trueBody": {
																"id": 1765,
																"nodeType": "Block",
																"src": "18965:50:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "18984:15:4",
																			"subExpression": {
																				"id": 1762,
																				"name": "revealedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "18984:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1764,
																		"nodeType": "ExpressionStatement",
																		"src": "18984:15:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "18868:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1748,
															"name": "revealers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "18872:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18882:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18872:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18868:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"initializationExpression": {
													"assignments": [
														1744
													],
													"declarations": [
														{
															"constant": false,
															"id": 1744,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "18861:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1768,
															"src": "18853:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1743,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "18853:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1746,
													"initialValue": {
														"hexValue": "30",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18865:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "18853:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "18890:3:4",
														"subExpression": {
															"id": 1751,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "18890:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1753,
													"nodeType": "ExpressionStatement",
													"src": "18890:3:4"
												},
												"nodeType": "ForStatement",
												"src": "18848:178:4"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1769,
														"name": "pendingCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "19046:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1770,
															"name": "totalRevealers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "19061:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1771,
															"name": "revealedCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "19078:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19061:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19046:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "19046:45:4"
											}
										]
									},
									"functionSelector": "d21fb421",
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRevealStats",
									"nameLocation": "18500:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "sequenceNum",
												"nameLocation": "18522:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "18515:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1719,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "18515:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18514:20:4"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "totalRevealers",
												"nameLocation": "18610:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "18602:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18602:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "revealedCount",
												"nameLocation": "18647:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "18639:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18639:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "pendingCount",
												"nameLocation": "18683:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "18675:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18675:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18587:119:4"
									},
									"scope": 1857,
									"src": "18491:608:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "19232:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1781,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "19243:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19243:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "19243:8:4"
											}
										]
									},
									"functionSelector": "51858e27",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1778,
												"name": "onlyOwner",
												"nameLocations": [
													"19222:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "19222:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19222:9:4"
										}
									],
									"name": "emergencyPause",
									"nameLocation": "19196:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19210:2:4"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19232:0:4"
									},
									"scope": 1857,
									"src": "19187:72:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "19318:29:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1790,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "19329:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19329:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "19329:10:4"
											}
										]
									},
									"functionSelector": "4a4e3bd5",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1788,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1787,
												"name": "onlyOwner",
												"nameLocations": [
													"19308:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "19308:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19308:9:4"
										}
									],
									"name": "emergencyUnpause",
									"nameLocation": "19280:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19296:2:4"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19318:0:4"
									},
									"scope": 1857,
									"src": "19271:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "19473:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "19492:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19506:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19498:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1807,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19498:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19498:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19492:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19510:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19484:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19484:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "19484:46:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1816,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "19549:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1819,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "19567:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CitreaLotteryEngine_$1857",
																				"typeString": "contract CitreaLotteryEngine"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CitreaLotteryEngine_$1857",
																				"typeString": "contract CitreaLotteryEngine"
																			}
																		],
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "19559:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1817,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "19559:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19559:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19573:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "19559:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19549:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19582:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19541:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19541:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1825,
												"nodeType": "ExpressionStatement",
												"src": "19541:64:4"
											},
											{
												"assignments": [
													1827,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1827,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "19632:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "19627:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1826,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19627:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19677:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1830,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "19653:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19645:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19645:8:4",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19645:11:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19657:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "19645:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1798,
																"src": "19669:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "19645:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19645:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19626:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1839,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "19699:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19708:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19691:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19691:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "19691:37:4"
											}
										]
									},
									"functionSelector": "f3fef3a3",
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1800,
												"name": "onlyOwner",
												"nameLocations": [
													"19434:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "19434:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19434:9:4"
										},
										{
											"id": 1803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1802,
												"name": "nonReentrant",
												"nameLocations": [
													"19454:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "19454:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "19454:12:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "19368:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19385:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "19377:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19397:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "19389:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19389:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19376:28:4"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19473:0:4"
									},
									"scope": 1857,
									"src": "19359:377:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "19848:63:4",
										"statements": []
									},
									"id": 1848,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19828:2:4"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19848:0:4"
									},
									"scope": 1857,
									"src": "19821:90:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "19951:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "46756e6374696f6e206e6f7420666f756e64",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19969:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d",
																"typeString": "literal_string \"Function not found\""
															},
															"value": "Function not found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b9c7f9fb4d10afcebf26c5daf76290a584c3f270eee838d3acb27fb2fe13b11d",
																"typeString": "literal_string \"Function not found\""
															}
														],
														"id": 1851,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "19962:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19962:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "19962:28:4"
											}
										]
									},
									"id": 1856,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19931:2:4"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19951:0:4"
									},
									"scope": 1857,
									"src": "19923:75:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1858,
							"src": "466:19535:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								158,
								163,
								461,
								469,
								478,
								486,
								494,
								500,
								506,
								512
							]
						}
					],
					"src": "33:19968:4"
				},
				"id": 4
			}
		}
	}
}